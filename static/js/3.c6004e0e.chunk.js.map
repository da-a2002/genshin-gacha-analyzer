{"version":3,"sources":["../node_modules/canvas-datagrid/lib/main.js","../node_modules/canvas-datagrid/lib/defaults.js","../node_modules/canvas-datagrid/lib/component.js","../node_modules/canvas-datagrid/lib/draw.js","../node_modules/canvas-datagrid/lib/events.js","../node_modules/is-printable-key-event/dist/index.js","../node_modules/canvas-datagrid/lib/touch.js","../node_modules/canvas-datagrid/lib/contextMenu.js","../node_modules/canvas-datagrid/lib/dom.js","../node_modules/canvas-datagrid/lib/publicMethods.js","../node_modules/canvas-datagrid/lib/intf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["webComponent","component","modules","defaults","draw","events","touch","intf","contextMenu","dom","publicMethods","Grid","args","self","isComponent","undefined","isChildGrid","parentNode","test","nodeType","eval","document","createElement","applyComponentStyle","hyphenateProperty","dehyphenateProperty","createGrid","forEach","module","shadowRoot","attachShadow","mode","init","canvasDatagrid","i","tKeys","window","customElements","Object","keys","argKey","indexOf","attributes","tKey","sKey","data","appendChild","HTMLElement","prototype","create","observedAttributes","getObservableAttributes","disconnectedCallback","attributeChangedCallback","connectedCallback","adoptedCallback","define","require","EXCLUDE_GLOBAL","styles","typeMap","prop","replace","nextLetterCap","p","Array","call","char","toUpperCase","cust","toLowerCase","supressChangeAndDrawEvents","cStyle","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","string","str","attrs","attr","push","this","connected","parentDOMNode","innerHTML","observe","attrName","oldVal","newVal","tfn","dataType","base","item","filter","getDefaultItem","addEventListener","Function","name","MutationObserver","mutations","checkInnerHTML","checkStyle","mutation","attributeName","target","nodeName","addedNodes","length","type","characterData","childList","subtree","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","html","drawOnAllImagesLoaded","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","fillCircle","strokeHandle","stroke","strokeCircle","addBorderLine","c","pos","t","l","internal","parentGrid","visible","checkScrollHeight","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","rowData","aCell","viewData","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","columnOrderIndex","rowOrderIndex","headerIndex","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","d","o","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","index","order","rArgs","rhIndex","filteredRowNumber","getBoundRowIndexFromViewRowIndex","rowHeaderValue","hasActiveFilters","rowHeaderCell","headerDescription","sizes","openChildren","drawRowHeader","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","drawHeaders","my","mx","xHover","yHover","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","drawFrozenMarkers","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","addselectionHandle","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","m","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","sortColumnIndex","drawReorderMarkers","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","drawSelectionBorders","drawCorner","en","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","drawScrollBars","showPerformance","debug","pop","font","debugFont","perf","reduce","a","toFixed","perfDelta","frozenColumnsWidth","s","getColummnWidth","getFrozenColumnsWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","drawDebug","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","drawPerfLine","debugPerfChartTextColor","drawPerfLines","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","selections","isHeader","cellGridAttributes","cellStyle","isCorner","isColumnHeader","wrap","cellWhiteSpace","selected","hovered","hovers","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","value","row","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","viewRowIndex","viewColumnIndex","boundRowIndex","boundColumnIndex","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","drawTreeArrow","showRowNumbers","childGrids","saveAppearance","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","drawOrderByArrow","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","measure","splice","originText","stepLength","direction","substr","wrapText","vPos","hPos","stringify","pw","idx","idx_ord","map","drawText","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","createHandlesOverlayArray","moveOffset","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","wheeling","stopPropagation","fn","removeEventListener","sfn","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","scrollCache","accumulator","column","va","setCanvasSize","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","dontDraw","floor","ellipsisCache","mousemove","overridePos","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","scrollModes","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","dragAddToSelection","selectRow","selectionBounds","selectArea","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","selectColumn","treeArrowClickRadius","toggleTree","sb","defineProperty","get","getSelectedData","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","source","reorderDeadZone","stopDragReorder","oIndex","tIndex","cr","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","concat","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","isPrintableKeyEvent","beginEditAt","selectNone","Number","isArrowKey","includes","scrollIntoView","selectionFollowsActiveCell","selectedData","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","pasteValue","mimeType","startRowIndex","startColIndex","getVisibleSchema","substring","match","parseData","cellData","forEachSelectedCell","colName","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","originalData","affectedCells","refresh","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleColumnIndexOf","paste","event","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","pasteType","getAsString","join","cut","copy","outputHeaderKeys","tableRows","textRows","outputHeaders","sData","rowKeys","trRow","textRow","sSorted","fCopyCell","addCellValue","addHeaders","setData","htmlSafe","headers","useHtml","hVal","exports","enumerable","Symbol","toStringTag","__esModule","bind","default","hasOwnProperty","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","rect","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchCell","clearInterval","calculatePPSTimer","touchDeadZone","touchingCell","editCell","touchstart","changedTouches","startingCell","disposeContextMenu","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","contextmenuEvent","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","touchMove","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","container","upArrow","downArrow","children","selectedIndex","isArray","checkArrowVisibility","removeChild","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","loc","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","dispose","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","addItem","position","contextMenuArrowColor","el","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","contextMenuWindowMargin","innerWidth","clickIndex","Event","set","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","invalidFilterRegEx","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","autoCompleteItems","count","blanksItem","cellValue","String","trim","blankValues","blanksText","maxAutoCompleteItems","disposeAutocomplete","fillAutoComplete","onclick","setFilter","filterOptionText","contextFilterButtonHTML","cf","getHeaderByName","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","createColumnOrders","storedSettings","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","addDefaultContextMenuItem","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","createDiposeEvent","getClippingRect","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","clipElement","scrollingElement","borderWidth","getVisibleCellByIndex","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","newValue","oldValue","changes","defaultValue","aborted","addRow","createNewRowData","inEnterMode","enumItems","enu","option","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","verticalAlign","marginLeft","padding","border","contextFilterInputBorder","borderRadius","contextFilterInputBorderRadius","fontWeight","fontFamily","contextFilterInputFontFamily","contextFilterInputFontSize","contextMenuBackground","contextMenuColor","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","contextMenuFontFamily","contextMenuFontSize","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","opacity","contextMenuOpacity","overflow","contextMenuHoverBackground","contextMenuHoverColor","display","boxSizing","outline","margin","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuItemMargin","contextMenuItemBorderRadius","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","maxWidth","contextMenuLabelMaxWidth","contextMenuCursor","contextMenuFilterInvalidExpresion","appendTo","setDom","eventParent","onblur","blur","parentIsCanvas","getContext","textBaseline","integerToAlpha","ordA","charCodeAt","len","fromCharCode","insertColumn","validateColumn","applyDefaultValue","deleteColumn","addColumn","deleteRow","insertRow","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","findRowScrollTop","RangeError","findColumnScrollLeft","gotoCell","offsetX","offsetY","targetX","targetY","sbh","gotoRow","isColumnSelected","colIsSelected","expandToRow","col","shift","supressEvent","addCol","st","de","ri","dragObject","collapseTree","childGrid","expandTree","trArgs","treeGridAttributes","treeGridHeight","findColumnMaxTextLength","isCellVisible","sortFunction","dontSetStorageData","sorter","sorters","orderings","add","sel","xi","visibleSchema","selectionLength","maxRowLength","minXi","yi","lastSourceIndex","cidx","isColumnVisible","isRowVisible","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","cursorGrab","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","getSchemaFromData","getBestGuessDataType","visibility","clearChangeLog","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","getRowHeight","headerCell","int","asc","localeCompare","date","Date","getTime","ctor","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","sort","filters","currentFilter","parsers","schemaHashes","componentL1Events","eventNames","viewDataLength","orderedIndex","boundRowIndexMap","has","localStorage","setItem","tempSchema","getSchemaNameHash","getFilteredAndSortedViewData","newViewData","originalRowIndex","headerName","filterText","currentFilterFunction","entries","allowArrayLike","it","iterator","unsupportedIterableToArray","F","done","_e","TypeError","err","normalCompletion","didErr","next","_e2","sortFn","rowA","rowB","drawChildGrids","gridKey","setTimer","setDefaults","obj1","obj2","setAttributes","setStyle","contextmenu","observer","disconnect","tryLoadStoredSettings","reloadStoredValues","getDomRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","getItem","message","initialized","publicStyleKeyIntf","initScrollBox","ie","navigator","userAgent","edge","webKit","moz","cursorGrabing","cursorGrabbing","assertPxColor","clearPxColorAssertions","addStyleKeyIfNoneExists","DOMStyles","valueObject","filterFor","filterRegExp","pattern","exec","flags","flagLength","RegExp","toLocaleUpperCase","innerText","textContent","currentCursor","find","eventName","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","setScrollLeft","supressDrawEvent"],"mappings":"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","file":"static/js/3.c6004e0e.chunk.js","sourcesContent":["/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport component from './component';\nimport defaults from './defaults';\nimport draw from './draw';\nimport events from './events';\nimport touch from './touch';\nimport intf from './intf';\nimport contextMenu from './contextMenu';\nimport dom from './dom';\nimport publicMethods from './publicMethods';\n\nvar webComponent = component();\n\nvar modules = [\n  defaults,\n  draw,\n  events,\n  touch,\n  intf,\n  contextMenu,\n  dom,\n  publicMethods,\n];\n\nfunction Grid(args) {\n  args = args || {};\n  var self = {};\n  self.isComponent = args.component === undefined;\n  self.isChildGrid =\n    args.parentNode &&\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\n  if (self.isChildGrid) {\n    self.intf = {};\n  } else {\n    self.intf = self.isComponent\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\n      : document.createElement('canvas');\n  }\n  self.args = args;\n  self.intf.args = args;\n  self.applyComponentStyle = webComponent.applyComponentStyle;\n  self.hyphenateProperty = webComponent.hyphenateProperty;\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\n  self.createGrid = function grid(args) {\n    args.component = false;\n    return new Grid(args);\n  };\n\n  modules.forEach(function (module) {\n    module(self);\n  });\n\n  if (self.isChildGrid) {\n    self.shadowRoot = args.parentNode.shadowRoot;\n    self.parentNode = args.parentNode;\n  } else {\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\n    self.parentNode = self.shadowRoot;\n  }\n  self.init();\n  self.intf.self = self;\n  return self.intf;\n}\nif (window.HTMLElement) {\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\n}\n// export web component\nif (window.customElements) {\n  Grid.observedAttributes = webComponent.getObservableAttributes();\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\n  Grid.prototype.attributeChangedCallback =\n    webComponent.attributeChangedCallback;\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\n  window.customElements.define('canvas-datagrid', Grid);\n}\n\n// export global\nif (\n  window &&\n  !window.canvasDatagrid &&\n  !window.require &&\n  // Present to exclude global declarations from ES Module bundles\n  !window.EXCLUDE_GLOBAL\n) {\n  window.canvasDatagrid = function (args) {\n    return new Grid(args);\n  };\n}\n\n// export amd loader\nexport default function canvasDatagrid(args) {\n  args = args || {};\n  var i,\n    tKeys = [\n      'style',\n      'formatters',\n      'sorters',\n      'filters',\n      'treeGridAttributes',\n      'cellGridAttributes',\n      'data',\n      'schema',\n    ];\n  if (window.customElements) {\n    i = document.createElement('canvas-datagrid');\n    Object.keys(args).forEach(function (argKey) {\n      // set data and parentNode after everything else\n      if (argKey === 'data') {\n        return;\n      }\n      if (argKey === 'parentNode') {\n        return;\n      }\n      // top level keys in args\n      if (tKeys.indexOf(argKey) !== -1) {\n        tKeys.forEach(function (tKey) {\n          if (args[tKey] === undefined || tKey !== argKey) {\n            return;\n          }\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\n              Object.keys(args[tKey]).forEach(function (sKey) {\n                i[tKey][sKey] = args[tKey][sKey];\n              });\n            }\n          } else {\n            i[tKey] = args[tKey];\n          }\n        });\n        return;\n      }\n      // all others are attribute level keys\n      i.attributes[argKey] = args[argKey];\n    });\n    if (args.data) {\n      i.data = args.data;\n    }\n    // add to the dom very last to avoid redraws\n    if (args.parentNode) {\n      args.parentNode.appendChild(i);\n    }\n    return i;\n  }\n  args.component = false;\n  i = new Grid(args);\n  if (args.parentNode && args.parentNode.appendChild) {\n    args.parentNode.appendChild(i);\n  }\n  return i;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n\n'use strict';\nexport default function (self) {\n  self.defaults = {\n    attributes: [\n      ['allowColumnReordering', true],\n      ['allowColumnResize', true],\n      ['allowColumnResizeFromCell', false],\n      ['allowFreezingRows', false],\n      ['allowFreezingColumns', false],\n      ['allowMovingSelection', true],\n      ['allowRowHeaderResize', true],\n      ['allowRowReordering', false],\n      ['allowRowResize', true],\n      ['allowRowResizeFromCell', false],\n      ['allowSorting', true],\n      ['autoGenerateSchema', false],\n      ['autoResizeColumns', false],\n      ['autoResizeRows', false],\n      ['blanksText', '(Blanks)'],\n      ['borderDragBehavior', 'none'],\n      ['borderResizeZone', 10],\n      ['clearSettingsOptionText', 'Clear saved settings'],\n      ['columnHeaderClickBehavior', 'sort'],\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\n      ['columnSelectorText', 'Add/Remove columns'],\n      ['columnSelectorVisibleText', '\\u2713'],\n      ['contextHoverScrollAmount', 2],\n      ['contextHoverScrollRateMs', 5],\n      ['copyHeadersOnSelectAll', true],\n      ['copyText', 'Copy'],\n      ['debug', false],\n      ['editable', true],\n      ['ellipsisText', '...'],\n      ['filterOptionText', 'Filter %s'],\n      ['filterTextPrefix', '(filtered) '],\n      ['globalRowResize', false],\n      ['hideColumnText', 'Hide %s'],\n      ['maxAutoCompleteItems', 200],\n      ['multiLine', false],\n      ['name', ''],\n      ['pageUpDownOverlap', 1],\n      ['pasteText', 'Paste'],\n      ['persistantSelectionMode', false],\n      ['removeFilterOptionText', 'Remove filter on %s'],\n      ['reorderDeadZone', 3],\n      ['resizeScrollZone', 20],\n      ['rowGrabZoneSize', 5],\n      ['saveAppearance', true],\n      ['scrollAnimationPPSThreshold', 0.75],\n      ['scrollPointerLock', false],\n      ['scrollRepeatRate', 75],\n      ['selectionFollowsActiveCell', false],\n      ['selectionHandleBehavior', 'none'],\n      ['selectionMode', 'cell'],\n      ['selectionScrollIncrement', 20],\n      ['selectionScrollZone', 20],\n      ['showClearSettingsOption', true],\n      ['showColumnHeaders', true],\n      ['showColumnSelector', true],\n      ['showCopy', false],\n      ['showFilter', true],\n      ['showNewRow', false],\n      ['showOrderByOption', true],\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\n      ['showPaste', false],\n      ['showPerformance', false],\n      ['showRowHeaders', true],\n      ['showRowNumbers', true],\n      ['singleSelectionMode', false],\n      ['snapToRow', false],\n      ['touchContextMenuTimeMs', 800],\n      ['touchDeadZone', 3],\n      ['touchEasingMethod', 'easeOutQuad'],\n      ['touchReleaseAcceleration', 1000],\n      ['touchReleaseAnimationDurationMs', 2000],\n      ['touchScrollZone', 20],\n      ['touchSelectHandleZone', 20],\n      ['touchZoomSensitivity', 0.005],\n      ['touchZoomMin', 0.5],\n      ['touchZoomMax', 1.75],\n      ['maxPixelRatio', 2],\n      ['tree', false],\n      ['treeHorizontalScroll', false],\n    ],\n    styles: [\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['activeCellBorderWidth', 1],\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellFont', '16px sans-serif'],\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellHorizontalAlignment', 'left'],\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['activeCellOverlayBorderWidth', 1],\n      ['activeCellPaddingBottom', 5],\n      ['activeCellPaddingLeft', 5],\n      ['activeCellPaddingRight', 5],\n      ['activeCellPaddingTop', 5],\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellVerticalAlignment', 'center'],\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['autocompleteBottomMargin', 60],\n      ['autosizeHeaderCellPadding', 8],\n      ['autosizePadding', 5],\n      ['cellAutoResizePadding', 13],\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['cellBorderWidth', 1],\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\n      ['cellFont', '16px sans-serif'],\n      ['cellGridHeight', 250],\n      ['cellHeight', 24],\n      ['cellHeightWithChildGrid', 150],\n      ['cellHorizontalAlignment', 'left'],\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['cellPaddingBottom', 5],\n      ['cellPaddingLeft', 5],\n      ['cellPaddingRight', 5],\n      ['cellPaddingTop', 5],\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['cellVerticalAlignment', 'center'],\n      ['cellWidth', 250],\n      ['cellWidthWithChildGrid', 250],\n      ['cellWhiteSpace', 'nowrap'],\n      ['cellLineHeight', 1],\n      ['cellLineSpacing', 3],\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['childContextMenuArrowHTML', '&#x25BA;'],\n      ['childContextMenuMarginLeft', -11],\n      ['childContextMenuMarginTop', -6],\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellBorderWidth', 1],\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellCapBorderWidth', 1],\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['columnHeaderCellFont', '16px sans-serif'],\n      ['columnHeaderCellHeight', 25],\n      ['columnHeaderCellHorizontalAlignment', 'left'],\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['columnHeaderCellPaddingBottom', 5],\n      ['columnHeaderCellPaddingLeft', 5],\n      ['columnHeaderCellPaddingRight', 5],\n      ['columnHeaderCellPaddingTop', 5],\n      ['columnHeaderCellVerticalAlignment', 'center'],\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['columnHeaderOrderByArrowBorderWidth', 1],\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['columnHeaderOrderByArrowHeight', 8],\n      ['columnHeaderOrderByArrowMarginLeft', 0],\n      ['columnHeaderOrderByArrowMarginRight', 5],\n      ['columnHeaderOrderByArrowMarginTop', 6],\n      ['columnHeaderOrderByArrowWidth', 13],\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterButtonBorderRadius', '3px'],\n      ['contextFilterButtonHTML', '&#x25BC;'],\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterInputBorderRadius', '0'],\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\n      ['contextFilterInputFontFamily', 'sans-serif'],\n      ['contextFilterInputFontSize', '14px'],\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextMenuBorderRadius', '3px'],\n      ['contextMenuChildArrowFontSize', '12px'],\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuCursor', 'default'],\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\n      ['contextMenuFilterButtonFontSize', '10px'],\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\n      ['contextMenuFontFamily', 'sans-serif'],\n      ['contextMenuFontSize', '16px'],\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\n      ['contextMenuItemBorderRadius', '3px'],\n      ['contextMenuItemMargin', '2px'],\n      ['contextMenuLabelDisplay', 'inline-block'],\n      ['contextMenuLabelMargin', '0 3px 0 0'],\n      ['contextMenuLabelMaxWidth', '700px'],\n      ['contextMenuLabelMinWidth', '75px'],\n      ['contextMenuMarginLeft', 3],\n      ['contextMenuMarginTop', -3],\n      ['contextMenuOpacity', '0.98'],\n      ['contextMenuPadding', '2px'],\n      ['contextMenuWindowMargin', 30],\n      ['contextMenuZIndex', 10000],\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\n      ['debugFont', '11px sans-serif'],\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\n      ['display', 'inline-block'],\n      ['editCellBackgroundColor', 'white'],\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\n      ['editCellColor', 'black'],\n      ['editCellFontFamily', 'sans-serif'],\n      ['editCellFontSize', '16px'],\n      ['editCellPaddingLeft', 4],\n      ['editCellZIndex', 10000],\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\n      ['frozenMarkerBorderWidth', 1],\n      ['frozenMarkerWidth', 2],\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['gridBorderCollapse', 'collapse'],\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['gridBorderWidth', 1],\n      ['height', 'auto'],\n      ['maxHeight', 'inherit'],\n      ['maxWidth', 'inherit'],\n      ['minColumnWidth', 45],\n      ['minHeight', 'inherit'],\n      ['minRowHeight', 24],\n      ['minWidth', 'inherit'],\n      ['mobileContextMenuMargin', 10],\n      ['mobileEditInputHeight', 30],\n      ['mobileEditFontFamily', 'sans-serif'],\n      ['mobileEditFontSize', '16px'],\n      ['moveOverlayBorderWidth', 1],\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['moveOverlayBorderSegments', '12, 7'],\n      ['name', 'default'],\n      ['overflowY', 'auto'],\n      ['overflowX', 'auto'],\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\n      ['reorderMarkerBorderWidth', 1.25],\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['reorderMarkerIndexBorderWidth', 2.75],\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\n      ['rowHeaderCellBorderWidth', 1],\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellFont', '16px sans-serif'],\n      ['rowHeaderCellHeight', 25],\n      ['rowHeaderCellHorizontalAlignment', 'left'],\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['rowHeaderCellPaddingBottom', 5],\n      ['rowHeaderCellPaddingLeft', 5],\n      ['rowHeaderCellPaddingRight', 5],\n      ['rowHeaderCellPaddingTop', 5],\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellVerticalAlignment', 'center'],\n      ['rowHeaderCellWidth', 57],\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarBorderWidth', 0.5],\n      ['scrollBarBoxBorderRadius', 4.125],\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\n      ['scrollBarBoxMargin', 2],\n      ['scrollBarBoxMinSize', 15],\n      ['scrollBarBoxWidth', 8],\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarWidth', 11],\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\n      ['selectionHandleBorderWidth', 1.5],\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionHandleSize', 8],\n      ['selectionHandleType', 'square'],\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionOverlayBorderWidth', 1],\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['treeArrowBorderWidth', 1],\n      ['treeArrowClickRadius', 5],\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['treeArrowHeight', 8],\n      ['treeArrowMarginLeft', 0],\n      ['treeArrowMarginRight', 5],\n      ['treeArrowMarginTop', 6],\n      ['treeArrowWidth', 13],\n      ['treeGridHeight', 250],\n      ['width', 'auto'],\n    ],\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport defaults from './defaults';\n\nexport default function () {\n  var typeMap,\n    component = {};\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\n    prop = prop.replace('--cdg-', '');\n    var p = '',\n      nextLetterCap;\n    Array.prototype.forEach.call(prop, function (char) {\n      if (nextLetterCap) {\n        nextLetterCap = false;\n        p += char.toUpperCase();\n        return;\n      }\n      if (char === '-') {\n        nextLetterCap = true;\n        return;\n      }\n      p += char;\n    });\n    return p;\n  };\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\n    var p = '';\n    Array.prototype.forEach.call(prop, function (char) {\n      if (char === char.toUpperCase()) {\n        p += '-' + char.toLowerCase();\n        return;\n      }\n      p += char;\n    });\n    return (cust ? '--cdg-' : '') + p;\n  };\n  function getDefaultItem(base, item) {\n    var i = {},\n      r;\n    defaults(i);\n    r = i.defaults[base].filter(function (i) {\n      return (\n        i[0].toLowerCase() === item.toLowerCase() ||\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\n      );\n    })[0];\n    return r;\n  }\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\n    if (!intf.isComponent) {\n      return;\n    }\n    var cStyle = window.getComputedStyle(\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\n        null,\n      ),\n      defs = {};\n    intf.computedStyle = cStyle;\n    defaults(defs);\n    defs = defs.defaults.styles;\n    defs.forEach(function (def) {\n      var val;\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\n      if (val === '') {\n        val = cStyle.getPropertyValue(\n          component.hyphenateProperty(def[0], false),\n        );\n      }\n      if (val !== '' && typeof val === 'string') {\n        intf.setStyleProperty(\n          def[0],\n          typeMap[typeof def[1]](\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\n            def[1],\n          ),\n          true,\n        );\n      }\n    });\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\n      requestAnimationFrame(function () {\n        intf.resize(true);\n      });\n      intf.dispatchEvent('stylechanged', intf.style);\n    }\n  };\n  typeMap = {\n    data: function (strData) {\n      try {\n        return JSON.parse(strData);\n      } catch (e) {\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\n      }\n    },\n    schema: function (strSchema) {\n      try {\n        return JSON.parse(strSchema);\n      } catch (e) {\n        throw new Error(\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\n        );\n      }\n    },\n    number: function (strNum, def) {\n      var n = parseInt(strNum, 10);\n      return isNaN(n) ? def : n;\n    },\n    boolean: function (strBool) {\n      return /true/i.test(strBool);\n    },\n    string: function (str) {\n      return str;\n    },\n  };\n  component.getObservableAttributes = function () {\n    var i = {},\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\n    defaults(i);\n    i.defaults.attributes.forEach(function (attr) {\n      attrs.push(attr[0].toLowerCase());\n    });\n    return attrs;\n  };\n  component.disconnectedCallback = function () {\n    this.connected = false;\n  };\n  component.connectedCallback = function () {\n    var intf = this;\n    intf.parentDOMNode.innerHTML = '';\n    intf.parentDOMNode.appendChild(intf.canvas);\n    intf.connected = true;\n    component.observe(intf);\n    component.applyComponentStyle(true, intf);\n    intf.resize(true);\n  };\n  component.adoptedCallback = function () {\n    this.resize();\n  };\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\n    var tfn,\n      intf = this,\n      def;\n    if (attrName === 'style') {\n      component.applyComponentStyle(false, intf);\n      return;\n    }\n    if (attrName === 'data') {\n      if (intf.dataType === 'application/x-canvas-datagrid') {\n        intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      intf.data = newVal;\n      return;\n    }\n    if (attrName === 'schema') {\n      intf.schema = typeMap.schema(newVal);\n      return;\n    }\n    if (attrName === 'name') {\n      intf.name = newVal;\n      return;\n    }\n    if (attrName === 'class' || attrName === 'className') {\n      return;\n    }\n    def = getDefaultItem('attributes', attrName);\n    if (def) {\n      tfn = typeMap[typeof def[1]];\n      intf.attributes[def[0]] = tfn(newVal);\n      return;\n    }\n    if (/^on/.test(attrName)) {\n      intf.addEventListener('on' + attrName, Function('e', newVal));\n    }\n    return;\n  };\n  component.observe = function (intf) {\n    var observer;\n    if (!window.MutationObserver) {\n      return;\n    }\n    intf.applyComponentStyle = function () {\n      component.applyComponentStyle(false, intf);\n      intf.resize();\n    };\n    /**\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\n     * @memberof canvasDatagrid\n     * @name applyComponentStyle\n     * @method\n     */\n    observer = new window.MutationObserver(function (mutations) {\n      var checkInnerHTML, checkStyle;\n      Array.prototype.forEach.call(mutations, function (mutation) {\n        if (\n          mutation.attributeName === 'class' ||\n          mutation.attributeName === 'style'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (mutation.target.nodeName === 'STYLE') {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target.parentNode &&\n          mutation.target.parentNode.nodeName === 'STYLE'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target === intf &&\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\n        ) {\n          checkInnerHTML = true;\n        }\n      });\n      if (checkStyle) {\n        intf.applyComponentStyle(false, intf);\n      }\n      if (checkInnerHTML) {\n        if (intf.dataType === 'application/x-canvas-datagrid') {\n          intf.dataType = 'application/json+x-canvas-datagrid';\n        }\n        intf.data = intf.innerHTML;\n      }\n    });\n    observer.observe(intf, {\n      characterData: true,\n      childList: true,\n      attributes: true,\n      subtree: true,\n    });\n  };\n  return component;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var perfCounters = [],\n    cachedImagesDrawn = false,\n    drawCount = 0,\n    perfWindowSize = 300,\n    entityCount = [],\n    hiddenFrozenColumnCount = 0,\n    scrollDebugCounters = [],\n    touchPPSCounters = [];\n  self.htmlImageCache = {};\n  // more heavyweight version than fillArray defined in intf.js\n  function fillArray(low, high, step, def) {\n    step = step || 1;\n    var i = [],\n      x;\n    for (x = low; x <= high; x += step) {\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\n    }\n    return i;\n  }\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\n    var i = w / perfArr.length,\n      r = h / max;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x, y + h);\n    perfArr.forEach(function (n) {\n      var val = arrIndex === undefined ? n : n[arrIndex],\n        cx,\n        cy;\n      if (useAbs) {\n        val = Math.abs(val);\n      }\n      cx = x + i;\n      cy = y + h - val * r;\n      self.ctx.lineTo(cx, cy);\n      x += i;\n    });\n    self.ctx.moveTo(x + w, y + h);\n    self.ctx.strokeStyle = color;\n    self.ctx.stroke();\n  }\n  function drawOnAllImagesLoaded() {\n    var loaded = true;\n    Object.keys(self.htmlImageCache).forEach(function (html) {\n      if (!self.htmlImageCache[html].img.complete) {\n        loaded = false;\n      }\n    });\n    if (loaded && !cachedImagesDrawn) {\n      cachedImagesDrawn = true;\n      self.draw();\n    }\n  }\n  function drawHtml(cell) {\n    var img,\n      v = cell.innerHTML || cell.formattedValue,\n      cacheKey =\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\n      x = Math.round(cell.x + self.canvasOffsetLeft),\n      y = Math.round(cell.y + self.canvasOffsetTop);\n    if (self.htmlImageCache[cacheKey]) {\n      img = self.htmlImageCache[cacheKey].img;\n      if (\n        self.htmlImageCache[cacheKey].height !== cell.height ||\n        self.htmlImageCache[cacheKey].width !== cell.width\n      ) {\n        // height and width of the cell has changed, invalidate cache\n        self.htmlImageCache[cacheKey] = undefined;\n      } else {\n        if (!img.complete) {\n          return;\n        }\n        return self.ctx.drawImage(img, x, y);\n      }\n    } else {\n      cachedImagesDrawn = false;\n    }\n    img = new Image(cell.width, cell.height);\n    self.htmlImageCache[cacheKey] = {\n      img,\n      width: cell.width,\n      height: cell.height,\n    };\n    img.onload = function () {\n      self.ctx.drawImage(img, x, y);\n      drawOnAllImagesLoaded();\n    };\n    img.src =\n      'data:image/svg+xml;base64,' +\n      btoa(\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          cell.width +\n          '\" height=\"' +\n          cell.height +\n          '\">\\n' +\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\n          v +\n          '\\n' +\n          '</body>' +\n          '</foreignObject>\\n' +\n          '</svg>\\n',\n      );\n  }\n  function drawOrderByArrow(x, y) {\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.orderDirection === 'asc') {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y + ah);\n      self.ctx.lineTo(x + aw, y + ah);\n      self.ctx.lineTo(x + aw * 0.5, y);\n      self.ctx.lineTo(x, y + ah);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function drawTreeArrow(cell, x, y) {\n    var mt = self.style.treeArrowMarginTop * self.scale,\n      mr = self.style.treeArrowMarginRight * self.scale,\n      ml = self.style.treeArrowMarginLeft * self.scale,\n      aw = self.style.treeArrowWidth * self.scale,\n      ah = self.style.treeArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.treeArrowColor;\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.openChildren[cell.rowIndex]) {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y);\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\n      self.ctx.lineTo(x, y + aw);\n      self.ctx.lineTo(x, y);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function radiusRect(x, y, w, h, radius) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    var r = x + w,\n      b = y + h;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x + radius, y);\n    self.ctx.lineTo(r - radius, y);\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\n    self.ctx.lineTo(r, y + h - radius);\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\n    self.ctx.lineTo(x + radius, b);\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\n    self.ctx.lineTo(x, y + radius);\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n  function fillRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillRect(x, y, w, h);\n  }\n  function strokeRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.strokeRect(x, y, w, h);\n  }\n  function fillText(text, x, y) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillText(text, x, y);\n  }\n  function fillCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.fill();\n  }\n  function strokeCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.stroke();\n  }\n  function clipFrozenArea(mode) {\n    // 0 both, 1 rows, 2 cols\n    // self.lastFrozenColumnPixel;\n    // self.lastFrozenRowPixel;\n    self.ctx.beginPath();\n    if (mode === 0) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 1) {\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\n      self.ctx.lineTo(0, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 2) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\n      self.ctx.lineTo(self.width, 0);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n    }\n    self.ctx.clip();\n  }\n  function fillHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return fillCircle(x, y, r * 0.5);\n    }\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function strokeHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return strokeCircle(x, y, r * 0.5);\n    }\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function addselectionHandle(c, pos) {\n    var hw = self.style.selectionHandleSize,\n      p = {\n        tr: function () {\n          fillHandle(c.x + c.width, c.y, hw);\n          strokeHandle(c.x + c.width, c.y, hw);\n        },\n        br: function () {\n          fillHandle(c.x + c.width, c.y + c.height, hw);\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\n        },\n        tl: function () {\n          fillHandle(c.x, c.y, hw);\n          strokeHandle(c.x, c.y, hw);\n        },\n        bl: function () {\n          fillHandle(c.x, c.y + c.height, hw);\n          strokeHandle(c.x, c.y + c.height, hw);\n        },\n      };\n    p[pos]();\n  }\n  function addBorderLine(c, pos) {\n    self.ctx.beginPath();\n    var p = {\n      t: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n      },\n      r: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      b: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      l: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n    };\n    p[pos]();\n    self.ctx.stroke();\n  }\n  function addEllipsis(text, width) {\n    var c,\n      w = 0;\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\n      return self.ellipsisCache[text][width];\n    }\n    //TODO Add ellipsis back when there is a fast way to do it\n    w = self.ctx.measureText(text).width;\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\n    c = { value: text, width: w };\n    self.ellipsisCache[text][width] = c;\n    return c;\n  }\n  function wrapText(cell, splitChar) {\n    if (!cell.formattedValue) {\n      return {\n        lines: [{ width: 0, value: '' }],\n        width: 0,\n        height: cell.calculatedLineHeight,\n      };\n    }\n    var max = 0,\n      n = '\\n',\n      x,\n      word,\n      words = cell.formattedValue.split(splitChar),\n      textHeight = cell.calculatedLineHeight,\n      lines = [],\n      out = [],\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      autoResize = self.attributes.autoResizeRows && wrap,\n      elWidth,\n      et = self.attributes.ellipsisText,\n      elClipLength,\n      plWidth,\n      clippedVal,\n      ogWordWidth,\n      previousLine,\n      line = {\n        width: 0,\n        value: '',\n      },\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\n    lines.push(line);\n    elWidth = self.ctx.measureText(' ' + et).width;\n    for (x = 0; x < words.length; x += 1) {\n      word = words[x];\n      var measure = self.ctx.measureText(word + splitChar);\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\n        line.value += word + splitChar;\n        line.width += measure.width;\n        continue;\n      }\n      // if there is a hyphenated word that is too long\n      // split it and add the split set to the array\n      // then back up and re-read new split set\n      // this behavior seems right, it might not be\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\n        words.splice(x, 1, word.split('-')[0] + '-', word.split('-')[1]);\n        x -= 1;\n        continue;\n      }\n      line = {\n        width: measure.width,\n        value: word + splitChar,\n      };\n      if (x === 0) {\n        lines = [];\n        lines.push(line);\n      }\n      textHeight += cell.calculatedLineHeight;\n      if (textHeight > cHeight && !autoResize) {\n        if (lines.length === 0) {\n          break;\n        }\n        elClipLength = 1;\n        previousLine = lines[lines.length - 1];\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\n          break;\n        }\n        clippedVal = previousLine.value + word;\n        plWidth = self.ctx.measureText(clippedVal + et).width;\n        var originText = clippedVal;\n        if (plWidth > cell.paddedWidth) {\n          var stepLength = parseInt(clippedVal.length / 2);\n          var direction = -1;\n          while (stepLength > 0) {\n            clippedVal = originText.substr(\n              0,\n              stepLength * direction + clippedVal.length,\n            );\n            plWidth = self.ctx.measureText(clippedVal + et).width;\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\n            stepLength = parseInt(stepLength / 2);\n          }\n        }\n        clippedVal =\n          clippedVal + (originText.length != clippedVal.length ? et : '');\n        previousLine.value = clippedVal;\n        previousLine.width = plWidth;\n        break;\n      }\n      if (x > 0) {\n        lines.push(line);\n      }\n    }\n    return {\n      lines: lines,\n      width: max,\n      height: cell.calculatedLineHeight * lines.length,\n    };\n  }\n  function drawText(cell) {\n    var ll = cell.text.lines.length,\n      h = cell.fontHeight * cell.lineHeight,\n      x,\n      line,\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      textHeight = 0;\n    for (x = 0; x < cell.text.lines.length; x += 1) {\n      line = cell.text.lines[x];\n      var vPos =\n          Math.max(\n            (cell.height -\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\n              0.5,\n            0,\n          ) + h,\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\n      if (cell.horizontalAlignment === 'right') {\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\n      } else if (cell.horizontalAlignment === 'center') {\n        hPos =\n          cell.paddingLeft +\n          (cell.paddedWidth + cell.paddingRight) / 2 -\n          line.width / 2;\n      }\n      if (cell.verticalAlignment === 'top') {\n        vPos = cell.calculatedLineHeight;\n      } else if (cell.verticalAlignment === 'bottom') {\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\n      }\n      line.height = h + cell.lineSpacing;\n      line.offsetLeft = hPos;\n      line.offsetTop = vPos;\n      line.x = cell.x + hPos;\n      line.y = cell.y + textHeight + vPos;\n      textHeight += line.height;\n      fillText(line.value, line.x, line.y);\n    }\n    if (self.attributes.debug && cell.active) {\n      requestAnimationFrame(function () {\n        self.ctx.font = self.style.debugFont;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          JSON.stringify(\n            {\n              x: cell.x,\n              y: cell.y,\n              h: cell.height,\n              w: cell.width,\n              pw: cell.paddedWidth,\n              idx: cell.columnIndex,\n              idx_ord: cell.sortColumnIndex,\n            },\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 14,\n        );\n        fillText(\n          JSON.stringify(\n            cell.text.lines.map(function (l) {\n              return { w: l.width, v: l.value.length };\n            }),\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 30,\n        );\n      });\n    }\n  }\n  function getFrozenColumnsWidth() {\n    var w = 0,\n      s = self.getSchema(),\n      x = 0,\n      n = Math.min(self.frozenColumn, s.length),\n      column;\n    hiddenFrozenColumnCount = 0;\n    while (x < n) {\n      column = s[x];\n      if (column.hidden) {\n        hiddenFrozenColumnCount += 1;\n      } else {\n        w += self.getColummnWidth(x);\n      }\n      x += 1;\n    }\n    return w;\n  }\n  /**\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\n   * @memberof canvasDatagrid\n   * @name draw\n   * @method\n   */\n  // r = literal row index\n  // rd = row data array\n  // i = user order index\n  // o = literal data index\n  // y = y drawing cursor\n  // x = x drawing cursor\n  // s = visible schema array\n  // cx = current x drawing cursor sub calculation var\n  // cy = current y drawing cursor sub calculation var\n  // a = static cell (like corner cell)\n  // p = perf counter\n  // l = data length\n  // u = current cell\n  // h = current height\n  // w = current width\n  self.draw = function (internal) {\n    if (self.dispatchEvent('beforedraw', {})) {\n      return;\n    }\n    if (!self.isChildGrid && (!self.height || !self.width)) {\n      return;\n    }\n    if (self.isChildGrid && internal) {\n      requestAnimationFrame(self.parentGrid.draw);\n      return;\n    }\n    if (self.intf.visible === false) {\n      return;\n    }\n    // initial values\n    var checkScrollHeight,\n      rowHeaderCell,\n      p,\n      cx,\n      cy,\n      treeGrid,\n      rowOpen,\n      rowHeight,\n      cornerCell,\n      y,\n      x,\n      c,\n      h,\n      w,\n      schema,\n      rowIndex,\n      rowData,\n      aCell,\n      viewData = self.viewData || [],\n      bc = self.style.gridBorderCollapse === 'collapse',\n      selectionBorders = [],\n      moveBorders = [],\n      selectionHandles = [],\n      rowHeaders = [],\n      l = viewData.length,\n      u = self.currentCell || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      cellHeight = self.style.cellHeight;\n    drawCount += 1;\n    p = performance.now();\n    self.visibleRowHeights = [];\n    // if data length has changed, there is no way to know\n    if (viewData.length > self.orders.rows.length) {\n      self.createRowOrders();\n    }\n    function drawScrollBars() {\n      var drawCorner,\n        en = self.scrollBox.entities,\n        m = self.style.scrollBarBoxMargin * 2;\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\n      en.horizontalBox.x =\n        rowHeaderCellWidth +\n        self.style.scrollBarBoxMargin +\n        (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\n          (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\n      en.verticalBox.y =\n        columnHeaderCellHeight +\n        self.style.scrollBarBoxMargin +\n        (en.verticalBar.height - self.scrollBox.scrollBoxHeight) *\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\n      if (self.scrollBox.horizontalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        strokeRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\n        if (self.scrollBox.horizontalBoxVisible) {\n          if (/horizontal/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.horizontalBox.x,\n            en.horizontalBox.y,\n            en.horizontalBox.width,\n            en.horizontalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.horizontalBar);\n        self.visibleCells.unshift(en.horizontalBox);\n      }\n      if (self.scrollBox.verticalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        strokeRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        if (self.scrollBox.verticalBoxVisible) {\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\n          if (/vertical/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.verticalBox.x,\n            en.verticalBox.y,\n            en.verticalBox.width,\n            en.verticalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.verticalBar);\n        self.visibleCells.unshift(en.verticalBox);\n      }\n      if (drawCorner) {\n        //corner\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\n        radiusRect(\n          en.corner.x,\n          en.corner.y,\n          en.corner.width,\n          en.corner.height,\n          0,\n        );\n        self.ctx.stroke();\n        self.ctx.fill();\n        self.visibleCells.unshift(en.corner);\n      }\n    }\n    function createHandlesOverlayArray(cell) {\n      if (self.attributes.allowMovingSelection || self.mobile) {\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderRight &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tr']);\n          cell.selectionHandle = 'tr';\n        }\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tl']);\n          cell.selectionHandle = 'tl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'bl']);\n          cell.selectionHandle = 'bl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderRight &&\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\n        ) {\n          selectionHandles.push([cell, 'br']);\n          cell.selectionHandle = 'br';\n        }\n      }\n    }\n    function createBorderOverlayArray(\n      cell,\n      drawArray,\n      propPrefix,\n      offsetPoint,\n    ) {\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\n      cell.selectionBorder = '';\n      if (\n        !cell.isRowHeader &&\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n          cell.columnIndex + -offsetPoint.x,\n        ) !== -1\n      ) {\n        if (\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\n              cell.columnIndex + -offsetPoint.x,\n            ) === -1 ||\n            cell.rowIndex === 0) &&\n          !cell.isHeader\n        ) {\n          drawArray.push([cell, 't']);\n          cell[propPrefix + 'BorderTop'] = true;\n          cell[propPrefix + 'Border'] += 't';\n        }\n        if (\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\n            cell.columnIndex + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'b']);\n          cell[propPrefix + 'BorderBottom'] = true;\n          cell[propPrefix + 'Border'] += 'b';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === 0 ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex - 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'l']);\n          cell[propPrefix + 'BorderLeft'] = true;\n          cell[propPrefix + 'Border'] += 'l';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === schema.length ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex + 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'r']);\n          cell[propPrefix + 'BorderRight'] = true;\n          cell[propPrefix + 'Border'] += 'r';\n        }\n      }\n    }\n    function drawCell(rowData, rowOrderIndex, rowIndex) {\n      return function drawEach(header, headerIndex, columnOrderIndex) {\n        if (header.hidden) {\n          return 0;\n        }\n        var cellStyle = header.style || 'cell',\n          cellGridAttributes,\n          cell,\n          isHeader = /HeaderCell/.test(cellStyle),\n          isCorner = /cornerCell/.test(cellStyle),\n          isRowHeader = 'rowHeaderCell' === cellStyle,\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\n          selected =\n            self.selections[rowOrderIndex] &&\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\n          hovered =\n            self.hovers.rowIndex === rowOrderIndex &&\n            self.hovers.columnIndex === columnOrderIndex,\n          active =\n            self.activeCell.rowIndex === rowOrderIndex &&\n            self.activeCell.columnIndex === columnOrderIndex,\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\n          rawValue = rowData ? rowData[header.name] : undefined,\n          isGrid = header.type === 'canvas-datagrid',\n          activeHeader =\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\n              self.orders.columns[self.activeCell.columnIndex] ===\n                headerIndex) &&\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\n              ? isRowHeader\n                ? 'activeRowHeaderCell'\n                : 'activeColumnHeaderCell'\n              : false,\n          val,\n          f = self.formatters[header.type || 'string'],\n          orderByArrowSize = 0,\n          treeArrowSize = 0,\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\n          ev = {\n            value: rawValue,\n            row: rowData,\n            header: header,\n          };\n        if (isColumnHeaderCellCap) {\n          cellWidth = w - x;\n        }\n        // if no data or schema are defined, a width is provided to the stub column\n        if (cellWidth === undefined) {\n          cellWidth = self.style.cellWidth;\n        }\n        cellWidth = cellWidth * self.scale;\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\n          x += cellWidth + self.style.cellBorderWidth;\n        }\n        if (active && cellStyle !== 'cornerCell') {\n          cellStyle = 'activeCell';\n        }\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\n          self.visibleRows.push(rowIndex);\n        }\n        val = self.dispatchEvent('formatcellvalue', ev);\n        cx = x;\n        cy = y;\n        if (cellStyle === 'cornerCell') {\n          cx = 0;\n          cy = 0;\n        } else if (isRowHeader) {\n          cx = 0;\n        } else if (isHeader) {\n          cy = 0;\n        }\n        cell = {\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\n          style: cellStyle,\n          nodeType: 'canvas-datagrid-cell',\n          x: cx,\n          y: cy,\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\n          paddingLeft:\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\n          paddingRight:\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\n          paddingBottom:\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\n          whiteSpace: self.style.cellWhiteSpace,\n          lineHeight: self.style.cellLineHeight,\n          lineSpacing: self.style.cellLineSpacing,\n          offsetTop: self.canvasOffsetTop + cy,\n          offsetLeft: self.canvasOffsetLeft + cx,\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          active: active || activeHeader,\n          hovered: hovered,\n          selected: selected,\n          width: cellWidth,\n          height: cellHeight,\n          offsetWidth: cellWidth,\n          offsetHeight: cellHeight,\n          parentNode: self.intf.parentNode,\n          offsetParent: self.intf.parentNode,\n          data: rowData,\n          isCorner: isCorner,\n          isHeader: isHeader,\n          isColumnHeader: isColumnHeader,\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\n          isRowHeader: isRowHeader,\n          rowOpen: rowOpen,\n          header: header,\n\n          columnIndex: columnOrderIndex,\n          rowIndex: rowOrderIndex,\n\n          viewRowIndex: rowOrderIndex,\n          viewColumnIndex: columnOrderIndex,\n\n          boundRowIndex: self.getBoundRowIndexFromViewRowIndex(rowOrderIndex),\n          boundColumnIndex: columnOrderIndex,\n\n          sortColumnIndex: headerIndex,\n          sortRowIndex: rowIndex,\n\n          isGrid: isGrid,\n          isNormal: !isGrid && !isCorner && !isHeader,\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\n          parentGrid: self.intf,\n          innerHTML: '',\n          activeHeader: activeHeader,\n          value:\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\n        };\n        cell.calculatedLineHeight =\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\n        ev.cell = cell;\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\n        cell.userWidth = cell.isHeader\n          ? self.sizes.columns.cornerCell\n          : self.sizes.columns[headerIndex];\n        self.visibleCells.unshift(cell);\n        if (self.dispatchEvent('beforerendercell', ev)) {\n          return;\n        }\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\n        if (hovered) {\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\n        }\n        if (selected) {\n          self.ctx.fillStyle =\n            self.style[cellStyle + 'SelectedBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\n        }\n        if (activeHeader) {\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\n        }\n        self.dispatchEvent('rendercell', ev);\n        if (cell.isGrid) {\n          if (cell.height !== rowHeight) {\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\n            checkScrollHeight = true;\n          }\n          cell.width =\n            self.sizes.columns[headerIndex] ||\n            self.style.cellWidthWithChildGrid;\n        }\n        if (rowOpen && !cell.isRowHeader) {\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\n        }\n        if (!cell.isGrid) {\n          fillRect(cx, cy, cell.width, cell.height);\n          strokeRect(cx, cy, cell.width, cell.height);\n        }\n        self.ctx.save();\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\n        self.ctx.clip();\n        self.dispatchEvent('afterrendercell', ev);\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\n          checkScrollHeight = true;\n        }\n        if (cell.width !== cellWidth) {\n          self.sizes.columns[headerIndex] = cell.width;\n          checkScrollHeight = true;\n        }\n        if (isRowHeader && self.attributes.tree) {\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\n            treeArrowSize = drawTreeArrow(\n              cell,\n              self.style[cellStyle + 'PaddingLeft'],\n              cy,\n              0,\n            );\n          }\n        }\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\n            if (!self.childGrids[cell.gridId]) {\n              // HACK: this only allows setting of the child grids styles if data is set _after_\n              // this is less than desirable.  An interface needs to be made to effect the\n              // style of all cell grids.  One for individual grids already exists.\n              cellGridAttributes = self.cellGridAttributes;\n              cellGridAttributes.name = self.attributes.saveAppearance\n                ? cell.gridId\n                : undefined;\n              cellGridAttributes.component = false;\n              cellGridAttributes.parentNode = cell;\n              cellGridAttributes.data = rawValue;\n              ev.cellGridAttributes = cellGridAttributes;\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\n                return;\n              }\n              self.childGrids[cell.gridId] = self.createGrid(\n                cellGridAttributes,\n              );\n              self.sizes.rows[rowIndex] =\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\n              checkScrollHeight = true;\n            }\n            cell.grid = self.childGrids[cell.gridId];\n            cell.grid.parentNode = cell;\n            cell.grid.visible = true;\n            cell.grid.draw();\n            self.dispatchEvent('rendercellgrid', ev);\n          } else if (!cell.isGrid) {\n            if (self.childGrids[cell.gridId]) {\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\n            }\n            if (isHeader && self.orderBy === header.name) {\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\n                orderByArrowSize = drawOrderByArrow(\n                  cx + self.style[cellStyle + 'PaddingLeft'],\n                  0,\n                );\n              }\n            }\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\n            if (hovered) {\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\n            }\n            if (selected) {\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\n            }\n            if (activeHeader) {\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\n            }\n            cell.treeArrowWidth = treeArrowSize;\n            cell.orderByArrowWidth = orderByArrowSize;\n            // create text ref to see if height needs to expand\n            val = val !== undefined ? val : f ? f(ev) : '';\n            if (val === undefined && !f) {\n              val = '';\n              console.warn(\n                'canvas-datagrid: Unknown format ' +\n                  header.type +\n                  ' add a cellFormater',\n              );\n            }\n            cell.formattedValue = (val !== undefined && val !== null\n              ? val\n              : ''\n            ).toString();\n            if (\n              self.columnFilters &&\n              self.columnFilters[val] !== undefined &&\n              isHeader\n            ) {\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\n            }\n            self.ctx.font =\n              self.style[cellStyle + 'FontHeight'] * self.scale +\n              'px ' +\n              self.style[cellStyle + 'FontName'];\n            if (!self.dispatchEvent('formattext', ev)) {\n              cell.text = wrapText(cell, ' ');\n            }\n            if (!self.dispatchEvent('rendertext', ev)) {\n              if (cell.innerHTML || header.type === 'html') {\n                drawHtml(cell);\n              } else {\n                drawText(cell);\n              }\n\n              if (wrap && cell.text && cell.text.height > rowHeight) {\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\n                checkScrollHeight = true;\n              }\n            }\n          }\n        }\n        if (active) {\n          aCell = cell;\n        }\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\n        createHandlesOverlayArray(cell);\n        if (self.movingSelection) {\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\n        }\n        self.ctx.restore();\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\n        return cell.width;\n      };\n    }\n    function drawRowHeader(rowData, rowIndex, rowOrderIndex) {\n      if (self.attributes.showRowHeaders) {\n        x = 0;\n\n        // When filtering we'd like to display the actual row numbers,\n        // as it is in the unfiltered data, instead of simply the viewed\n        // row index + 1:\n        const filteredRowNumber =\n          self.getBoundRowIndexFromViewRowIndex(rowIndex) + 1;\n\n        const rowHeaderValue = self.hasActiveFilters()\n          ? filteredRowNumber\n          : rowIndex + 1;\n\n        const rowHeaderCell = { rowHeaderCell: rowHeaderValue };\n        const headerDescription = {\n          name: 'rowHeaderCell',\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\n          style: 'rowHeaderCell',\n          type: 'string',\n          data: rowHeaderValue,\n          index: -1,\n        };\n        rowOpen = self.openChildren[rowIndex];\n        drawCell(rowHeaderCell, rowOrderIndex, rowIndex)(\n          headerDescription,\n          -1,\n          -1,\n        );\n      }\n    }\n    function drawHeaders() {\n      var d,\n        g = schema.length,\n        i,\n        o,\n        columnHeaderCell,\n        header,\n        nonFrozenHeaderWidth;\n      function drawHeaderColumnRange(start, end) {\n        end = Math.min(end, g);\n        for (o = start; o < end; o += 1) {\n          i = self.orders.columns[o];\n          header = schema[i];\n          if (!header.hidden) {\n            d = {\n              title: header.title,\n              name: header.name,\n              width: header.width || self.style.cellWidth,\n              style: 'columnHeaderCell',\n              type: 'string',\n              index: o,\n              order: i,\n            };\n            columnHeaderCell = {\n              columnHeaderCell: header.title || header.name,\n            };\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\n            if (x > self.width + self.scrollBox.scrollLeft) {\n              break;\n            }\n          }\n        }\n      }\n      rowHeaders.forEach(function (rArgs, rhIndex) {\n        y = rArgs[3];\n        cellHeight = rArgs[4];\n        if (rhIndex === self.frozenRow) {\n          self.ctx.save();\n          radiusRect(\n            0,\n            self.lastFrozenRowPixel,\n            self.width,\n            self.height - self.lastFrozenRowPixel,\n            0,\n          );\n          self.ctx.clip();\n        }\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\n      });\n      self.ctx.restore();\n      if (self.attributes.showColumnHeaders) {\n        x =\n          -self.scrollBox.scrollLeft +\n          self.scrollPixelLeft +\n          self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        y = 0;\n        // cell height might have changed during drawing\n        cellHeight = self.getColumnHeaderCellHeight();\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\n        nonFrozenHeaderWidth = x;\n        x = self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        drawHeaderColumnRange(0, self.frozenColumn);\n        // fill in the space right of the headers\n        x = nonFrozenHeaderWidth;\n        if (x < w) {\n          c = {\n            name: '',\n            width: self.style.scrollBarWidth,\n            style: 'columnHeaderCellCap',\n            isColumnHeaderCell: true,\n            isColumnHeaderCellCap: true,\n            type: 'string',\n            index: schema.length,\n          };\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\n        }\n        // fill in the space right of the headers\n        if (self.attributes.showRowHeaders) {\n          cornerCell = { cornerCell: '' };\n          x = 0;\n          c = {\n            name: 'cornerCell',\n            width: self.style.rowHeaderCellWidth,\n            style: 'cornerCell',\n            type: 'string',\n            index: -1,\n          };\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\n        }\n      }\n    }\n    function drawRow(rowOrderIndex, rowIndex) {\n      var headerIndex,\n        treeHeight,\n        rowSansTreeHeight,\n        columnOrderIndex,\n        g = schema.length;\n      if (y - cellHeight * 2 > h) {\n        return false;\n      }\n      rowData = viewData[rowOrderIndex];\n      rowOpen = self.openChildren[rowOrderIndex];\n      rowSansTreeHeight =\n        (self.sizes.rows[rowOrderIndex] || self.style.cellHeight) * self.scale;\n      treeHeight = (rowOpen ? self.sizes.trees[rowOrderIndex] : 0) * self.scale;\n      rowHeight = rowSansTreeHeight + treeHeight;\n      if (y < -rowHeight) {\n        return false;\n      }\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      cellHeight = rowHeight;\n      //draw normal columns\n      for (\n        columnOrderIndex = self.scrollIndexLeft;\n        columnOrderIndex < g;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          self.scrollIndexRight = columnOrderIndex;\n          self.scrollPixelRight = x;\n          break;\n        }\n      }\n      //draw frozen columns\n      x = 0;\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      for (\n        columnOrderIndex = 0;\n        columnOrderIndex < self.frozenColumn;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          break;\n        }\n      }\n      self.lastFrozenColumnPixel = x;\n      // cell height might have changed during drawing\n      cellHeight = rowHeight;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      // don't draw a tree for the new row\n      treeGrid = self.childGrids[rowOrderIndex];\n      if (rowOrderIndex !== viewData.length && rowOpen) {\n        treeGrid.visible = true;\n        treeGrid.parentNode = {\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\n          offsetHeight: treeHeight,\n          offsetWidth:\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\n          offsetParent: self.intf.parentNode,\n          parentNode: self.intf.parentNode,\n          style: self.style,\n          nodeType: 'canvas-datagrid-tree',\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          rowIndex: rowOrderIndex,\n        };\n        self.visibleCells.unshift({\n          rowIndex: rowOrderIndex,\n          columnIndex: 0,\n          y: treeGrid.parentNode.offsetTop,\n          x: treeGrid.parentNode.offsetLeft,\n          height: treeGrid.height,\n          width: treeGrid.width,\n          style: 'tree-grid',\n          type: treeGrid.parentNode.nodeType,\n        });\n        treeGrid.draw();\n      } else if (treeGrid) {\n        treeGrid.parentNode.offsetHeight = 0;\n        delete self.sizes.trees[rowOrderIndex];\n      }\n      rowHeaders.push([rowData, rowOrderIndex, rowIndex, y, rowHeight]);\n      self.visibleRowHeights[rowOrderIndex] = rowHeight;\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\n      return true;\n    }\n    function initDraw() {\n      self.visibleRows = [];\n      schema = self.getSchema();\n      self.visibleCells = [];\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\n      self.canvasOffsetLeft = self.isChildGrid\n        ? self.parentNode.offsetLeft\n        : -0.5;\n      h = self.height;\n      w = self.width;\n    }\n    function drawBackground() {\n      radiusRect(0, 0, w, h, 0);\n      self.ctx.clip();\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\n      fillRect(0, 0, w, h);\n    }\n    function drawFrozenRows() {\n      var rowOrderIndex,\n        ln = Math.min(viewData.length, self.frozenRow);\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      y = columnHeaderCellHeight;\n      for (rowIndex = 0; rowIndex < ln; rowIndex += 1) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.allowFreezingRows) {\n        // HACK great, another stupid magic number.\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\n        y +=\n          self.style.frozenMarkerBorderWidth +\n          self.style.frozenMarkerWidth -\n          0.4999999999;\n      }\n      self.lastFrozenRowPixel = y;\n    }\n    function drawRows() {\n      self.ctx.save();\n      if (self.frozenRow > 0) {\n        radiusRect(\n          0,\n          self.lastFrozenRowPixel,\n          self.width,\n          self.height - self.lastFrozenRowPixel,\n          0,\n        );\n        self.ctx.clip();\n      }\n      var columnOrderIndex,\n        rowOrderIndex,\n        headerIndex,\n        g = schema.length;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      if (!self.attributes.snapToRow) {\n        y +=\n          -self.scrollBox.scrollTop +\n          self.scrollPixelTop +\n          self.style.cellBorderWidth;\n      }\n      for (\n        rowIndex = self.frozenRow + self.scrollIndexTop;\n        rowIndex < l;\n        rowIndex += 1\n      ) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        self.scrollIndexBottom = rowIndex;\n        self.scrollPixelBottom = y;\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.showNewRow) {\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        rowHeight = cellHeight = self.style.cellHeight;\n        rowOpen = false;\n        for (\n          columnOrderIndex = self.scrollIndexLeft;\n          columnOrderIndex < g;\n          columnOrderIndex += 1\n        ) {\n          headerIndex = self.orders.columns[columnOrderIndex];\n          x += drawCell(self.newRow, viewData.length, viewData.length)(\n            schema[headerIndex],\n            headerIndex,\n            columnOrderIndex,\n          );\n          if (x > self.width + self.scrollBox.scrollLeft) {\n            break;\n          }\n        }\n        rowHeaders.push([\n          self.newRow,\n          viewData.length,\n          viewData.length,\n          y,\n          rowHeight,\n        ]);\n      }\n      self.ctx.restore();\n    }\n    function drawMoveMarkers() {\n      if (!self.movingSelection) {\n        return;\n      }\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\n      moveBorders.forEach(function (c) {\n        addBorderLine(c[0], c[1]);\n      });\n      self.ctx.setLineDash([]);\n    }\n    function drawReorderMarkers() {\n      if (!self.reorderObject) {\n        return;\n      }\n      var b = {\n          height: self.reorderObject.height,\n          width: self.reorderObject.width,\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\n        },\n        m = {\n          width: w,\n          height: h,\n          x: 0,\n          y: 0,\n        };\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\n      if (self.dragMode === 'row-reorder') {\n        b.width = w;\n        b.x = 0;\n        m.width = w;\n        m.height = self.currentCell.height;\n        m.y = self.currentCell.y;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\n          self.currentCell.rowIndex > -1 &&\n          self.currentCell.rowIndex < l\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\n              ? 'b'\n              : 't',\n          );\n        }\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\n        b.height = h;\n        b.y = 0;\n        m.height = h;\n        m.width = self.currentCell.width;\n        m.y = 0;\n        m.x = self.currentCell.x;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.sortColumnIndex !==\n            self.reorderObject.sortColumnIndex &&\n          self.currentCell.sortColumnIndex > -1 &&\n          self.currentCell.sortColumnIndex < schema.length\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\n              ? 'r'\n              : 'l',\n          );\n        }\n      }\n    }\n    function drawBorder() {\n      self.ctx.lineWidth = self.style.gridBorderWidth;\n      self.ctx.strokeStyle = self.style.gridBorderColor;\n      strokeRect(0, 0, self.width, self.height);\n    }\n    function drawSelectionBorders() {\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\n      function dsb(c) {\n        addBorderLine(c[0], c[1]);\n      }\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.save();\n      clipFrozenArea(0);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(1);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(2);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n    }\n    function drawSelectionHandles() {\n      if (self.mobile || self.attributes.allowMovingSelection) {\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\n        self.ctx.fillStyle = self.style.selectionHandleColor;\n        selectionHandles.forEach(function (c) {\n          addselectionHandle(c[0], c[1]);\n          var az = self.attributes.touchSelectHandleZone / 2,\n            ax =\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\n            ay =\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\n          self.visibleCells.unshift({\n            x: ax,\n            y: ay,\n            height: self.style.selectionHandleSize + az,\n            width: self.style.selectionHandleSize + az,\n            style: 'selection-handle-' + c[1],\n          });\n        });\n      }\n    }\n    function drawActiveCell() {\n      if (!aCell) {\n        return;\n      }\n      self.ctx.save();\n      var cl =\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\n          self.activeCell.rowIndex + 1 > self.frozenRow,\n        acx = cl ? self.lastFrozenColumnPixel : 0,\n        acy = cl ? self.lastFrozenRowPixel : 0,\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\n      radiusRect(acx, acy, acw, ach, 0);\n      self.ctx.clip();\n      if (self.attributes.selectionMode === 'row') {\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n          strokeRect(\n            1,\n            aCell.y,\n            self.getHeaderWidth() + rowHeaderCellWidth,\n            self.visibleRowHeights[aCell.rowIndex],\n          );\n        }\n      } else {\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\n      }\n      self.ctx.restore();\n    }\n    function drawFrozenMarkers() {\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\n        xHover =\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\n        yHover =\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\n      if (self.attributes.allowFreezingColumns) {\n        self.ctx.fillStyle = yHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = yHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        self.visibleCells.unshift({\n          x: mx,\n          y: 0,\n          height: self.height,\n          width:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          style: 'frozen-column-marker',\n        });\n      }\n      if (self.attributes.allowFreezingRows) {\n        self.ctx.fillStyle = xHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = xHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\n        self.visibleCells.unshift({\n          x: 0,\n          y: my,\n          height:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          width: self.width,\n          style: 'frozen-row-marker',\n        });\n      }\n      if (self.freezeMarkerPosition) {\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\n        if (self.dragMode === 'frozen-column-marker') {\n          fillRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n          strokeRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n        } else {\n          fillRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n          strokeRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n        }\n      }\n    }\n    function drawPerfLines() {\n      if (!self.attributes.showPerformance) {\n        return;\n      }\n      var pw = 250,\n        px =\n          self.width -\n          pw -\n          self.style.scrollBarWidth -\n          self.style.scrollBarBorderWidth * 2,\n        py = columnHeaderCellHeight,\n        ph = 100;\n      if (scrollDebugCounters.length === 0) {\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (touchPPSCounters.length === 0) {\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (entityCount.length === 0) {\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\n      }\n      self.ctx.lineWidth = 0.5;\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\n        var v;\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\n        self.ctx.fillStyle = color;\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\n        fillText(\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\n          14 + px,\n          py + 16 + rowIndex * 11,\n        );\n      }\n      self.ctx.textAlign = 'left';\n      self.ctx.font = self.style.debugFont;\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      fillRect(px, py, pw, ph);\n      [\n        [\n          'Scroll Height',\n          scrollDebugCounters,\n          0,\n          self.scrollBox.scrollHeight,\n          self.style.debugScrollHeightColor,\n          false,\n        ],\n        [\n          'Scroll Width',\n          scrollDebugCounters,\n          1,\n          self.scrollBox.scrollWidth,\n          self.style.debugScrollWidthColor,\n          false,\n        ],\n        [\n          'Performance',\n          perfCounters,\n          undefined,\n          200,\n          self.style.debugPerformanceColor,\n          false,\n        ],\n        [\n          'Entities',\n          entityCount,\n          undefined,\n          1500,\n          self.style.debugEntitiesColor,\n          false,\n        ],\n        [\n          'TouchPPSX',\n          touchPPSCounters,\n          0,\n          1000,\n          self.style.debugTouchPPSXColor,\n          true,\n        ],\n        [\n          'TouchPPSY',\n          touchPPSCounters,\n          1,\n          1000,\n          self.style.debugTouchPPSYColor,\n          true,\n        ],\n      ].forEach(function (i, index) {\n        i.push(index);\n        dpl.apply(null, i);\n      });\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      entityCount.pop();\n      entityCount.unshift(self.visibleCells.length);\n      scrollDebugCounters.pop();\n      scrollDebugCounters.unshift([\n        self.scrollBox.scrollTop,\n        self.scrollBox.scrollLeft,\n      ]);\n      touchPPSCounters.pop();\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\n    }\n    function drawDebug() {\n      self.ctx.save();\n      var d;\n      if (self.attributes.showPerformance || self.attributes.debug) {\n        if (perfCounters.length === 0) {\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\n        }\n        perfCounters.pop();\n        perfCounters.unshift(performance.now() - p);\n      }\n      if (!self.attributes.debug) {\n        self.ctx.restore();\n        return;\n      }\n      self.ctx.font = self.style.debugFont;\n      d = {};\n      d.perf = (\n        perfCounters.reduce(function (a, b) {\n          return a + b;\n        }, 0) / Math.min(drawCount, perfCounters.length)\n      ).toFixed(1);\n      d.perfDelta = perfCounters[0].toFixed(1);\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\n      d.reorderObject =\n        'x: ' +\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\n      d.reorderTarget =\n        'x: ' +\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\n      d.scale = self.scale;\n      d.startScale = self.startScale;\n      d.scaleDelta = self.scaleDelta;\n      d.zoomDeltaStart = self.zoomDeltaStart;\n      d.touchLength = self.touchLength;\n      d.touches =\n        'y0: ' +\n        (self.touchPosition || { y: 0 }).y +\n        ' y1: ' +\n        (self.touchPosition1 || { y: 0 }).y;\n      d.scrollBox = self.scrollBox.toString();\n      d.scrollIndex =\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\n      d.scrollPixel =\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\n      d.canvasOffset =\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\n      d.touchAnimateTo =\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\n      d.scrollAnimation =\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\n      d.touchDuration = self.touchDuration;\n      d.pointerLockPosition = self.pointerLockPosition\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\n        : '';\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\n      d.touch = !self.touchStart\n        ? ''\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\n      d.entities = self.visibleCells.length;\n      d.hasFocus = self.hasFocus;\n      d.dragMode = self.dragMode;\n      if (self.currentCell) {\n        d.columnIndex = self.currentCell.columnIndex;\n        d.rowIndex = self.currentCell.rowIndex;\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\n        d.sortRowIndex = self.currentCell.sortRowIndex;\n        d.context = self.currentCell.context;\n        d.dragContext = self.currentCell.dragContext;\n        d.style = self.currentCell.style;\n        d.type = self.currentCell.type;\n      }\n      self.ctx.textAlign = 'right';\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\n      fillRect(0, 0, self.width, self.height);\n      Object.keys(d).forEach(function (key, index) {\n        var m = key + ': ' + d[key],\n          lh = 14;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          m,\n          w - 20,\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\n        );\n      });\n      self.ctx.restore();\n    }\n    self.ctx.save();\n    initDraw();\n    drawBackground();\n    drawFrozenRows();\n    drawRows();\n    drawActiveCell();\n    drawHeaders();\n    drawFrozenMarkers();\n    drawSelectionHandles();\n    drawReorderMarkers();\n    drawMoveMarkers();\n    drawBorder();\n    drawSelectionBorders();\n    drawScrollBars();\n    if (checkScrollHeight) {\n      self.resize(true);\n    }\n    drawDebug();\n    drawPerfLines();\n    if (self.dispatchEvent('afterdraw', {})) {\n      return;\n    }\n    self.ctx.restore();\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport isPrintableKeyEvent from 'is-printable-key-event';\n\nexport default function (self) {\n  var wheeling;\n  self.stopPropagation = function (e) {\n    e.stopPropagation();\n  };\n  /**\n   * Adds an event listener to the given event.\n   * @memberof canvasDatagrid\n   * @name addEventListener\n   * @method\n   * @param {string} ev The name of the event to subscribe to.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.addEventListener = function (ev, fn) {\n    self.events[ev] = self.events[ev] || [];\n    self.events[ev].unshift(fn);\n  };\n  /**\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.removeEventListener = function (ev, fn) {\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n      if (fn === sfn) {\n        self.events[ev].splice(idx, 1);\n      }\n    });\n  };\n  /**\n   * Fires the given event, passing an event object to the event subscribers.\n   * @memberof canvasDatagrid\n   * @name dispatchEvent\n   * @method\n   * @param {number} ev The name of the event to dispatch.\n   * @param {number} e The event object.\n   */\n  self.dispatchEvent = function (ev, e) {\n    e = ev.type ? ev : e || {};\n    ev = ev.type || ev;\n    var defaultPrevented;\n    function preventDefault() {\n      defaultPrevented = true;\n    }\n    if (!self.events[ev]) {\n      return;\n    }\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\n      e.ctx = self.ctx;\n      e.preventDefault = preventDefault;\n      fn.apply(self.intf, [e]);\n    });\n    return defaultPrevented;\n  };\n  self.getRatio = function () {\n    return Math.min(\n      self.attributes.maxPixelRatio,\n      (window.devicePixelRatio || 1) /\n        (self.ctx.webkitBackingStorePixelRatio ||\n          self.ctx.mozBackingStorePixelRatio ||\n          self.ctx.msBackingStorePixelRatio ||\n          self.ctx.oBackingStorePixelRatio ||\n          self.ctx.backingStorePixelRatio ||\n          1),\n    );\n  };\n  self.resize = function (drawAfterResize) {\n    if (!self.canvas) {\n      return;\n    }\n    var x,\n      v = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-bar',\n      },\n      n = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-bar',\n      },\n      vb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-box',\n      },\n      nb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-box',\n      },\n      co = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        isCorner: true,\n        isScrollBoxCorner: true,\n        style: 'scroll-box-corner',\n      },\n      m = self.style.scrollBarBoxMargin * 2,\n      b = self.style.scrollBarBorderWidth * 2,\n      d = self.style.scrollBarBoxMargin * 0.5,\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\n      ratio = self.getRatio(),\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n      cellBorder = self.style.cellBorderWidth * bm,\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\n      dataHeight = 0,\n      dataWidth = 0,\n      dims,\n      l = (self.viewData || []).length,\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      ch = self.style.cellHeight,\n      s = self.getSchema();\n    // sets actual DOM canvas element\n    function checkScrollBoxVisibility() {\n      self.scrollBox.horizontalBarVisible =\n        (self.style.width !== 'auto' &&\n          dataWidth > self.scrollBox.width &&\n          self.style.overflowX !== 'hidden') ||\n        self.style.overflowX === 'scroll';\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\n      self.scrollBox.verticalBarVisible =\n        (self.style.height !== 'auto' &&\n          dataHeight > self.scrollBox.height &&\n          self.style.overflowY !== 'hidden') ||\n        self.style.overflowY === 'scroll';\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\n    }\n    function setScrollBoxSize() {\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\n    }\n    function setCanvasSize() {\n      if (self.isChildGrid) {\n        return;\n      }\n      dims = {\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\n      };\n      ['width', 'height'].forEach(function (dim) {\n        //TODO: support inherit\n        if (\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\n        ) {\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\n        } else if (\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\n        ) {\n          self.parentNodeStyle[dim] = self.style[dim];\n          if (self.isComponent) {\n            self.canvas.style[dim] = self.style[dim];\n          }\n        }\n      });\n    }\n    self.scrollCache.x = [];\n    self.scrollCache.y = [];\n    for (x = 0; x < l; x += 1) {\n      self.scrollCache.y[x] = dataHeight;\n      dataHeight +=\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\n    }\n    if (l > 1) {\n      self.scrollCache.y[x] = dataHeight;\n    }\n    dataWidth =\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\n        column = s[self.orders.columns[columnIndex]];\n        if (column.hidden) {\n          self.scrollCache.x[columnIndex] = accumulator;\n          return accumulator;\n        }\n        var va =\n          accumulator + self.getColummnWidth(self.orders.columns[columnIndex]);\n        self.scrollCache.x[columnIndex] = va;\n        return va;\n      }, 0) || 0;\n    if (self.attributes.showNewRow) {\n      dataHeight += ch;\n    }\n    if (self.attributes.snapToRow) {\n      dataHeight += self.style.cellHeight;\n    }\n    setCanvasSize();\n    if (self.isChildGrid) {\n      self.width = self.parentNode.offsetWidth;\n      self.height = self.parentNode.offsetHeight;\n    } else if (\n      self.height !== self.canvas.offsetHeight ||\n      self.width !== self.canvas.offsetWidth\n    ) {\n      self.height = self.canvas.offsetHeight;\n      self.width = self.canvas.offsetWidth;\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\n    }\n    /// calculate scroll bar dimensions\n    // non-controversial\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\n    self.scrollBox.left = rowHeaderCellWidth;\n    // width and height of scroll box\n    setScrollBoxSize();\n    // is the data larger than the scroll box\n    checkScrollBoxVisibility();\n    // if the scroll box is visible, make room for it by expanding the size of the element\n    // if the other dimension is set to auto\n    if (self.scrollBox.horizontalBarVisible) {\n      if (self.style.height === 'auto' && !self.isChildGrid) {\n        self.height += sbw;\n      }\n      dataHeight += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    if (self.scrollBox.verticalBarVisible) {\n      if (self.style.width === 'auto' && !self.isChildGrid) {\n        self.width += sbw;\n      }\n      dataWidth += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    // set again after bar visibility checks\n    setScrollBoxSize();\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\n    self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\n    self.scrollBox.scrollBoxWidth =\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    // TODO: This heightBoxRatio number is terribly wrong.\n    // They should be a result of the size of the grid/canvas?\n    // it being off causes the scroll bar to \"slide\" under\n    // the dragged mouse.\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\n    self.scrollBox.heightBoxRatio =\n      (self.scrollBox.height - columnHeaderCellHeight) / dataHeight;\n    self.scrollBox.scrollBoxHeight =\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    self.scrollBox.scrollBoxWidth = Math.max(\n      self.scrollBox.scrollBoxWidth,\n      self.style.scrollBarBoxMinSize,\n    );\n    self.scrollBox.scrollBoxHeight = Math.max(\n      self.scrollBox.scrollBoxHeight,\n      self.style.scrollBarBoxMinSize,\n    );\n    // horizontal\n    n.x += rowHeaderCellWidth;\n    n.y += self.height - self.style.scrollBarWidth - d;\n    n.width =\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    // horizontal box\n    nb.y = n.y + self.style.scrollBarBoxMargin;\n    nb.width = self.scrollBox.scrollBoxWidth;\n    nb.height = self.style.scrollBarBoxWidth;\n    // vertical\n    v.x +=\n      self.width -\n      self.style.scrollBarWidth -\n      self.style.scrollBarBorderWidth -\n      d;\n    v.y += columnHeaderCellHeight;\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    v.height =\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\n    // vertical box\n    vb.x = v.x + self.style.scrollBarBoxMargin;\n    vb.width = self.style.scrollBarBoxWidth;\n    vb.height = self.scrollBox.scrollBoxHeight;\n    // corner\n    co.x = n.x + n.width + m;\n    co.y = v.y + v.height + m;\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    self.scrollBox.entities = {\n      horizontalBar: n,\n      horizontalBox: nb,\n      verticalBar: v,\n      verticalBox: vb,\n      corner: co,\n    };\n    self.scrollBox.bar = {\n      v: v,\n      h: n,\n    };\n    self.scrollBox.box = {\n      v: vb,\n      h: nb,\n    };\n    /// calculate page and dom elements\n    self.page = Math.max(\n      1,\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\n    );\n    // set canvas drawing related items\n    if (!self.isChildGrid) {\n      self.canvas.width = self.width * ratio;\n      self.canvas.height = self.height * ratio;\n      self.ctx.scale(ratio, ratio);\n    }\n    // resize any open dom elements (input/textarea)\n    self.resizeEditInput();\n    self.scroll(true);\n    if (drawAfterResize) {\n      self.draw(true);\n    }\n    self.dispatchEvent('resize', {});\n    return true;\n  };\n  self.scroll = function (dontDraw) {\n    var s = self.getSchema(),\n      l = (self.viewData || []).length,\n      ch = self.style.cellHeight;\n    // go too far in leaps, then get focused\n    self.scrollIndexTop = Math.floor(\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\n    );\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    // sometimes the grid is rendered but the height is zero\n    if (self.scrollBox.scrollHeight === 0) {\n      self.scrollIndexTop = 0;\n    }\n    self.scrollPixelTop = 0;\n    self.scrollIndexLeft = self.frozenColumn;\n    self.scrollPixelLeft = 0;\n    while (\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\n      self.scrollIndexTop < self.viewData.length\n    ) {\n      // start on index +1 since index 0 was used in \"go too far\" section above\n      self.scrollIndexTop += 1;\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    }\n    while (\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\n      self.scrollIndexLeft < s.length\n    ) {\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\n      self.scrollIndexLeft += 1;\n    }\n    if (s.length > 0) {\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\n      self.scrollPixelLeft -= self.getColummnWidth(\n        self.orders.columns[self.scrollIndexLeft],\n      );\n    }\n    if ((self.viewData || []).length > 0) {\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\n      self.scrollPixelTop = Math.max(\n        self.scrollPixelTop -\n          (self.viewData[self.scrollIndexTop]\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\n              (self.sizes.trees[self.scrollIndexTop] || 0)\n            : ch) *\n            self.scale,\n        0,\n      );\n    }\n    self.ellipsisCache = {};\n    if (!dontDraw) {\n      self.draw(true);\n    }\n    //TODO: figure out why this has to be delayed for child grids\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\n    requestAnimationFrame(self.resizeEditInput);\n    self.dispatchEvent('scroll', {\n      top: self.scrollBox.scrollTop,\n      left: self.scrollBox.scrollLeft,\n    });\n  };\n  self.mousemove = function (e, overridePos) {\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    self.mouse = overridePos || self.getLayerPos(e);\n    var ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      i,\n      s = self.getSchema(),\n      dragBounds,\n      sBounds,\n      x = self.mouse.x,\n      y = self.mouse.y,\n      o = self.getCellAt(x, y),\n      delta,\n      ev = { NativeEvent: e, cell: o, x: x, y: y },\n      previousCell = self.currentCell;\n    clearTimeout(self.scrollTimer);\n    if (!self.isInGrid({ x: x, y: y })) {\n      self.hasFocus = false;\n    }\n    if (self.dispatchEvent('mousemove', ev)) {\n      return;\n    }\n    if (o && self.currentCell) {\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== o.rowIndex;\n      self.columnBoundaryCrossed =\n        self.currentCell.columnIndex !== o.columnIndex;\n      self.cellBoundaryCrossed =\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\n      ['row', 'column', 'cell'].forEach(function (prefix) {\n        if (self[prefix + 'BoundaryCrossed']) {\n          ev.cell = previousCell;\n          self.dispatchEvent(prefix + 'mouseout', ev);\n          ev.cell = o;\n          self.dispatchEvent(prefix + 'mouseover', ev);\n        }\n      });\n    }\n    self.currentCell = o;\n    if (!self.hasFocus) {\n      return;\n    }\n    self.hovers = {};\n    if (!self.draggingItem && o && self.scrollModes.indexOf(o.context) === -1) {\n      self.dragItem = o;\n      self.dragMode = o.dragContext;\n      self.cursor = o.context;\n      if (o.context === 'cell') {\n        self.cursor = 'default';\n        self.hovers = { rowIndex: o.rowIndex, columnIndex: o.columnIndex };\n      }\n      if ((self.selecting || self.reorderObject) && o.context === 'cell') {\n        delta = {\n          x: Math.abs(self.dragStart.x - x),\n          y: Math.abs(self.dragStart.y - y),\n        };\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\n          self.dragStartObject = {\n            rowIndex: self.activeCell.rowIndex,\n            columnIndex: self.activeCell.columnIndex,\n          };\n        }\n        dragBounds = {\n          top: Math.min(self.dragStartObject.rowIndex, o.rowIndex),\n          left: Math.min(self.dragStartObject.columnIndex, o.columnIndex),\n          bottom: Math.max(self.dragStartObject.rowIndex, o.rowIndex),\n          right: Math.max(self.dragStartObject.columnIndex, o.columnIndex),\n        };\n        if (self.dragStartObject.columnIndex === -1) {\n          sBounds = self.getSelectionBounds();\n          dragBounds.left = -1;\n          dragBounds.right = s.length - 1;\n          dragBounds.top = Math.min(sBounds.top, o.rowIndex);\n          dragBounds.bottom = Math.max(sBounds.bottom, o.rowIndex);\n        }\n        if (\n          self.dragStartObject.rowIndex !== o.rowIndex ||\n          self.dragStartObject.columnIndex !== o.columnIndex\n        ) {\n          self.ignoreNextClick = true;\n        }\n        if (\n          self.cellBoundaryCrossed ||\n          (delta.x === 0 && delta.y === 0) ||\n          self.attributes.selectionMode === 'row'\n        ) {\n          if (\n            (self.attributes.selectionMode === 'row' ||\n              self.dragStartObject.columnIndex === -1) &&\n            self.rowBoundaryCrossed\n          ) {\n            self.selectRow(o.rowIndex, ctrl, null, true);\n          } else if (self.attributes.selectionMode !== 'row') {\n            if (!self.dragAddToSelection && o.rowIndex !== undefined) {\n              if (\n                self.selections[o.rowIndex] &&\n                self.selections[o.rowIndex].indexOf(o.columnIndex) !== -1\n              ) {\n                self.selections[o.rowIndex].splice(\n                  self.selections[o.rowIndex].indexOf(o.columnIndex),\n                  1,\n                );\n              }\n            } else {\n              self.selections[o.rowIndex] = self.selections[o.rowIndex] || [];\n              if (self.selections[o.rowIndex].indexOf(o.columnIndex) === -1) {\n                self.selections[o.rowIndex].push(o.columnIndex);\n              }\n            }\n          }\n        }\n        if (\n          (!self.selectionBounds ||\n            dragBounds.top !== self.selectionBounds.top ||\n            dragBounds.left !== self.selectionBounds.left ||\n            dragBounds.bottom !== self.selectionBounds.bottom ||\n            dragBounds.right !== self.selectionBounds.right) &&\n          !ctrl\n        ) {\n          self.selections = [];\n          sBounds = dragBounds;\n          if (self.attributes.selectionMode === 'row') {\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\n              self.selectRow(i, true, null, true);\n            }\n          } else if (dragBounds.top !== -1) {\n            self.selectArea(sBounds, true);\n          }\n        }\n        self.autoScrollZone(e, x, y, ctrl);\n      }\n    }\n    self.cellBoundaryCrossed = false;\n    self.rowBoundaryCrossed = false;\n    self.columnBoundaryCrossed = false;\n    self.draw(true);\n  };\n  self.click = function (e, overridePos) {\n    var i,\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\n      ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      pos = overridePos || self.getLayerPos(e);\n    self.currentCell = self.getCellAt(pos.x, pos.y);\n    if (self.currentCell.grid !== undefined) {\n      return;\n    }\n    function checkSelectionChange() {\n      var ev,\n        sb = self.getSelectionBounds();\n      if (startingBounds === JSON.stringify(sb)) {\n        return;\n      }\n      ev = {\n        selections: self.selections,\n        selectionBounds: self.getSelectionBounds(),\n      };\n      Object.defineProperty(ev, 'selectedData', {\n        get: function () {\n          return self.getSelectedData();\n        },\n      });\n      self.dispatchEvent('selectionchanged', ev);\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    if (self.ignoreNextClick) {\n      self.ignoreNextClick = false;\n      return;\n    }\n    i = self.currentCell;\n    if (\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\n        -1 &&\n      !ctrl\n    ) {\n      self.setActiveCell(i.columnIndex, i.rowIndex);\n    }\n    if (self.currentCell.context === 'cell') {\n      if (self.currentCell.style === 'cornerCell') {\n        self.selectAll();\n        self.draw();\n        checkSelectionChange();\n        return;\n      }\n      if (self.currentCell.style === 'columnHeaderCell') {\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\n          if (self.orderBy === i.header.name) {\n            self.orderDirection =\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\n          } else {\n            self.orderDirection = 'asc';\n          }\n          self.order(i.header.name, self.orderDirection);\n          checkSelectionChange();\n          return;\n        }\n        if (self.attributes.columnHeaderClickBehavior === 'select') {\n          self.selectColumn(i.header.index, ctrl, e.shiftKey);\n          self.draw();\n          return;\n        }\n      }\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\n      if (\n        self.attributes.selectionMode === 'row' ||\n        self.currentCell.style === 'rowHeaderCell'\n      ) {\n        if (\n          self.currentCell.style === 'rowHeaderCell' &&\n          self.attributes.tree &&\n          pos.x > 0 &&\n          pos.x - self.currentCell.x <\n            self.style.treeArrowWidth +\n              self.style.treeArrowMarginLeft +\n              self.style.treeArrowMarginRight +\n              self.style.treeArrowClickRadius &&\n          pos.y - self.currentCell.y <\n            self.style.treeArrowHeight +\n              self.style.treeArrowMarginTop +\n              self.style.treeArrowClickRadius &&\n          pos.y > 0\n        ) {\n          self.toggleTree(i.rowIndex);\n          return;\n        }\n      }\n      if (e.shiftKey && !ctrl) {\n        self.selectionBounds = self.getSelectionBounds();\n        self.selectArea(undefined, false);\n      }\n    }\n    checkSelectionChange();\n    self.draw(true);\n  };\n  self.dragResizeColumn = function (e) {\n    var pos, x, y;\n    pos = self.getLayerPos(e);\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\n    if (x < self.style.minColumnWidth) {\n      x = self.style.minColumnWidth;\n    }\n    if (y < self.style.minRowHeight) {\n      y = self.style.minRowHeight;\n    }\n    if (\n      self.dispatchEvent('resizecolumn', {\n        x: x,\n        y: y,\n        draggingItem: self.draggingItem,\n      })\n    ) {\n      return false;\n    }\n    if (\n      self.scrollBox.scrollLeft >\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\n      self.dragMode === 'ew-resize'\n    ) {\n      self.resize(true);\n      self.scrollBox.scrollLeft += x;\n    }\n    if (self.dragMode === 'ew-resize') {\n      self.sizes.columns[\n        self.draggingItem.header.style === 'rowHeaderCell'\n          ? 'cornerCell'\n          : self.draggingItem.sortColumnIndex\n      ] = x;\n      if (\n        ['rowHeaderCell', 'cornerCell'].indexOf(\n          self.draggingItem.header.style,\n        ) !== -1\n      ) {\n        self.resize(true);\n      }\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.dragMode === 'ns-resize') {\n      if (self.draggingItem.rowOpen) {\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\n      } else if (self.attributes.globalRowResize) {\n        self.style.cellHeight = y;\n      } else {\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\n      }\n      self.dispatchEvent('resizerow', { row: y });\n      self.resizeChildGrids();\n      return;\n    }\n    self.ellipsisCache = {};\n  };\n  self.stopDragResize = function () {\n    self.resize();\n    document.body.removeEventListener(\n      'mousemove',\n      self.dragResizeColumn,\n      false,\n    );\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\n    self.setStorageData();\n    self.draw(true);\n    self.ignoreNextClick = true;\n  };\n  self.scrollGrid = function (e) {\n    var pos = self.getLayerPos(e);\n    if (\n      self.attributes.scrollPointerLock &&\n      self.pointerLockPosition &&\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n        self.scrollStartMode,\n      ) !== -1\n    ) {\n      self.pointerLockPosition.x += e.movementX;\n      self.pointerLockPosition.y += e.movementY;\n      self.pointerLockPosition.x = Math.min(\n        self.width - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.x),\n      );\n      self.pointerLockPosition.y = Math.min(\n        self.height - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.y),\n      );\n      pos = self.pointerLockPosition;\n    }\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\n    if (\n      self.scrollMode === 'horizontal-scroll-box' &&\n      self.scrollStartMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollStartMode = 'horizontal-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.left = self.scrollBox.scrollLeft;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollMode === 'vertical-scroll-box' &&\n      self.scrollStartMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollStartMode = 'vertical-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.top = self.scrollBox.scrollTop;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollStartMode === 'vertical-scroll-box' &&\n      self.scrollMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollMode = 'vertical-scroll-box';\n    }\n    if (\n      self.scrollStartMode === 'horizontal-scroll-box' &&\n      self.scrollMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollMode = 'horizontal-scroll-box';\n    }\n    clearTimeout(self.scrollTimer);\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\n      return;\n    }\n    if (self.scrollMode === 'vertical-scroll-box') {\n      self.scrollBox.scrollTop =\n        self.scrollStart.top +\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\n    } else if (self.scrollMode === 'vertical-scroll-top') {\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n    if (self.scrollMode === 'horizontal-scroll-box') {\n      self.scrollBox.scrollLeft =\n        self.scrollStart.left +\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.stopScrollGrid = function () {\n    clearTimeout(self.scrollTimer);\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n    document.removeEventListener('mousemove', self.scrollGrid, false);\n  };\n  self.dragReorder = function (e) {\n    var pos,\n      x,\n      y,\n      columReorder = self.dragMode === 'column-reorder',\n      rowReorder = self.dragMode === 'row-reorder';\n    pos = self.getLayerPos(e);\n    x = pos.x - self.dragStart.x;\n    y = pos.y - self.dragStart.y;\n    if (!self.attributes.allowColumnReordering && columReorder) {\n      return;\n    }\n    if (!self.attributes.allowRowReordering && rowReorder) {\n      return;\n    }\n    if (\n      self.dispatchEvent('reordering', {\n        NativeEvent: e,\n        source: self.dragStartObject,\n        target: self.currentCell,\n        dragMode: self.dragMode,\n      })\n    ) {\n      return;\n    }\n    if (\n      Math.abs(x) > self.attributes.reorderDeadZone ||\n      Math.abs(y) > self.attributes.reorderDeadZone\n    ) {\n      self.reorderObject = self.draggingItem;\n      self.reorderTarget = self.currentCell;\n      self.reorderObject.dragOffset = {\n        x: x,\n        y: y,\n      };\n      self.autoScrollZone(\n        e,\n        columReorder ? pos.x : -1,\n        rowReorder ? pos.y : -1,\n        false,\n      );\n    }\n  };\n  self.stopDragReorder = function (e) {\n    var oIndex,\n      tIndex,\n      cr = {\n        'row-reorder': self.orders.rows,\n        'column-reorder': self.orders.columns,\n      },\n      i = {\n        'row-reorder': 'rowIndex',\n        'column-reorder': 'sortColumnIndex',\n      }[self.dragMode];\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\n    if (\n      self.reorderObject &&\n      self.reorderTarget &&\n      ((self.dragMode === 'column-reorder' &&\n        self.reorderTarget.sortColumnIndex > -1 &&\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\n        (self.dragMode === 'row-reorder' &&\n          self.reorderTarget.rowIndex > -1 &&\n          self.reorderTarget.rowIndex < self.viewData.length)) &&\n      self.reorderObject[i] !== self.reorderTarget[i] &&\n      !self.dispatchEvent('reorder', {\n        NativeEvent: e,\n        source: self.reorderObject,\n        target: self.reorderTarget,\n        dragMode: self.dragMode,\n      })\n    ) {\n      self.ignoreNextClick = true;\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\n      cr[self.dragMode].splice(oIndex, 1);\n      cr[self.dragMode].splice(tIndex, 0, self.reorderObject[i]);\n      if (self.dragMode === 'column-reorder') {\n        self.orders.columns = cr[self.dragMode];\n      } else {\n        self.orders.rows = cr[self.dragMode];\n      }\n      self.resize();\n      self.setStorageData();\n    }\n    self.reorderObject = undefined;\n    self.reorderTarget = undefined;\n    self.draw(true);\n  };\n  self.dragMove = function (e) {\n    if (\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.moveOffset = {\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\n    };\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopDragMove = function (e) {\n    document.body.removeEventListener('mousemove', self.dragMove, false);\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\n    var b = self.getSelectionBounds();\n    if (\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      self.movingSelection = undefined;\n      self.moveOffset = undefined;\n      self.draw(true);\n      return;\n    }\n    if (self.moveOffset) {\n      self.moveTo(\n        self.movingSelection,\n        b.left + self.moveOffset.x,\n        b.top + self.moveOffset.y,\n      );\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\n    }\n    self.movingSelection = undefined;\n    self.moveOffset = undefined;\n    self.draw(true);\n  };\n  self.freezeMove = function (e) {\n    if (\n      self.dispatchEvent('freezemoving', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.ignoreNextClick = true;\n    self.freezeMarkerPosition = pos;\n    if (\n      self.currentCell &&\n      self.currentCell.rowIndex !== undefined &&\n      self.dragMode === 'frozen-row-marker'\n    ) {\n      self.scrollBox.scrollTop = 0;\n      self.frozenRow = self.currentCell.rowIndex + 1;\n    }\n    if (\n      self.currentCell &&\n      self.currentCell.columnIndex !== undefined &&\n      self.dragMode === 'frozen-column-marker'\n    ) {\n      self.scrollBox.scrollLeft = 0;\n      self.frozenColumn = self.currentCell.columnIndex + 1;\n    }\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopFreezeMove = function (e) {\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\n    self.freezeMarkerPosition = undefined;\n    if (\n      self.dispatchEvent('endfreezemove', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      self.frozenRow = self.startFreezeMove.x;\n      self.frozenColumn = self.startFreezeMove.y;\n      self.draw(true);\n      return;\n    }\n    self.draw(true);\n  };\n  self.mousedown = function (e, overridePos) {\n    self.lastMouseDownTarget = e.target;\n    if (\n      self.dispatchEvent('mousedown', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (e.button === 2 || self.input) {\n      return;\n    }\n    var ctrl = e.ctrlKey || e.metaKey,\n      move = /-move/.test(self.dragMode),\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\n      resize = /-resize/.test(self.dragMode);\n    self.dragStart = overridePos || self.getLayerPos(e);\n    self.scrollStart = {\n      left: self.scrollBox.scrollLeft,\n      top: self.scrollBox.scrollTop,\n    };\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\n    self.dragAddToSelection = !self.dragStartObject.selected;\n    if (\n      !ctrl &&\n      !e.shiftKey &&\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\n        self.dragStartObject.context,\n      ) &&\n      self.currentCell &&\n      !self.currentCell.isColumnHeader &&\n      !move &&\n      !freeze &&\n      !resize\n    ) {\n      self.selections = [];\n    }\n    if (self.dragStartObject.isGrid) {\n      return;\n    }\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\n      self.scrollMode = self.dragStartObject.context;\n      self.scrollStartMode = self.dragStartObject.context;\n      self.scrollGrid(e);\n      if (\n        self.attributes.scrollPointerLock &&\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n          self.scrollStartMode,\n        ) !== -1\n      ) {\n        self.pointerLockPosition = {\n          x: self.dragStart.x,\n          y: self.dragStart.y,\n        };\n        self.canvas.requestPointerLock();\n      }\n      document.addEventListener('mousemove', self.scrollGrid, false);\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\n      self.ignoreNextClick = true;\n      return;\n    }\n    if (self.dragMode === 'cell') {\n      self.selecting = true;\n      if (\n        (self.attributes.selectionMode === 'row' ||\n          self.dragStartObject.columnIndex === -1) &&\n        self.dragStartObject.rowIndex > -1\n      ) {\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\n      } else if (self.attributes.selectionMode !== 'row') {\n        self.mousemove(e);\n      }\n      return;\n    }\n    if (move) {\n      self.draggingItem = self.dragItem;\n      self.movingSelection = self.selections.concat([]);\n      self.dragging = self.dragStartObject;\n      if (\n        self.dispatchEvent('beginmove', {\n          NativeEvent: e,\n          cell: self.currentCell,\n        })\n      ) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.dragMove, false);\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\n      return self.mousemove(e);\n    }\n    if (freeze) {\n      self.draggingItem = self.dragItem;\n      self.startFreezeMove = {\n        x: self.frozenRow,\n        y: self.frozenColumn,\n      };\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.freezeMove, false);\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\n      return self.mousemove(e);\n    }\n    if (resize) {\n      self.draggingItem = self.dragItem;\n      if (self.draggingItem.rowOpen) {\n        self.resizingStartingHeight =\n          self.sizes.trees[self.draggingItem.rowIndex];\n      } else {\n        self.resizingStartingHeight =\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\n      }\n      self.resizingStartingWidth =\n        self.sizes.columns[\n          self.draggingItem.header.style === 'rowHeaderCell'\n            ? 'cornerCell'\n            : self.draggingItem.sortColumnIndex\n        ] || self.draggingItem.width;\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\n      return;\n    }\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\n      self.draggingItem = self.dragStartObject;\n      document.body.addEventListener('mousemove', self.dragReorder, false);\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\n      return;\n    }\n  };\n  self.mouseup = function (e) {\n    clearTimeout(self.scrollTimer);\n    self.cellBoundaryCrossed = true;\n    self.rowBoundaryCrossed = true;\n    self.columnBoundaryCrossed = true;\n    self.selecting = undefined;\n    self.draggingItem = undefined;\n    self.dragStartObject = undefined;\n    if (\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    if (self.currentCell && self.currentCell.grid !== undefined) {\n      return;\n    }\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\n      self.controlInput.focus();\n    }\n    e.preventDefault();\n  };\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\n  self.getAdjacentCells = function () {\n    var x,\n      i,\n      s = self.getSchema(),\n      o = {};\n    for (x = 0; x < s.length; x += 1) {\n      i = self.orders.columns[x];\n      if (!s[i].hidden) {\n        if (o.first === undefined) {\n          o.first = x;\n          o.left = x;\n        }\n        o.last = x;\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\n          o.right = x;\n        }\n        if (x < self.activeCell.columnIndex) {\n          o.left = x;\n        }\n      }\n    }\n    if (o.right === undefined) {\n      o.right = o.last;\n    }\n    return o;\n  };\n  self.keydown = function (e) {\n    var i,\n      ev,\n      adjacentCells = self.getAdjacentCells(),\n      x = self.activeCell.columnIndex,\n      y = self.activeCell.rowIndex,\n      ctrl = e.ctrlKey || e.metaKey,\n      last = self.viewData.length - 1,\n      s = self.getSchema(),\n      cols = s.length - 1;\n\n    var defaultPrevented = self.dispatchEvent('keydown', {\n      NativeEvent: e,\n      cell: self.currentCell,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!self.hasFocus) {\n      return;\n    }\n\n    // If a user starts typing content, switch to \"Enter\" mode\n    if (isPrintableKeyEvent(e) && !ctrl) {\n      return self.beginEditAt(x, y, e, true);\n    }\n\n    if (self.attributes.showNewRow) {\n      last += 1;\n    }\n\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Escape') {\n      self.selectNone();\n    } else if (ctrl && e.key === 'a') {\n      self.selectAll();\n    } else if (e.key === 'ArrowDown') {\n      y += 1;\n    } else if (e.key === 'ArrowUp') {\n      y -= 1;\n    } else if (\n      (e.key === 'ArrowLeft' && !ctrl) ||\n      (e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.left;\n    } else if (\n      (e.key === 'ArrowRight' && !ctrl) ||\n      (!e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.right;\n    } else if (e.key === 'PageUp') {\n      y -= self.page;\n      e.preventDefault();\n    } else if (e.key === 'PageDown') {\n      y += self.page;\n      e.preventDefault();\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\n      y = 0;\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\n      y = self.viewData.length - 1;\n    } else if (ctrl && e.key === 'ArrowRight') {\n      x = adjacentCells.last;\n    } else if (ctrl && e.key === 'ArrowLeft') {\n      x = adjacentCells.first;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      return self.beginEditAt(x, y, e);\n    }\n\n    if (x < 0 || Number.isNaN(x)) {\n      x = adjacentCells.first;\n    }\n    if (y > last) {\n      y = last;\n    }\n    if (y < 0 || Number.isNaN(y)) {\n      y = 0;\n    }\n    if (x > cols) {\n      x = adjacentCells.last;\n    }\n\n    // TODO - most likely some column order related bugs in key based selection\n    // Arrows\n    var isArrowKey = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n    ].includes(e.key);\n\n    if (e.shiftKey && isArrowKey) {\n      self.selections[Math.max(y, 0)] = self.selections[Math.max(y, 0)] || [];\n      self.selections[Math.max(y, 0)].push(x);\n\n      self.selectionBounds = self.getSelectionBounds();\n      self.selectArea(undefined, ctrl);\n\n      self.draw(true);\n    }\n\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\n      self.scrollIntoView(\n        x !== self.activeCell.columnIndex ? x : undefined,\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\n      );\n\n      self.setActiveCell(x, y);\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\n        if (!ctrl) {\n          self.selections = [];\n        }\n        self.selections[y] = self.selections[y] || [];\n        self.selections[y].push(x);\n        ev = {\n          selectedData: self.getSelectedData(),\n          selections: self.selections,\n          selectionBounds: self.getSelectionBounds(),\n        };\n        Object.defineProperty(ev, 'selectedData', {\n          get: function () {\n            return self.getSelectedData();\n          },\n        });\n        self.dispatchEvent('selectionchanged', ev);\n      }\n      self.draw(true);\n    }\n  };\n  self.keyup = function (e) {\n    if (\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n  };\n  self.keypress = function (e) {\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n  };\n  self.dblclick = function (e) {\n    if (\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'columnHeaderCell'\n    ) {\n      self.fitColumnToValues(self.currentCell.header.name);\n    } else if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'cornerCell'\n    ) {\n      self.autosize();\n    } else if (['cell', 'activeCell'].indexOf(self.currentCell.style) !== -1) {\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\n    }\n  };\n  self.scrollWheel = function (e) {\n    var l,\n      t,\n      ev = e,\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\n      deltaMode =\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\n    var e = e.NativeEvent || e;\n    if (wheeling) {\n      ev.preventDefault(e);\n      return;\n    }\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\n      return;\n    }\n    self.touchHaltAnimation = true;\n    l = self.scrollBox.scrollLeft;\n    t = self.scrollBox.scrollTop;\n    if (self.hasFocus) {\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n      if (deltaMode === 1) {\n        // line mode = 17 pixels per line\n        deltaY = deltaY * 17;\n      }\n      if (\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\n          deltaY > 0) ||\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\n          deltaX > 0) ||\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\n      ) {\n        ev.preventDefault(e);\n      }\n      wheeling = setTimeout(function () {\n        wheeling = undefined;\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\n      }, 1);\n    }\n  };\n\n  self.pasteData = function (\n    pasteValue,\n    mimeType,\n    startRowIndex,\n    startColIndex,\n  ) {\n    var schema = self.getVisibleSchema();\n\n    const isSupportedHtmlTable = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)/.test(\n        htmlString,\n      );\n\n    // TODO: support pasting tables from Excel\n    if (\n      mimeType === 'text/html' &&\n      isSupportedHtmlTable(pasteValue) === false\n    ) {\n      console.warn(\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\n      );\n      console.warn(\n        'Data with the mime type text/html not in this format will not be imported as row data.',\n      );\n\n      return;\n    }\n\n    function parseData(data, mimeType) {\n      // TODO: use DOMParser\n      if (mimeType === 'text/html') {\n        // strip table beginning and ending off, then split at rows\n        var cleanedHtmlData = data\n          .substring(\n            data.indexOf('<table><tr>') + 11,\n            data.indexOf('</tr></table>'),\n          )\n          .split('</tr><tr>')\n          .filter(\n            // ditch any headers on the table\n            (row) => !/^<th>|^<thead>/.test(row),\n          )\n          .map(\n            // split row into individual cells\n            (row) =>\n              row\n                .match(/<td>[^<]+/g)\n                .map((match) => match.replace(/^<td>/, '')),\n          );\n\n        return cleanedHtmlData;\n      }\n\n      // Default data format is string, so split on new line,\n      // and then enclose in an array (a row with one cell):\n      return data.split('\\n').map((value) => [value]);\n    }\n\n    var rows = parseData(pasteValue, mimeType);\n\n    // Special case: if rows.length = 1, we paste this value in each\n    // selected cell. This mimics Excel's paste functionality, and works\n    // as a poor-man's fill-down.\n    if (rows.length === 1) {\n      var cellData = rows[0][0];\n\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\n        data[rowIndex][colName] = cellData;\n      });\n    } else {\n      var selections = [];\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        // Rows may have been moved by user, so get the actual row index\n        // (instead of the row index at which the row is rendered):\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\n        var cells = rows[rowIndex];\n\n        var existingRowData = self.viewData[realRowIndex];\n        var newRowData = Object.assign({}, existingRowData);\n\n        selections[realRowIndex] = [];\n\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n          var column = schema[startColIndex + colIndex];\n\n          if (!column) {\n            console.warn('Paste data exceeded grid bounds. Skipping.');\n            continue;\n          }\n\n          var columnName = column.name;\n          var cellData = cells[colIndex];\n\n          if (cellData === undefined || cellData === null) {\n            newRowData[columnName] = existingRowData[columnName];\n            continue;\n          }\n\n          selections[realRowIndex].push(startColIndex + colIndex);\n\n          newRowData[columnName] = cellData;\n        }\n\n        self.originalData[realRowIndex] = newRowData;\n      }\n      self.selections = selections;\n    }\n\n    // selections is a sparse array, so we condense:\n    var affectedCells = [];\n\n    self.selections.forEach(function (row, rowIndex) {\n      if (rowIndex === undefined) return;\n\n      row.forEach(function (columnIndex) {\n        affectedCells.push([rowIndex, columnIndex]);\n      });\n    });\n\n    self.dispatchEvent('afterpaste', {\n      cells: affectedCells,\n    });\n\n    // Because originalData has been updated, we must refresh\n    // viewData to ensure the new cell values are rendered\n    self.refresh();\n\n    return rows.length;\n  };\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === visibleColumnIndex) {\n        return s[x + 1].columnIndex;\n      }\n    }\n    return -1;\n  };\n  self.getVisibleColumnIndexOf = function (columnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === columnIndex) {\n        return x;\n      }\n    }\n    return -1;\n  };\n  self.paste = function (event) {\n    if (!self.attributes.editable) {\n      return;\n    }\n\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\n      NativeEvent: event,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    var clipboardItems = new Map(\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\n    );\n\n    // Supported MIME types, in order of preference:\n    var supportedMimeTypes = ['text/html', 'text/csv', 'text/plain'];\n\n    // The clipboard will often contain the same data in multiple formats,\n    // which can be used depending on the context in which it's pasted. Here\n    // we'll prefere more structured (HTML/CSV) over less structured, when\n    // available, so we try to find those first:\n    var pasteableItems = supportedMimeTypes\n      .map((mimeType) => clipboardItems.get(mimeType))\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\n\n    if (pasteableItems.length === 0) {\n      console.warn(\n        'Cannot find supported clipboard data type. Supported types are:',\n        supportedMimeTypes.join(', '),\n      );\n      return;\n    }\n\n    var itemToPaste = pasteableItems[0];\n\n    // itemToPaste is cleared once accessed (getData or getAsString),\n    // so we need to store the type here, before reading its value:\n    var pasteType = itemToPaste.type;\n\n    itemToPaste.getAsString(function (pasteValue) {\n      self.pasteData(\n        pasteValue,\n        pasteType,\n        self.activeCell.rowIndex,\n        self.getVisibleColumnIndexOf(self.activeCell.columnIndex),\n      );\n\n      self.draw();\n    });\n  };\n  self.cut = function (e) {\n    self.copy(e);\n    self.forEachSelectedCell(function (data, index, colName) {\n      data[index][colName] = '';\n    });\n  };\n  self.copy = function (e) {\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\n      return;\n    }\n    if (!self.hasFocus || !e.clipboardData) {\n      return;\n    }\n    var t,\n      d,\n      tableRows = [],\n      textRows = [],\n      outputHeaders = {},\n      outputHeaderKeys,\n      sData = self.getSelectedData(),\n      s = self.getSchema();\n    function htmlSafe(v) {\n      return v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    function fCopyCell(v) {\n      v = v === null || v === undefined ? '' : v;\n      return '<td>' + (typeof v === 'string' ? htmlSafe(v) : v) + '</td>';\n    }\n    function addHeaders(headers, useHtml) {\n      if (!s.length || headers.length < 2) {\n        return '';\n      }\n      var h = [];\n      if (useHtml) {\n        h.push('<tr>');\n      }\n      s.forEach(function (column, columnIndex) {\n        // intentional redefinition of column\n        column = s[self.orders.columns[columnIndex]];\n        if (!column.hidden && headers.indexOf(column.name) !== -1) {\n          var ev = { NativeEvent: e, column: column };\n          if (self.dispatchEvent('copyonschema', ev)) {\n            column = ev.column;\n          }\n\n          var hVal = column.name || column.title || '';\n          if (useHtml) {\n            h.push('<th>' + htmlSafe(hVal) + '</th>');\n          } else {\n            h.push('\"' + hVal.replace(/\"/g, '\"\"') + '\"');\n          }\n        }\n      });\n      h.push(useHtml ? '</tr>' : '\\n');\n      return h.join(useHtml ? '' : ',');\n    }\n    function addCellValue(val, trRow, textRow, column) {\n      // escape strings\n      if (val !== null && val !== false && val !== undefined && val.replace) {\n        trRow.push(fCopyCell(val));\n        textRow.push('\"' + val.replace(/\"/g, '\"\"') + '\"');\n        return;\n      }\n      if (val !== undefined) {\n        textRow.push(val);\n        trRow.push(fCopyCell(val));\n        return;\n      }\n      // issue #66\n      textRow.push('');\n      trRow.push('<td>&nbsp;</td>');\n    }\n    if (sData.length > 0) {\n      sData.forEach(function (row) {\n        var rowKeys = Object.keys(row);\n        if (row) {\n          var trRow = [],\n            textRow = [],\n            sSorted = [];\n          // HACK: https://github.com/TonyGermaneri/canvas-datagrid/issues/181\n          // I can't use sort here or O(1), so hacks\n          s.forEach(function (column, columnIndex) {\n            sSorted.push(s[self.orders.columns[columnIndex]]);\n          });\n          sSorted.forEach(function (column, columnIndex) {\n            if (rowKeys.indexOf(column.name) !== -1) {\n              outputHeaders[column.name] = true;\n              // escape strings\n              addCellValue(row[column.name], trRow, textRow, column);\n            }\n          });\n          tableRows.push(trRow.join(''));\n          textRows.push(textRow.join(','));\n        }\n      });\n      outputHeaderKeys = Object.keys(outputHeaders);\n      t = addHeaders(outputHeaderKeys) + textRows.join('\\n');\n      d =\n        '<table>' +\n        addHeaders(outputHeaderKeys, true) +\n        '<tr>' +\n        tableRows.join('</tr><tr>') +\n        '</tr></table>';\n      if (outputHeaderKeys.length === 1) {\n        // if there was only one cell selected, remove the quotes from the string\n        t = t.substring(1, t.length - 1);\n      }\n      e.clipboardData.setData('text/html', d);\n      e.clipboardData.setData('text/plain', t);\n      e.clipboardData.setData('text/csv', t);\n      e.clipboardData.setData('application/json', JSON.stringify(sData));\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var touchTimerMs = 50,\n    debounceTouchMove,\n    touchMoving,\n    touchScrollTimeout;\n  self.scrollAnimation = {};\n  self.touchDelta = {};\n  self.touchAnimateTo = {};\n  self.animationFrames = 0;\n  self.getTouchPos = function (e, touchIndex) {\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\n      rect = self.canvas.getBoundingClientRect(),\n      pos;\n    if (!t) {\n      return;\n    }\n    pos = {\n      x: t.clientX - rect.left,\n      y: t.clientY - rect.top,\n    };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\n  self.easingFunctions = {\n    linear: function (t) {\n      return t;\n    },\n    easeInQuad: function (t) {\n      return t * t;\n    },\n    easeOutQuad: function (t) {\n      return t * (2 - t);\n    },\n    easeInOutQuad: function (t) {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic: function (t) {\n      return t * t * t;\n    },\n    easeOutCubic: function (t) {\n      return --t * t * t + 1;\n    },\n    easeInOutCubic: function (t) {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart: function (t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function (t) {\n      return 1 - --t * t * t * t;\n    },\n    easeInOutQuart: function (t) {\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    easeInQuint: function (t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function (t) {\n      return 1 + --t * t * t * t * t;\n    },\n    easeInOutQuint: function (t) {\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n  };\n  self.easing = function (t, b, c, d) {\n    return (\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\n    );\n  };\n  self.calculatePPSTimed = function () {\n    self.xPPST = -(\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.yPPST = -(\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.touchSigmaTimed = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.calculatePPS = function () {\n    self.xPPS = -(\n      (self.touchDelta.x - self.touchSigma.x) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.yPPS = -(\n      (self.touchDelta.y - self.touchSigma.y) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.touchSigma = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.touchEndAnimation = function () {\n    if (!self.canvas || !self.scrollBox.scrollTo) {\n      return requestAnimationFrame(self.touchEndAnimation);\n    }\n    var n = performance.now(),\n      d = self.attributes.touchReleaseAnimationDurationMs,\n      t;\n    t = n - self.touchDelta.t;\n    self.animationFrames += 1;\n    self.scrollAnimation.x = self.easing(\n      t,\n      self.touchDelta.scrollLeft,\n      self.touchAnimateTo.x,\n      d,\n    );\n    self.scrollAnimation.y = self.easing(\n      t,\n      self.touchDelta.scrollTop,\n      self.touchAnimateTo.y,\n      d,\n    );\n    if (\n      t > d ||\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\n      self.stopAnimation\n    ) {\n      return;\n    }\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\n    requestAnimationFrame(self.touchEndAnimation);\n  };\n  self.touchEditCell = function (cell) {\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\n  };\n  self.touchCell = function (e) {\n    return function () {\n      clearInterval(self.calculatePPSTimer);\n      var i,\n        pos = self.getTouchPos(e);\n      if (\n        Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n        self.attributes.touchDeadZone\n      ) {\n        i = self.getCellAt(pos.x, pos.y);\n        if (!i) {\n          return;\n        }\n        if (\n          self.touchingCell &&\n          self.touchingCell.rowIndex === i.rowIndex &&\n          self.touchingCell.columnIndex === i.columnIndex\n        ) {\n          self.touchEditCell(i);\n          return;\n        }\n        if (self.input && self.input.editCell) {\n          self.endEdit();\n        }\n        self.touchingCell = i;\n        self.selectArea({\n          top: i.rowIndex,\n          bottom: i.rowIndex,\n          left: i.columnIndex,\n          right: i.columnIndex,\n        });\n        self.draw(true);\n      }\n    };\n  };\n  self.touchstart = function (e) {\n    if (e.changedTouches[0]) {\n      self.touchStart = self.getTouchPos(e);\n      self.startingCell = self.getCellAt(\n        self.touchStart.x,\n        self.touchStart.y,\n        true,\n      );\n    }\n    if (\n      self.dispatchEvent('touchstart', {\n        NativeEvent: e,\n        cell: self.startingCell,\n      })\n    ) {\n      return;\n    }\n    self.disposeContextMenu();\n    clearInterval(self.calculatePPSTimer);\n    clearTimeout(self.touchContextTimeout);\n    self.touchStartEvent = e;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    self.stopPropagation(e);\n    e.preventDefault();\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\n      self.touchLength = 1;\n      self.touchStart = self.touchStart || self.touchStart1;\n      self.touchScrollStart = {\n        x: self.scrollBox.scrollLeft,\n        y: self.scrollBox.scrollTop,\n        t: performance.now(),\n      };\n      self.touchDelta = {\n        x: 0,\n        y: 0,\n        scrollLeft: self.scrollBox.scrollLeft,\n        scrollTop: self.scrollBox.scrollTop,\n        t: self.touchScrollStart.t,\n      };\n      self.touchSigma = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchSigmaTimed = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchContextTimeout = setTimeout(function () {\n        self.contextmenuEvent(e, self.touchStart);\n      }, self.attributes.touchContextMenuTimeMs);\n      self.calculatePPSTimer = setInterval(\n        self.calculatePPSTimed,\n        touchTimerMs,\n      );\n      if (\n        self.startingCell &&\n        (self.startingCell.isGrid ||\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\n      ) {\n        self.hasFocus = false;\n        return;\n      }\n      self.hasFocus = true;\n      if (self.startingCell.isHeader) {\n        if (self.startingCell.isRowHeader) {\n          self.selectArea({\n            top: self.startingCell.rowIndex,\n            bottom: self.startingCell.rowIndex,\n            left: 0,\n            right: self.getVisibleSchema().length - 1,\n          });\n          self.draw(true);\n        } else if (self.startingCell.isColumnHeader) {\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\n            if (self.orderBy === self.startingCell.header.name) {\n              self.orderDirection =\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\n            } else {\n              self.orderDirection = 'asc';\n            }\n            self.order(self.startingCell.header.name, self.orderDirection);\n          }\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\n            self.selectArea({\n              top: 0,\n              bottom: self.viewData.length - 1,\n              left: self.startingCell.columnIndex,\n              right: self.startingCell.columnIndex,\n            });\n            self.draw(true);\n          }\n        }\n        self.touchEndEvents(e);\n        return;\n      }\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    document.body.addEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.addEventListener('touchend', self.touchend, false);\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\n    self.draw(true);\n  };\n  self.touchSelect = function (cell, handleType) {\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\n      return;\n    }\n    self.touchSelecting = true;\n    var bounds = self.getSelectionBounds();\n    if (\n      handleType === 'selection-handle-bl' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tl' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tr' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-br' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    }\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\n      bounds.left = 0;\n      bounds.right = self.getSchema().length - 1;\n    } else {\n      bounds.left = Math.max(0, bounds.left);\n    }\n    self.selectArea(bounds);\n    self.draw(true);\n  };\n  function touchMove(e) {\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\n      return;\n    }\n    clearTimeout(touchScrollTimeout);\n    if (e.changedTouches[0]) {\n      self.touchPosition = self.getTouchPos(e);\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = self.getTouchPos(e, 1);\n    }\n    if (\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\n      self.attributes.touchDeadZone\n    ) {\n      clearTimeout(self.touchContextTimeout);\n    }\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\n      t1 = self.touchPosition.y;\n      t2 = self.touchPosition1.y;\n      if (!self.zoomDeltaStart) {\n        self.zoomDeltaStart = Math.abs(t1 - t2);\n        self.startScale = self.scale;\n      }\n      self.touchLength = 2;\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\n      self.scale =\n        self.startScale -\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\n      self.scale = Math.min(\n        Math.max(self.scale, self.attributes.touchZoomMin),\n        self.attributes.touchZoomMax,\n      );\n      self.zoomAltered = true;\n      self.resize(true);\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    self.touchLength = 1;\n    self.touchPosition = self.touchPosition || self.touchPosition1;\n    ch = self.getColumnHeaderCellHeight();\n    rw = self.getRowHeaderCellWidth();\n    rScrollZone =\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\n      self.attributes.selectionScrollZone;\n    lScrollZone =\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\n    bScrollZone =\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\n      self.attributes.selectionScrollZone;\n    tScrollZone =\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\n    sbw = self.style.scrollBarWidth;\n    function touchScroll() {\n      var x = self.scrollBox.scrollLeft,\n        y = self.scrollBox.scrollTop;\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      self.scrollBox.scrollTo(x, y);\n      touchScrollTimeout = setTimeout(\n        touchScroll,\n        self.attributes.scrollRepeatRate,\n      );\n    }\n    e.stopPropagation();\n    self.touchDelta = {\n      x: self.touchPosition.x - self.touchStart.x,\n      y: self.touchPosition.y - self.touchStart.y,\n      scrollLeft: self.scrollBox.scrollLeft,\n      scrollTop: self.scrollBox.scrollTop,\n      t: performance.now(),\n    };\n    self.currentCell = self.getCellAt(\n      self.touchPosition.x,\n      self.touchPosition.y,\n    );\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\n    self.calculatePPS();\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    if (\n      self.touchSelecting &&\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\n    ) {\n      touchScroll();\n    }\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollTop =\n        self.scrollBox.scrollHeight *\n        ((self.touchPosition.y - ch - sbw) /\n          (self.scrollBox.height - sbw - ch));\n      return;\n    }\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollLeft =\n        self.scrollBox.scrollWidth *\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\n      return;\n    }\n    if (/selection-handle-/.test(self.startingCell.style)) {\n      self.touchSelect(self.currentCell, self.startingCell.style);\n      return;\n    }\n    self.scrollBox.scrollTo(\n      self.touchScrollStart.x - self.touchDelta.x,\n      self.touchScrollStart.y - self.touchDelta.y,\n    );\n  }\n  self.touchmove = function (e) {\n    if (touchMoving) {\n      return;\n    }\n    requestAnimationFrame(function () {\n      touchMoving = true;\n      touchMove(e);\n      touchMoving = false;\n    });\n  };\n  self.touchEndEvents = function (e) {\n    self.zoomDeltaStart = undefined;\n    self.touchSelecting = false;\n    clearInterval(self.touchScrollTimeout);\n    clearInterval(self.touchContextTimeout);\n    clearInterval(self.calculatePPSTimer);\n    e.stopPropagation();\n    document.body.removeEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.removeEventListener('touchend', self.touchend, false);\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\n  };\n  self.touchend = function (e) {\n    if (\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    self.zoomDeltaStart = undefined;\n    if (e.changedTouches[0]) {\n      self.touchPosition = undefined;\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = undefined;\n    }\n    if (self.zoomAltered) {\n      if (e.touches.length === 0) {\n        self.zoomAltered = false;\n      }\n      return;\n    }\n    var dz =\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n      self.attributes.touchDeadZone;\n    if (isNaN(self.xPPS)) {\n      self.xPPS = 0;\n    }\n    if (isNaN(self.yPPS)) {\n      self.yPPS = 0;\n    }\n    if (isNaN(self.xPPST)) {\n      self.xPPST = 0;\n    }\n    if (isNaN(self.yPPST)) {\n      self.yPPST = 0;\n    }\n    self.touchAnimateTo.x =\n      self.xPPS * self.attributes.touchReleaseAcceleration;\n    self.touchAnimateTo.y =\n      self.yPPS * self.attributes.touchReleaseAcceleration;\n    self.calculatePPSTimed();\n    if (dz && !self.contextMenu) {\n      self.touchCell(self.touchStartEvent)();\n    } else if (\n      self.animationFrames === 0 &&\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\n      !/-scroll-/.test(self.startingCell.style) &&\n      !dz\n    ) {\n      self.stopAnimation = false;\n      self.touchEndAnimation();\n    }\n    self.touchEndEvents(e);\n  };\n  self.touchcancel = function (e) {\n    if (\n      self.dispatchEvent('touchcancel', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    self.touchEndEvents(e);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\n'use strict';\n\nexport default function (self) {\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\n  function applyContextItemStyle(contextItemContainer) {\n    self.createInlineStyle(\n      contextItemContainer,\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\n    );\n    contextItemContainer.addEventListener('mouseover', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item:hover',\n      );\n    });\n    contextItemContainer.addEventListener('mouseout', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item',\n      );\n    });\n  }\n  function createContextMenu(ev, pos, items, parentContextMenu) {\n    var container = document.createElement('div'),\n      upArrow = document.createElement('div'),\n      downArrow = document.createElement('div'),\n      children = [],\n      selectedIndex = -1,\n      intf = {},\n      rect;\n    if (!Array.isArray(items)) {\n      throw new Error('createContextMenu expects an array.');\n    }\n    function createItems() {\n      items.forEach(function (item) {\n        var contextItemContainer = document.createElement('div'),\n          childMenuArrow;\n        function removeChildContext(e) {\n          if (\n            e.relatedTarget === container ||\n            item.contextMenu.container === e.relatedTarget ||\n            childMenuArrow === e.relatedTarget ||\n            contextItemContainer === e.relatedTarget ||\n            item.contextMenu.container.contains(e.relatedTarget)\n          ) {\n            return;\n          }\n          item.contextMenu.dispose();\n          children.splice(children.indexOf(item.contextMenu), 1);\n          item.contextMenu = undefined;\n          contextItemContainer.removeEventListener(\n            'mouseout',\n            removeChildContext,\n          );\n          container.removeEventListener('mouseout', removeChildContext);\n          contextItemContainer.setAttribute('contextOpen', '0');\n          contextItemContainer.setAttribute('opening', '0');\n        }\n        function contextAddCallback(items) {\n          // check yet again if the user hasn't moved off\n          if (\n            contextItemContainer.getAttribute('opening') !== '1' ||\n            contextItemContainer.getAttribute('contextOpen') === '1'\n          ) {\n            return;\n          }\n          var cPos = contextItemContainer.getBoundingClientRect();\n          cPos = {\n            left:\n              cPos.left +\n              self.style.childContextMenuMarginLeft +\n              container.offsetWidth,\n            top: cPos.top + self.style.childContextMenuMarginTop,\n            bottom: cPos.bottom,\n            right: cPos.right,\n          };\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\n          contextItemContainer.setAttribute('contextOpen', '1');\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\n          container.addEventListener('mouseout', removeChildContext);\n          children.push(item.contextMenu);\n        }\n        function createChildContext() {\n          var i;\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\n            return;\n          }\n          contextItemContainer.setAttribute('opening', '1');\n          if (typeof item.items === 'function') {\n            i = item.items.apply(intf, [\n              function (items) {\n                contextAddCallback(items);\n              },\n            ]);\n            if (i !== undefined && Array.isArray(i)) {\n              contextAddCallback(i);\n            }\n            return;\n          }\n          contextAddCallback(item.items);\n        }\n        function addItem(item) {\n          function addContent(content) {\n            if (content === null) {\n              return;\n            }\n            if (typeof content === 'function') {\n              return addContent(content(ev));\n            }\n            if (typeof content === 'object') {\n              contextItemContainer.appendChild(content);\n              return;\n            }\n            applyContextItemStyle(contextItemContainer);\n            contextItemContainer.innerHTML = content;\n            return;\n          }\n          addContent(item.title);\n          item.contextItemContainer = contextItemContainer;\n          if (\n            (item.items && item.items.length > 0) ||\n            typeof item.items === 'function'\n          ) {\n            childMenuArrow = document.createElement('div');\n            self.createInlineStyle(\n              childMenuArrow,\n              'canvas-datagrid-context-child-arrow',\n            );\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\n            contextItemContainer.appendChild(childMenuArrow);\n            contextItemContainer.addEventListener(\n              'mouseover',\n              createChildContext,\n            );\n            contextItemContainer.addEventListener('mouseout', function () {\n              contextItemContainer.setAttribute('opening', '0');\n            });\n          }\n          if (item.click) {\n            contextItemContainer.addEventListener('click', function (ev) {\n              item.click.apply(self, [ev]);\n            });\n          }\n        }\n        addItem(item);\n        container.appendChild(contextItemContainer);\n      });\n    }\n    function clickIndex(idx) {\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\n    }\n    function checkArrowVisibility() {\n      if (container.scrollTop > 0) {\n        self.parentDOMNode.appendChild(upArrow);\n      } else if (upArrow.parentNode) {\n        upArrow.parentNode.removeChild(upArrow);\n      }\n      if (\n        container.scrollTop >=\n          container.scrollHeight - container.offsetHeight &&\n        downArrow.parentNode\n      ) {\n        downArrow.parentNode.removeChild(downArrow);\n      } else if (\n        container.scrollHeight - container.offsetHeight > 0 &&\n        !(\n          container.scrollTop >=\n          container.scrollHeight - container.offsetHeight\n        )\n      ) {\n        self.parentDOMNode.appendChild(downArrow);\n      }\n    }\n    function startHoverScroll(type) {\n      return function t() {\n        var a = self.attributes.contextHoverScrollAmount;\n        if (type === 'up' && container.scrollTop === 0) {\n          return;\n        }\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\n          return;\n        }\n        container.scrollTop += type === 'up' ? -a : a;\n        hoverScrollTimeout = setTimeout(\n          t,\n          self.attributes.contextHoverScrollRateMs,\n          type,\n        );\n      };\n    }\n    function endHoverScroll(type) {\n      return function () {\n        clearTimeout(hoverScrollTimeout);\n      };\n    }\n    function init() {\n      var loc = {},\n        s = self.scrollOffset(self.canvas);\n      if (zIndexTop === undefined) {\n        zIndexTop = self.style.contextMenuZIndex;\n      }\n      createItems();\n      self.createInlineStyle(\n        container,\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\n      );\n      loc.x = pos.left - s.left;\n      loc.y = pos.top - s.top;\n      loc.height = 0;\n      zIndexTop += 1;\n      container.style.position = 'absolute';\n      upArrow.style.color = self.style.contextMenuArrowColor;\n      downArrow.style.color = self.style.contextMenuArrowColor;\n      [upArrow, downArrow].forEach(function (el) {\n        el.style.textAlign = 'center';\n        el.style.position = 'absolute';\n        el.style.zIndex = zIndexTop + 1;\n      });\n      container.style.zIndex = zIndexTop;\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\n        container.style.maxHeight =\n          window.innerHeight -\n          loc.y -\n          self.style.autocompleteBottomMargin +\n          'px';\n        container.style.minWidth = pos.width + 'px';\n        loc.y += pos.height;\n      }\n      if (self.mobile) {\n        container.style.width = pos.width + 'px';\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      container.addEventListener('scroll', checkArrowVisibility);\n      container.addEventListener('wheel', function (e) {\n        if (self.hasFocus) {\n          container.scrollTop += e.deltaY;\n          container.scrollLeft += e.deltaX;\n        }\n        checkArrowVisibility();\n      });\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\n      container.appendChild(upArrow);\n      document.body.appendChild(downArrow);\n      document.body.appendChild(container);\n      rect = container.getBoundingClientRect();\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\n      if (rect.bottom > window.innerHeight) {\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\n          loc.y -=\n            rect.bottom +\n            self.style.contextMenuWindowMargin -\n            window.innerHeight;\n        }\n        if (loc.y < 0) {\n          loc.y = self.style.contextMenuWindowMargin;\n        }\n        if (\n          container.offsetHeight >\n          window.innerHeight - self.style.contextMenuWindowMargin\n        ) {\n          container.style.height =\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\n        }\n      }\n      if (rect.right > window.innerWidth) {\n        loc.x -=\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\n      }\n      if (loc.x < 0) {\n        loc.x = self.style.contextMenuWindowMargin;\n      }\n      if (loc.y < 0) {\n        loc.y = self.style.contextMenuWindowMargin;\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      rect = container.getBoundingClientRect();\n      upArrow.style.top = rect.top + 'px';\n      downArrow.style.top =\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\n      upArrow.style.left = rect.left + 'px';\n      downArrow.style.left = rect.left + 'px';\n      downArrow.style.width = container.offsetWidth + 'px';\n      upArrow.style.width = container.offsetWidth + 'px';\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\n      checkArrowVisibility();\n    }\n    intf.parentGrid = self.intf;\n    intf.parentContextMenu = parentContextMenu;\n    intf.container = container;\n    init();\n    intf.clickIndex = clickIndex;\n    intf.rect = rect;\n    intf.items = items;\n    intf.upArrow = upArrow;\n    intf.downArrow = downArrow;\n    intf.dispose = function () {\n      clearTimeout(hoverScrollTimeout);\n      children.forEach(function (c) {\n        c.dispose();\n      });\n      [downArrow, upArrow, container].forEach(function (el) {\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n      });\n    };\n    Object.defineProperty(intf, 'selectedIndex', {\n      get: function () {\n        return selectedIndex;\n      },\n      set: function (value) {\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\n          throw new Error('Context menu selected index must be a sane number.');\n        }\n        selectedIndex = value;\n        if (selectedIndex > items.length - 1) {\n          selectedIndex = items.length - 1;\n        }\n        if (selectedIndex < 0) {\n          selectedIndex = 0;\n        }\n        items.forEach(function (item, index) {\n          if (index === selectedIndex) {\n            return self.createInlineStyle(\n              item.contextItemContainer,\n              'canvas-datagrid-context-menu-item:hover',\n            );\n          }\n          self.createInlineStyle(\n            item.contextItemContainer,\n            'canvas-datagrid-context-menu-item',\n          );\n        });\n      },\n    });\n    return intf;\n  }\n  function createFilterContextMenuItems(e) {\n    var filterContainer = document.createElement('div'),\n      filterLabel = document.createElement('div'),\n      filterAutoCompleteButton = document.createElement('button'),\n      filterInput = document.createElement('input'),\n      n =\n        e.cell && e.cell.header\n          ? e.cell.header.title || e.cell.header.name\n          : '',\n      iRect;\n    function checkRegExpErrorState() {\n      filterInput.style.background = self.style.contextFilterInputBackground;\n      filterInput.style.color = self.style.contextFilterInputColor;\n      if (self.invalidFilterRegEx) {\n        filterInput.style.background =\n          self.style.contextFilterInvalidRegExpBackground;\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\n      }\n    }\n    function fillAutoComplete() {\n      var count = 0;\n      var items = {};\n      var blanksItem = [];\n\n      self.viewData.forEach(function (row) {\n        var cellValue =\n          row[e.cell.header.name] == null\n            ? row[e.cell.header.name]\n            : String(row[e.cell.header.name]).trim();\n        var value = self.blankValues.includes(cellValue)\n          ? self.attributes.blanksText\n          : cellValue;\n\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\n          return;\n        }\n        count += 1;\n        items[value] = {\n          title: self.formatters[e.cell.header.type || 'string']({\n            cell: { value: value },\n          }),\n          click: function (e) {\n            filterInput.value = value;\n            e.stopPropagation();\n            filterInput.dispatchEvent(new Event('keyup'));\n            self.disposeAutocomplete();\n            return;\n          },\n        };\n      });\n\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\n        blanksItem.push(items[self.attributes.blanksText]);\n        delete items[self.attributes.blanksText];\n      }\n\n      return blanksItem.concat(\n        Object.keys(items).map(function (key) {\n          return items[key];\n        }),\n      );\n    }\n\n    function createAutoCompleteContext(ev) {\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\n        return;\n      }\n\n      var autoCompleteItems = fillAutoComplete();\n\n      iRect = filterInput.getBoundingClientRect();\n      if (autoCompleteContext) {\n        autoCompleteContext.dispose();\n        autoCompleteContext = undefined;\n      }\n      autoCompleteContext = createContextMenu(\n        e,\n        {\n          left: iRect.left,\n          top: iRect.top,\n          right: iRect.right,\n          bottom: iRect.bottom,\n          height: iRect.height,\n          width: iRect.width,\n        },\n        autoCompleteItems,\n        { inputDropdown: true },\n      );\n      autoCompleteContext.selectedIndex = 0;\n    }\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\n    self.createInlineStyle(\n      filterAutoCompleteButton,\n      'canvas-datagrid-context-menu-filter-button',\n    );\n    self.createInlineStyle(\n      filterInput,\n      'canvas-datagrid-context-menu-filter-input',\n    );\n    checkRegExpErrorState();\n    filterInput.onclick = self.disposeAutocomplete;\n    filterInput.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowDown') {\n        autoCompleteContext.selectedIndex += 1;\n      }\n\n      if (e.key === 'ArrowUp') {\n        autoCompleteContext.selectedIndex -= 1;\n      }\n\n      if (e.key === 'Enter') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        self.disposeContextMenu();\n      }\n\n      if (e.key === 'Tab') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        e.preventDefault();\n      }\n\n      if (e.key === 'Escape') {\n        self.disposeContextMenu();\n      }\n    });\n    filterInput.addEventListener('keyup', function () {\n      self.setFilter(e.cell.header.name, filterInput.value);\n    });\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\n      filterInput.addEventListener(en, checkRegExpErrorState);\n    });\n    filterInput.value = e.cell.header\n      ? self.columnFilters[e.cell.header.name] || ''\n      : '';\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\n    filterAutoCompleteButton.onclick = function () {\n      if (autoCompleteContext) {\n        return self.disposeAutocomplete();\n      }\n      createAutoCompleteContext();\n    };\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\n    filterContainer.addEventListener('click', function (e) {\n      return e.stopPropagation();\n    });\n    filterContainer.appendChild(filterLabel);\n    filterContainer.appendChild(filterInput);\n    filterContainer.appendChild(filterAutoCompleteButton);\n    e.items.push({\n      title: filterContainer,\n    });\n    if (Object.keys(self.columnFilters).length) {\n      Object.keys(self.columnFilters).forEach(function (cf) {\n        var h = self.getHeaderByName(cf);\n        e.items.push({\n          title: self.attributes.removeFilterOptionText.replace(\n            /%s/g,\n            h.title || h.name,\n          ),\n          click: function removeFilterClick(e) {\n            e.preventDefault();\n            self.setFilter(cf, '');\n            self.controlInput.focus();\n          },\n        });\n      });\n    }\n  }\n  function addDefaultContextMenuItem(e) {\n    var isNormalCell =\n      !(\n        e.cell.isBackground ||\n        e.cell.isColumnHeaderCellCap ||\n        e.cell.isScrollBar ||\n        e.cell.isCorner ||\n        e.cell.isRowHeader\n      ) && e.cell.header;\n    if (self.attributes.showFilter && isNormalCell) {\n      createFilterContextMenuItems(e);\n    }\n    if (\n      self.attributes.showCopy &&\n      self.selections.reduce(function (p, r) {\n        return p + r.length;\n      }, 0) > 0\n    ) {\n      e.items.push({\n        title: self.attributes.copyText,\n        click: function () {\n          document.execCommand('copy');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (self.attributes.showPaste && self.clipBoardData) {\n      e.items.push({\n        title: self.attributes.pasteText,\n        click: function () {\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\n          self.draw();\n        },\n      });\n    }\n    if (self.attributes.showColumnSelector) {\n      e.items.push({\n        title: self.attributes.columnSelectorText,\n        items: function () {\n          var d = [];\n          self.getSchema().forEach(function (column) {\n            function toggleColumnVisibility(e) {\n              column.hidden = !column.hidden;\n              self.dispatchEvent('togglecolumn', {\n                column: column,\n                hidden: column.hidden,\n              });\n              e.preventDefault();\n              self.stopPropagation(e);\n              self.disposeContextMenu();\n              self.resize(true);\n              self.setStorageData();\n            }\n            var el = document.createElement('div');\n            applyContextItemStyle(el);\n            el.addEventListener('touchstart', toggleColumnVisibility);\n            el.addEventListener('click', toggleColumnVisibility);\n            el.innerHTML =\n              (column.hidden\n                ? self.attributes.columnSelectorHiddenText\n                : self.attributes.columnSelectorVisibleText) +\n              (column.title || column.name);\n            d.push({\n              title: el,\n            });\n          });\n          return d;\n        },\n      });\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\n        e.items.push({\n          title: self.attributes.hideColumnText.replace(\n            /%s/gi,\n            e.cell.header.title || e.cell.header.name,\n          ),\n          click: function (ev) {\n            self.getSchema()[e.cell.columnIndex].hidden = true;\n            ev.preventDefault();\n            self.stopPropagation(ev);\n            self.disposeContextMenu();\n            self.setStorageData();\n            setTimeout(function () {\n              self.resize(true);\n            }, 10);\n          },\n        });\n      }\n    }\n    if (\n      self.attributes.saveAppearance &&\n      self.attributes.showClearSettingsOption &&\n      (Object.keys(self.sizes.rows).length > 0 ||\n        Object.keys(self.sizes.columns).length > 0)\n    ) {\n      e.items.push({\n        title: self.attributes.clearSettingsOptionText,\n        click: function (e) {\n          e.preventDefault();\n          self.sizes.rows = {};\n          self.sizes.columns = {};\n          self.createRowOrders();\n          self.createColumnOrders();\n          self.storedSettings = undefined;\n          self.dispatchEvent('resizecolumn', {\n            columnWidth: self.style.cellWidth,\n          });\n          self.dispatchEvent('resizerow', {\n            cellHeight: self.style.cellHeight,\n          });\n          self.setStorageData();\n          self.resize(true);\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (\n      self.attributes.allowSorting &&\n      self.attributes.showOrderByOption &&\n      isNormalCell\n    ) {\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextAsc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'asc');\n          self.controlInput.focus();\n        },\n      });\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextDesc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'desc');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n  }\n  self.disposeAutocomplete = function () {\n    if (autoCompleteContext) {\n      autoCompleteContext.dispose();\n      autoCompleteContext = undefined;\n    }\n  };\n  self.disposeContextMenu = function () {\n    document.removeEventListener('click', self.disposeContextMenu);\n    zIndexTop = self.style.contextMenuZIndex;\n    self.disposeAutocomplete();\n    if (self.contextMenu) {\n      self.contextMenu.dispose();\n    }\n    self.contextMenu = undefined;\n  };\n  self.contextmenuEvent = function (e, overridePos) {\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    function createDiposeEvent() {\n      requestAnimationFrame(function () {\n        document.addEventListener('click', self.disposeContextMenu);\n        document.removeEventListener('mouseup', createDiposeEvent);\n      });\n    }\n    var contextPosition,\n      items = [],\n      pos = overridePos || self.getLayerPos(e),\n      ev = {\n        NativeEvent: e,\n        cell: self.getCellAt(pos.x, pos.y),\n        items: items,\n      };\n    if (!ev.cell.isGrid) {\n      addDefaultContextMenuItem(ev);\n    }\n    if (self.dispatchEvent('contextmenu', ev)) {\n      return;\n    }\n    if (!ev.cell.isGrid) {\n      if (self.contextMenu) {\n        self.disposeContextMenu();\n      }\n      contextPosition = {\n        left:\n          pos.x +\n          pos.rect.left +\n          self.style.contextMenuMarginLeft +\n          self.canvasOffsetLeft,\n        top:\n          pos.y +\n          pos.rect.top +\n          self.style.contextMenuMarginTop +\n          self.canvasOffsetTop,\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\n        height: ev.cell.height,\n        width: ev.cell.width,\n      };\n      if (self.mobile) {\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\n        contextPosition.width =\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\n      }\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\n      document.addEventListener('mouseup', createDiposeEvent);\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  self.getClippingRect = function (ele) {\n    var boundingRect = self.position(self.parentNode),\n      eleRect = self.position(ele),\n      s = self.scrollOffset(self.canvas),\n      clipRect = {\n        x: 0,\n        y: 0,\n        h: 0,\n        w: 0,\n      },\n      parentRect = {\n        x: -Infinity,\n        y: -Infinity,\n        h: Infinity,\n        w: Infinity,\n      },\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\n    boundingRect.top -= s.top;\n    boundingRect.left -= s.left;\n    eleRect.top -= s.top;\n    eleRect.left -= s.left;\n    clipRect.h =\n      boundingRect.top +\n      boundingRect.height -\n      ele.offsetTop -\n      self.style.scrollBarWidth;\n    clipRect.w =\n      boundingRect.left +\n      boundingRect.width -\n      ele.offsetLeft -\n      self.style.scrollBarWidth;\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\n    return {\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\n    };\n  };\n  self.clipElement = function (ele) {\n    var clipRect = self.getClippingRect(ele);\n    if (clipRect.w < 0) {\n      clipRect.w = 0;\n    }\n    if (clipRect.h < 0) {\n      clipRect.h = 0;\n    }\n    ele.style.clip =\n      'rect(' +\n      clipRect.y +\n      'px,' +\n      clipRect.w +\n      'px,' +\n      clipRect.h +\n      'px,' +\n      clipRect.x +\n      'px' +\n      ')';\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\n    // more widely support.  The code below works correctly, but setting clipPath and clip\n    // at the same time has undesirable results.\n    // ele.style.clipPath = 'polygon('\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\n    //     + ')';\n  };\n  self.scrollOffset = function (e) {\n    var x = 0,\n      y = 0,\n      scrollingElement = document.scrollingElement || {\n        scrollLeft: 0,\n        scrollTop: 0,\n      };\n    while (\n      e.parentNode &&\n      e.nodeName !== 'CANVAS-DATAGRID' &&\n      e !== self.intf\n    ) {\n      if (\n        e.nodeType !== 'canvas-datagrid-tree' &&\n        e.nodeType !== 'canvas-datagrid-cell'\n      ) {\n        x -= e.scrollLeft;\n        y -= e.scrollTop;\n      }\n      e = e.parentNode;\n    }\n    return {\n      left: x - scrollingElement.scrollLeft,\n      top: y - scrollingElement.scrollTop,\n    };\n  };\n  self.resizeEditInput = function () {\n    if (self.input && self.input.editCell) {\n      var pos = self.canvas.getBoundingClientRect(),\n        s = self.scrollOffset(self.intf),\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n        borderWidth = self.style.cellBorderWidth * bm,\n        cell = self.getVisibleCellByIndex(\n          self.input.editCell.columnIndex,\n          self.input.editCell.rowIndex,\n        ) || { x: -100, y: -100, height: 0, width: 0 };\n      if (self.mobile) {\n        self.input.style.left = '0';\n        self.input.style.top =\n          self.height -\n          self.style.mobileEditInputHeight -\n          borderWidth -\n          1 +\n          'px';\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\n        return;\n      }\n      self.input.style.left =\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\n      self.input.style.top =\n        pos.top +\n        cell.y -\n        self.style.cellBorderWidth +\n        self.canvasOffsetTop -\n        s.top +\n        'px';\n      self.input.style.height = cell.height - borderWidth + 'px';\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\n      self.clipElement(self.input);\n    }\n  };\n  self.position = function (e, ignoreScrollOffset) {\n    var x = 0,\n      y = 0,\n      s = e,\n      h,\n      w;\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\n      x += e.offsetLeft;\n      y += e.offsetTop;\n      h = e.offsetHeight;\n      w = e.offsetWidth;\n      e = e.offsetParent;\n    }\n    if (ignoreScrollOffset) {\n      return { left: x, top: y, height: h, width: w };\n    }\n    e = s;\n    s = self.scrollOffset(e);\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\n  };\n  self.getLayerPos = function (e) {\n    var rect = self.canvas.getBoundingClientRect(),\n      pos = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  /**\n   * Ends editing, optionally aborting the edit.\n   * @memberof canvasDatagrid\n   * @name endEdit\n   * @method\n   * @param {boolean} abort When true, abort the edit.\n   */\n  self.endEdit = function (abort) {\n    var cell = self.input.editCell,\n      y = cell.rowIndex;\n    function abortEdit() {\n      abort = true;\n    }\n    if (\n      self.dispatchEvent('beforeendedit', {\n        cell: cell,\n        newValue: self.input.value,\n        oldValue: cell.value,\n        abort: abortEdit,\n        input: self.input,\n      })\n    ) {\n      return false;\n    }\n    if (self.input.value !== cell.value && !abort) {\n      self.changes[y] = self.changes[y] || {};\n      self.changes[y][cell.header.name] = self.input.value;\n      if (!cell.data) {\n        self.originalData[cell.boundRowIndex] = {};\n        cell.data = self.originalData[cell.boundRowIndex];\n      }\n      cell.data[cell.header.name] = self.input.value;\n      if (y === self.viewData.length) {\n        if (\n          self.dispatchEvent('newrow', {\n            value: self.input.value,\n            defaultValue: cell.value,\n            aborted: abort,\n            cell: cell,\n            input: self.input,\n          })\n        ) {\n          return false;\n        }\n        self.addRow(cell.data);\n        self.createNewRowData();\n      }\n      self.draw(true);\n    }\n    if (self.input.parentNode) {\n      self.input.parentNode.removeChild(self.input);\n    }\n    self.intf.focus();\n    self.dispatchEvent('endedit', {\n      cell: cell,\n      value: self.input.value,\n      aborted: abort,\n      input: self.input,\n    });\n    self.input = undefined;\n    return true;\n  };\n  /**\n   * Begins editing at cell x, row y.\n   * @memberof canvasDatagrid\n   * @name beginEditAt\n   * @method\n   * @param {number} x The column index of the cell to edit.\n   * @param {number} y The row index of the cell to edit.\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\n   * cell's previous value instead of appending, and using the arrow keys will allow\n   * the user to navigate to adjacent cells instead of moving the text cursor around\n   * (default is false, and means user is in 'edit' mode).\n   */\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\n    if (!self.attributes.editable) {\n      return;\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    var cell = self.getVisibleCellByIndex(x, y),\n      s = self.getSchema(),\n      adjacentCells,\n      enumItems,\n      enu,\n      option,\n      valueInEnum;\n    if (!(cell && cell.header)) {\n      return;\n    }\n    //HACK for IE10, does not like literal enum\n    enu = cell.header['enum'];\n    if (\n      self.dispatchEvent('beforebeginedit', {\n        cell: cell,\n        NativeEvent: NativeEvent,\n      })\n    ) {\n      return false;\n    }\n    self.scrollIntoView(x, y);\n    self.setActiveCell(x, y);\n    adjacentCells = self.getAdjacentCells();\n    if (enu) {\n      self.input = document.createElement('select');\n    } else {\n      self.input = document.createElement(\n        self.attributes.multiLine ? 'textarea' : 'input',\n      );\n    }\n    cell = self.getVisibleCellByIndex(x, y);\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\n    if (!cell) {\n      return;\n    }\n    if (enu) {\n      // add enums\n      if (typeof enu === 'function') {\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\n      } else if (Array.isArray(enu)) {\n        enumItems = enu;\n      }\n      enumItems.forEach(function (e) {\n        var i = document.createElement('option'),\n          val,\n          title;\n        if (Array.isArray(e)) {\n          val = e[0];\n          title = e[1];\n        } else {\n          val = e;\n          title = e;\n        }\n        if (val === cell.value) {\n          valueInEnum = true;\n        }\n        i.value = val;\n        i.innerHTML = title;\n        self.input.appendChild(i);\n      });\n      if (!valueInEnum) {\n        option = document.createElement('option');\n        option.value = cell.value;\n        option.innerHTML = cell.value;\n        self.input.appendChild(option);\n      }\n      self.input.addEventListener('change', function () {\n        self.endEdit();\n        self.draw(true);\n      });\n    }\n    // if the user has not prevented the default action, append to the body\n    if (\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\n    ) {\n      document.body.appendChild(self.input);\n    }\n    self.createInlineStyle(\n      self.input,\n      self.mobile\n        ? 'canvas-datagrid-edit-mobile-input'\n        : 'canvas-datagrid-edit-input',\n    );\n    self.input.style.position = 'absolute';\n    self.input.editCell = cell;\n    self.resizeEditInput();\n    self.input.style.zIndex = self.style.editCellZIndex;\n    self.input.style.fontSize =\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\n\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\n\n    self.input.value = shouldClearCellValue ? '' : cell.value;\n    self.input.focus();\n    self.input.addEventListener('click', self.stopPropagation);\n    self.input.addEventListener('dblclick', self.stopPropagation);\n    self.input.addEventListener('mouseup', self.stopPropagation);\n    self.input.addEventListener('mousedown', self.stopPropagation);\n    self.input.addEventListener('keydown', function (e) {\n      var nx = cell.columnIndex,\n        ny = cell.rowIndex;\n\n      if (e.key === 'Escape') {\n        self.endEdit(true); // end edit and abort the value change\n        self.draw(true);\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\n        self.input.value = self.input.value + '\\n';\n        self.input.scrollTop = self.input.scrollHeight;\n      } else if (e.key === 'Enter') {\n        self.endEdit();\n\n        // Move to cell in next or previous row\n        var nextRowIndex = e.shiftKey\n          ? Math.max(0, ny - 1)\n          : Math.min(ny + 1, self.viewData.length - 1);\n\n        if (nextRowIndex !== ny) {\n          self.scrollIntoView(nx, nextRowIndex);\n          self.setActiveCell(nx, nextRowIndex);\n        }\n\n        self.draw(true);\n      } else if (\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\n        inEnterMode\n      ) {\n        switch (e.key) {\n          case 'ArrowUp':\n            ny = Math.max(0, ny - 1);\n            break;\n          case 'ArrowDown':\n            ny = Math.min(ny + 1, self.viewData.length - 1);\n            break;\n          case 'ArrowLeft':\n            nx = Math.max(nx - 1, 0);\n            break;\n          case 'ArrowRight':\n            nx = adjacentCells.right;\n            break;\n        }\n\n        self.endEdit();\n\n        self.scrollIntoView(nx, ny);\n        self.setActiveCell(nx, ny);\n\n        self.draw(true);\n      } else if (e.key === 'Tab') {\n        e.preventDefault();\n        if (!self.endEdit()) {\n          return;\n        }\n        if (e.shiftKey) {\n          nx = adjacentCells.left;\n        } else {\n          nx = adjacentCells.right;\n        }\n        if (adjacentCells.left === x && e.shiftKey) {\n          nx = adjacentCells.last;\n          ny -= 1;\n        }\n        if (adjacentCells.right === x && !e.shiftKey) {\n          nx = adjacentCells.first;\n          ny += 1;\n        }\n        if (ny < 0) {\n          ny = self.viewData.length - 1;\n        }\n        if (ny > self.viewData.length - 1) {\n          ny = 0;\n        }\n        self.scrollIntoView(nx, ny);\n        self.beginEditAt(nx, ny, e);\n      }\n    });\n\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\n  };\n  self.createInlineStyle = function (el, className) {\n    var css = {\n      'canvas-datagrid-context-menu-filter-input': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextFilterInputBackground,\n        color: self.style.contextFilterInputColor,\n        border: self.style.contextFilterInputBorder,\n        borderRadius: self.style.contextFilterInputBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextFilterInputFontFamily,\n        fontSize: self.style.contextFilterInputFontSize,\n      },\n      'canvas-datagrid-context-menu-filter-button': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextFilterButtonBorder,\n        borderRadius: self.style.contextFilterButtonBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\n        fontSize: self.style.contextMenuFilterButtonFontSize,\n      },\n      'canvas-datagrid-context-child-arrow': {\n        cssFloat: 'right',\n        color: self.style.childContextMenuArrowColor,\n        fontSize: self.style.contextMenuChildArrowFontSize,\n        fontFamily: self.style.contextMenuFontFamily,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-autocomplete': {\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        position: 'absolute',\n        zIndex: 9999,\n        overflow: 'hidden',\n      },\n      'canvas-datagrid-autocomplete-item': {\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n      },\n      'canvas-datagrid-autocomplete-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-canvas': {\n        position: 'absolute',\n        zIndex: '-1',\n      },\n      'canvas-datagrid': {\n        display: 'block',\n      },\n      'canvas-datagrid-control-input': {\n        position: 'fixed',\n        top: '-5px',\n        left: '-5px',\n        border: 'none',\n        opacity: '0',\n        cursor: 'pointer',\n        width: '1px',\n        height: '1px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n      },\n      'canvas-datagrid-edit-mobile-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 0',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.mobileEditFontFamily,\n        fontSize: self.style.mobileEditFontSize,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-edit-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.editCellFontFamily,\n        fontSize: self.style.editCellFontSize,\n        boxShadow: self.style.editCellBoxShadow,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-context-menu-item-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-context-menu-label': {\n        margin: self.style.contextMenuLabelMargin,\n        display: self.style.contextMenuLabelDisplay,\n        minWidth: self.style.contextMenuLabelMinWidth,\n        maxWidth: self.style.contextMenuLabelMaxWidth,\n      },\n      'canvas-datagrid-context-menu-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      'canvas-datagrid-context-menu': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        cursor: self.style.contextMenuCursor,\n      },\n      'canvas-datagrid-invalid-search-regExp': {\n        background: self.style.contextMenuFilterInvalidExpresion,\n      },\n    };\n    if (css[className]) {\n      Object.keys(css[className]).map(function (prop) {\n        el.style[prop] = css[className][prop];\n      });\n    }\n    return;\n  };\n  self.appendTo = function (e) {\n    self.parentNode = e;\n    self.setDom();\n  };\n  self.setDom = function () {\n    if (self.isChildGrid) {\n      self.parentGrid = self.parentNode.parentGrid;\n      self.ctx = self.parentGrid.context;\n      self.canvas = self.parentGrid.canvas;\n      self.controlInput = self.parentGrid.controlInput;\n      self.eventParent = self.canvas;\n    } else {\n      self.controlInput = self.controlInput || document.createElement('input');\n      self.controlInput.onblur = self.intf.blur;\n      self.createInlineStyle(\n        self.controlInput,\n        'canvas-datagrid-control-input',\n      );\n      self.isChildGrid = false;\n      self.parentDOMNode = self.parentNode;\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\n      if (self.parentIsCanvas) {\n        self.canvas = self.parentDOMNode;\n      } else {\n        self.canvas = document.createElement('canvas');\n        self.parentDOMNode.appendChild(self.canvas);\n      }\n      document.body.appendChild(self.controlInput);\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\n      self.ctx = self.canvas.getContext('2d');\n      self.ctx.textBaseline = 'alphabetic';\n      self.eventParent = self.canvas;\n    }\n    self.parentNodeStyle = self.canvas.style;\n    self.controlInput.setAttribute('readonly', true);\n    self.controlInput.addEventListener('blur', function (e) {\n      if (e.target !== self.canvas) {\n        self.hasFocus = false;\n      }\n    });\n    self.eventParent.addEventListener('scroll', self.resize, false);\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\n    self.eventParent.addEventListener('click', self.click, false);\n    self.eventParent.addEventListener('mousemove', self.mousemove);\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\n      'wheel',\n      self.scrollWheel,\n      false,\n    );\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\n    self.controlInput.addEventListener('copy', self.copy);\n    self.controlInput.addEventListener('cut', self.cut);\n    self.controlInput.addEventListener('paste', self.paste);\n    self.controlInput.addEventListener('keypress', self.keypress, false);\n    self.controlInput.addEventListener('keyup', self.keyup, false);\n    self.controlInput.addEventListener('keydown', self.keydown, false);\n    window.addEventListener('resize', self.resize);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  /**\n   * Converts a integer into a letter A - ZZZZZ...\n   * @memberof canvasDatagrid\n   * @name integerToAlpha\n   * @method\n   * @param {column} n The number to convert.\n   */\n  self.integerToAlpha = function (n) {\n    var ordA = 'a'.charCodeAt(0),\n      ordZ = 'z'.charCodeAt(0),\n      len = ordZ - ordA + 1,\n      s = '';\n    while (n >= 0) {\n      s = String.fromCharCode((n % len) + ordA) + s;\n      n = Math.floor(n / len) - 1;\n    }\n    return s;\n  };\n  /**\n   * Inserts a new column before the specified index into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name insertColumn\n   * @method\n   * @param {column} c The column to insert into the schema.\n   * @param {number} index The index of the column to insert before.\n   */\n  self.insertColumn = function (c, index) {\n    var s = self.getSchema();\n    if (s.length < index) {\n      throw new Error('Index is beyond the length of the schema.');\n    }\n    self.validateColumn(c, s);\n    s.splice(index, 0, c);\n\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a column from the schema at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteColumn\n   * @tutorial schema\n   * @method\n   * @param {number} index The index of the column to delete.\n   */\n  self.deleteColumn = function (index) {\n    var schema = self.getSchema();\n\n    // remove data matching this column name from data\n    self.originalData.forEach(function (row) {\n      delete row[schema[index].name];\n    });\n\n    schema.splice(index, 1);\n    self.intf.schema = schema;\n\n    self.refresh();\n  };\n  /**\n   * Adds a new column into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name addColumn\n   * @method\n   * @param {column} c The column to add to the schema.\n   */\n  self.addColumn = function (c) {\n    var s = self.getSchema();\n    self.validateColumn(c, s);\n    s.push(c);\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a row from the dataset at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteRow\n   * @method\n   * @param {number} index The index of the row to delete.\n   */\n  self.deleteRow = function (index) {\n    self.originalData.splice(index, 1);\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Inserts a new row into the dataset before the specified index.\n   * @memberof canvasDatagrid\n   * @name insertRow\n   * @method\n   * @param {object} d data.\n   * @param {number} index The index of the row to insert before.\n   */\n  self.insertRow = function (d, index) {\n    if (self.originalData.length < index) {\n      throw new Error('Index is beyond the length of the dataset.');\n    }\n    self.originalData.splice(index, 0, d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(self.originalData[index], c);\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Adds a new row into the dataset.\n   * @memberof canvasDatagrid\n   * @name addRow\n   * @method\n   * @param {object} d data.\n   */\n  self.addRow = function (d) {\n    self.originalData.push(d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(\n          self.originalData[self.originalData.length - 1],\n          c,\n        );\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Sets the height of a given row by index number.\n   * @memberof canvasDatagrid\n   * @name setRowHeight\n   * @method\n   * @param {number} rowIndex The index of the row to set.\n   * @param {number} height Height to set the row to.\n   */\n  self.setRowHeight = function (rowIndex, height) {\n    self.sizes.rows[rowIndex] = height;\n    self.draw(true);\n  };\n  /**\n   * Sets the width of a given column by index number.\n   * @memberof canvasDatagrid\n   * @name setColumnWidth\n   * @method\n   * @param {number} colIndex The index of the column to set.\n   * @param {number} width Width to set the column to.\n   */\n  self.setColumnWidth = function (colIndex, width) {\n    self.sizes.columns[colIndex] = width;\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetColumnWidths\n   * @tutorial schema\n   * @method\n   */\n  self.resetColumnWidths = function () {\n    self.sizes.columns = {};\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetRowHeights\n   * @tutorial schema\n   * @method\n   */\n  self.resetRowHeights = function () {\n    self.sizes.rows = {};\n    self.draw(true);\n  };\n  /**\n   * Sets the value of the filter.\n   * @memberof canvasDatagrid\n   * @name setFilter\n   * @method\n   * @param {string} column Name of the column to filter.\n   * @param {string} value The value to filter for.\n   */\n  self.setFilter = function (column, value) {\n    if (column === undefined && value === undefined) {\n      self.columnFilters = {};\n    } else if (column && (value === '' || value === undefined)) {\n      delete self.columnFilters[column];\n    } else {\n      self.columnFilters[column] = value;\n    }\n    self.refresh();\n  };\n  /**\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\n   * @memberof canvasDatagrid\n   * @name findRowScrollTop\n   * @method\n   * @param {number} rowIndex The row index of the row to scroll find.\n   */\n  self.findRowScrollTop = function (rowIndex) {\n    if (self.scrollCache.y[rowIndex] === undefined) {\n      throw new RangeError(\n        `Row index ${rowIndex} out of range: ${self.scrollCache.y.length}.`,\n      );\n    }\n    return self.scrollCache.y[rowIndex];\n  };\n  /**\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\n   * @memberof canvasDatagrid\n   * @name findColumnScrollLeft\n   * @method\n   * @param {number} columnIndex The column index of the column to find.\n   */\n  self.findColumnScrollLeft = function (columnIndex) {\n    var i = Math.max(columnIndex - 1, 0);\n    if (self.scrollCache.x[i] === undefined) {\n      throw new Error('Column index out of range.');\n    }\n    return (\n      self.scrollCache.x[i] -\n      self.getColummnWidth(self.orders.columns[columnIndex])\n    );\n  };\n  /**\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\n   * @memberof canvasDatagrid\n   * @name gotoCell\n   * @method\n   * @param {number} x The column index of the cell to scroll to.\n   * @param {number} y The row index of the cell to scroll to.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.gotoCell = function (x, y, offsetX, offsetY) {\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\n      cell,\n      sbw =\n        self.scrollBox.width -\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\n      sbh =\n        self.scrollBox.height -\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\n    offsetX = offsetX === undefined ? 0 : offsetX;\n    offsetY = offsetY === undefined ? 0 : offsetY;\n    targetX -= sbw * offsetX;\n    targetY -= sbh * offsetY;\n    if (x !== undefined && y !== undefined) {\n      self.scrollBox.scrollTo(targetX, targetY);\n      requestAnimationFrame(function () {\n        cell = self.getVisibleCellByIndex(x, y);\n        // HACK: just don't offset if the target cell cannot be seen\n        // TODO: offset does not work on very small grids, not sure why\n        if (!cell) {\n          return;\n        }\n        targetX += cell.width * offsetX;\n        targetY += cell.height * offsetY;\n        self.scrollBox.scrollTo(targetX, targetY);\n      });\n    } else if (x !== undefined) {\n      self.scrollBox.scrollLeft = targetX;\n    } else if (y !== undefined) {\n      self.scrollBox.scrollTop = targetY;\n    }\n  };\n  /**\n   * Scrolls the row y.\n   * @memberof canvasDatagrid\n   * @name gotoRow\n   * @method\n   * @param {number} y The row index of the cell to scroll to.\n   */\n  self.gotoRow = function (y) {\n    self.gotoCell(0, y);\n  };\n  /**\n   * Scrolls the cell at cell x, row y into view if it is not already.\n   * @memberof canvasDatagrid\n   * @name scrollIntoView\n   * @method\n   * @param {number} x The column index of the cell to scroll into view.\n   * @param {number} y The row index of the cell to scroll into view.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\n    if (\n      self.visibleCells.filter(function (cell) {\n        return (\n          (cell.rowIndex === y || y === undefined) &&\n          (cell.columnIndex === x || x === undefined) &&\n          cell.x > 0 &&\n          cell.y > 0 &&\n          cell.x + cell.width < self.width &&\n          cell.y + cell.height < self.height\n        );\n      }).length === 0\n    ) {\n      self.gotoCell(x, y, offsetX, offsetY);\n    }\n  };\n  /**\n   * Sets the active cell. Requires redrawing.\n   * @memberof canvasDatagrid\n   * @name setActiveCell\n   * @method\n   * @param {number} x The column index of the cell to set active.\n   * @param {number} y The row index of the cell to set active.\n   */\n  self.setActiveCell = function (x, y) {\n    if (x < 0) {\n      x = 0;\n    }\n    if (y < 0) {\n      y = 0;\n    }\n    self.activeCell = {\n      rowIndex: y,\n      columnIndex: x,\n    };\n  };\n  /**\n   * Removes the selection.\n   * @memberof canvasDatagrid\n   * @name selectNone\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectNone = function (dontDraw) {\n    self.selections = [];\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Selects every visible cell.\n   * @memberof canvasDatagrid\n   * @name selectAll\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectAll = function (dontDraw) {\n    self.selectArea({\n      top: 0,\n      left: -1,\n      right: self.getSchema().length - 1,\n      bottom: self.viewData.length - 1,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Returns true if the selected columnIndex is selected on every row.\n   * @memberof canvasDatagrid\n   * @name isColumnSelected\n   * @method\n   * @param {number} columnIndex The column index to check.\n   */\n  self.isColumnSelected = function (columnIndex) {\n    var colIsSelected = true;\n    self.viewData.forEach(function (row, rowIndex) {\n      if (\n        !self.selections[rowIndex] ||\n        self.selections[rowIndex].indexOf(self.orders.columns[columnIndex]) ===\n          -1\n      ) {\n        colIsSelected = false;\n      }\n    });\n    return colIsSelected;\n  };\n  /**\n   * Runs the defined method on each selected cell.\n   * @memberof canvasDatagrid\n   * @name forEachSelectedCell\n   * @method\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\n   */\n  self.forEachSelectedCell = function (fn, expandToRow) {\n    var d = [],\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\n      l = self.viewData.length;\n    self.selections.forEach(function (row, index) {\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        d[index] = null;\n        return;\n      }\n      d[index] = {};\n      row.forEach(function (col) {\n        if (col === -1 || !s[col]) {\n          return;\n        }\n        fn(self.viewData, index, s[col].name);\n      });\n    });\n  };\n  /**\n   * Selects a column.\n   * @memberof canvasDatagrid\n   * @name selectColumn\n   * @method\n   * @param {number} columnIndex The column index to select.\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\n    var s, e, x;\n    function addCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) === -1) {\n          self.selections[rowIndex].push(i);\n        }\n      });\n    }\n    function removeCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\n          self.selections[rowIndex].splice(\n            self.selections[rowIndex].indexOf(i),\n            1,\n          );\n        }\n      });\n    }\n    if (shift) {\n      if (!self.activeCell) {\n        return;\n      }\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\n      for (x = s; e > x; x += 1) {\n        addCol(x);\n      }\n    }\n    if (!ctrl && !shift) {\n      self.selections = [];\n      self.activeCell.columnIndex = columnIndex;\n      self.activeCell.rowIndex = self.scrollIndexTop;\n    }\n    if (ctrl && self.isColumnSelected(columnIndex)) {\n      removeCol(columnIndex);\n    } else {\n      addCol(columnIndex);\n    }\n    if (supressEvent) {\n      return;\n    }\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.getSelectionBounds(),\n    });\n  };\n  /**\n   * Selects a row.\n   * @memberof canvasDatagrid\n   * @name selectRow\n   * @method\n   * @param {number} rowIndex The row index to select.\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\n    var x,\n      st,\n      en,\n      s = self.getVisibleSchema();\n    function de() {\n      if (supressEvent) {\n        return;\n      }\n      self.dispatchEvent('selectionchanged', {\n        selectedData: self.getSelectedData(),\n        selections: self.selections,\n        selectionBounds: self.selectionBounds,\n      });\n    }\n    function addRow(ri) {\n      self.selections[ri] = [];\n      self.selections[ri].push(-1);\n      s.forEach(function (col, index) {\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\n      });\n    }\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\n      if (\n        self.selections[rowIndex] &&\n        self.selections[rowIndex].length - 1 === s.length\n      ) {\n        if (ctrl) {\n          self.selections[rowIndex] = [];\n          de();\n          return;\n        }\n      }\n    }\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\n      if (shift && self.dragObject === undefined) {\n        if (!self.activeCell) {\n          return;\n        }\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\n        for (x = st; en >= x; x += 1) {\n          addRow(x);\n        }\n      } else {\n        addRow(rowIndex);\n      }\n    }\n    de();\n  };\n  /**\n   * Collapse a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name collapseTree\n   * @method\n   * @param {number} index The index of the row to collapse.\n   */\n  self.collapseTree = function (rowIndex) {\n    self.dispatchEvent('collapsetree', {\n      childGrid: self.childGrids[rowIndex],\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex].blur();\n    self.openChildren[rowIndex].dispose();\n    delete self.openChildren[rowIndex];\n    delete self.sizes.trees[rowIndex];\n    delete self.childGrids[rowIndex];\n    self.dispatchEvent('resizerow', {\n      cellHeight: self.style.cellHeight,\n    });\n    self.resize(true);\n    self.draw(true);\n  };\n  /**\n   * Expands a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name expandTree\n   * @method\n   * @param {number} index The index of the row to expand.\n   */\n  self.expandTree = function (rowIndex) {\n    var trArgs = self.args.treeGridAttributes || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth =\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\n      treeGrid;\n    if (!self.childGrids[rowIndex]) {\n      trArgs.debug = self.attributes.debug;\n      trArgs.name = self.attributes.saveAppearance\n        ? self.attributes.name + 'tree' + rowIndex\n        : undefined;\n      trArgs.style = trArgs.style || self.style;\n      trArgs.parentNode = {\n        parentGrid: self.intf,\n        nodeType: 'canvas-datagrid-tree',\n        offsetHeight: h,\n        offsetWidth: self.width - rowHeaderCellWidth,\n        header: { width: self.width - rowHeaderCellWidth },\n        offsetLeft: rowHeaderCellWidth,\n        offsetTop: columnHeaderCellHeight,\n        offsetParent: self.intf.parentNode,\n        parentNode: self.intf.parentNode,\n        style: 'tree',\n        data: self.viewData[rowIndex],\n      };\n      treeGrid = self.createGrid(trArgs);\n      self.childGrids[rowIndex] = treeGrid;\n    }\n    treeGrid = self.childGrids[rowIndex];\n    treeGrid.visible = true;\n    self.dispatchEvent('expandtree', {\n      treeGrid: treeGrid,\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex] = treeGrid;\n    self.sizes.trees[rowIndex] = h;\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\n    self.resize(true);\n  };\n  /**\n   * Toggles tree grid open and close by row index.\n   * @memberof canvasDatagrid\n   * @name toggleTree\n   * @method\n   * @param {number} index The index of the row to toggle.\n   */\n  self.toggleTree = function (rowIndex) {\n    var i = self.openChildren[rowIndex];\n    if (i) {\n      return self.collapseTree(rowIndex);\n    }\n    self.expandTree(rowIndex);\n  };\n  /**\n   * Returns a header from the schema by name.\n   * @memberof canvasDatagrid\n   * @name getHeaderByName\n   * @tutorial schema\n   * @method\n   * @returns {header} header with the selected name, or undefined.\n   * @param {string} name The name of the column to resize.\n   */\n  self.getHeaderByName = function (name) {\n    var x,\n      i = self.getSchema();\n    for (x = 0; x < i.length; x += 1) {\n      if (i[x].name === name) {\n        return i[x];\n      }\n    }\n  };\n  /**\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\n   * @memberof canvasDatagrid\n   * @name fitColumnToValues\n   * @method\n   * @param {string} name The name of the column to resize.\n   */\n  self.fitColumnToValues = function (name, internal) {\n    if (!self.canvas) {\n      return;\n    }\n    self.sizes.columns[\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index\n    ] = Math.max(self.findColumnMaxTextLength(name), self.style.minColumnWidth);\n    if (!internal) {\n      self.resize();\n      self.draw(true);\n    }\n  };\n  /**\n   * Checks if a cell is currently visible.\n   * @memberof canvasDatagrid\n   * @name isCellVisible\n   * @overload\n   * @method\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\n   * @param {number} columnIndex The column index of the cell to check.\n   * @param {number} rowIndex The row index of the cell to check.\n   */\n  self.isCellVisible = function (cell, rowIndex) {\n    // overload\n    if (rowIndex !== undefined) {\n      return (\n        self.visibleCells.filter(function (c) {\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\n        }).length > 0\n      );\n    }\n    var x,\n      l = self.visibleCells.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        cell.x === self.visibleCells[x].x &&\n        cell.y === self.visibleCells[x].y\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Sets the order of the data.\n   * @memberof canvasDatagrid\n   * @name order\n   * @method\n   * @param {number} columnName Name of the column to be sorted.\n   * @param {string} direction `asc` for ascending or `desc` for descending.\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\n   */\n  self.order = function (\n    columnName,\n    direction,\n    sortFunction,\n    dontSetStorageData,\n  ) {\n    var f,\n      c = self.getSchema().filter(function (col) {\n        return col.name === columnName;\n      });\n    if (\n      self.dispatchEvent('beforesortcolumn', {\n        name: columnName,\n        direction: direction,\n      })\n    ) {\n      return;\n    }\n    self.orderBy = columnName;\n    self.orderDirection = direction;\n    if (!self.viewData || self.viewData.length === 0) {\n      return;\n    }\n    if (c.length === 0) {\n      throw new Error('Cannot sort.  No such column name');\n    }\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\n    if (!f && c[0].type !== undefined) {\n      console.warn(\n        'Cannot sort type \"%s\" falling back to string sort.',\n        c[0].type,\n      );\n    }\n    self.orderings.add(\n      columnName,\n      direction,\n      typeof f === 'function' ? f : self.sorters.string,\n    );\n    self.refresh();\n    self.dispatchEvent('sortcolumn', {\n      name: columnName,\n      direction: direction,\n    });\n\n    if (dontSetStorageData) {\n      return;\n    }\n    self.setStorageData();\n  };\n  self.isInGrid = function (e) {\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\n   * @memberof canvasDatagrid\n   * @name moveSelection\n   * @method\n   * @param {number} offsetX The number of columns to offset the selection.\n   * @param {number} offsetY The number of rows to offset the selection.\n   */\n  self.moveSelection = function (offsetX, offsetY) {\n    var sel = [];\n    self.selections.forEach(function (row, rowIndex) {\n      sel[rowIndex + offsetY] = [];\n      row.forEach(function (colIndex) {\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\n      });\n    });\n    self.selections = sel;\n  };\n  /**\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\n   * @memberof canvasDatagrid\n   * @name moveTo\n   * @method\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\n   * @param {number} x The column index to start inserting the selection at.\n   * @param {number} y The row index to start inserting the selection at.\n   */\n  self.moveTo = function (sel, x, y) {\n    var selectedData = self.getSelectedData(),\n      visibleSchema = self.getVisibleSchema(),\n      selectionLength = sel.length,\n      xi,\n      maxRowLength = -Infinity,\n      minXi = Infinity,\n      yi = y - 1;\n\n    sel.forEach(function (row, rowIndex) {\n      if (rowIndex === selectionLength) {\n        return;\n      }\n      if (row.length === 0) {\n        return;\n      }\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\n      maxRowLength = Math.max(maxRowLength, row.length);\n      row.forEach(function (colIndex) {\n        // intentional redef of colIndex\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (!visibleSchema[colIndex]) {\n          return;\n        }\n        // TODO:\n        if (!self.data[rowIndex]) {\n          self.data[rowIndex] = {};\n        }\n        // TODO:\n        self.data[rowIndex][visibleSchema[colIndex].name] = null;\n      });\n    });\n\n    sel.forEach(function (row, index) {\n      var lastSourceIndex;\n      yi += 1;\n      xi = self.getVisibleColumnIndexOf(x);\n      row.forEach(function (colIndex, cidx) {\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (cidx > 0) {\n          // this confusing bit of nonsense figures out\n          // if the selection has skipped cells\n          xi += colIndex - lastSourceIndex;\n        }\n        lastSourceIndex = colIndex;\n        if (\n          colIndex === -1 ||\n          !visibleSchema[xi] ||\n          !visibleSchema[colIndex] ||\n          // TODO:\n          self.data.length - 1 < yi ||\n          yi < 0\n        ) {\n          return;\n        }\n        // TODO:\n        if (!self.data[yi]) {\n          self.data[yi] = {};\n        }\n        // TODO:\n        self.data[yi][visibleSchema[xi].name] =\n          selectedData[index][visibleSchema[colIndex].name];\n      });\n    });\n  };\n  /**\n   * Checks if a given column is visible.\n   * @memberof canvasDatagrid\n   * @name isColumnVisible\n   * @method\n   * @returns {boolean} When true, the column is visible.\n   * @param {number} columnIndex Column index.\n   */\n  self.isColumnVisible = function (columnIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.columnIndex === columnIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Checks if a given row is visible.\n   * @memberof canvasDatagrid\n   * @name isRowVisible\n   * @method\n   * @returns {boolean} When true, the row is visible.\n   * @param {number} rowIndex Row index.\n   */\n  self.isRowVisible = function (rowIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.rowIndex === rowIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Gets the cell at columnIndex and rowIndex.\n   * @memberof canvasDatagrid\n   * @name getVisibleCellByIndex\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Column index.\n   * @param {number} y Row index.\n   */\n  self.getVisibleCellByIndex = function (x, y) {\n    return self.visibleCells.filter(function (c) {\n      return c.columnIndex === x && c.rowIndex === y;\n    })[0];\n  };\n  /**\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\n   * @memberof canvasDatagrid\n   * @name getCellAt\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Number of pixels from the left.\n   * @param {number} y Number of pixels from the top.\n   */\n  self.getCellAt = function (x, y, useTouchScrollZones) {\n    function getBorder(entitiy) {\n      if (\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\n          x &&\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'r';\n      }\n      if (\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'l';\n      }\n      if (\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\n          y &&\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 'b';\n      }\n      if (\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 't';\n      }\n    }\n    if (!self.visibleCells) {\n      return;\n    }\n    var border,\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\n      moveMode = self.attributes.borderDragBehavior === 'move',\n      i,\n      l = self.visibleCells.length,\n      moveBorder,\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\n      cell,\n      entitiy;\n    if (!self.visibleCells || !self.visibleCells.length) {\n      return;\n    }\n    self.hasFocus = true;\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\n      self.hasFocus = false;\n      return {\n        dragContext: 'inherit',\n        context: 'inherit',\n      };\n    }\n    for (i = 0; i < l; i += 1) {\n      cell = self.visibleCells[i];\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\n      entitiy = {\n        x: cell.x,\n        y: cell.y,\n        height: cell.height,\n        width: cell.width,\n      };\n      if (\n        useTouchScrollZones &&\n        /(vertical|horizontal)-scroll-/.test(cell.style)\n      ) {\n        entitiy.x -= tsz;\n        entitiy.y -= tsz;\n        entitiy.height += tsz;\n        entitiy.width += tsz;\n      }\n      if (\n        entitiy.x - self.style.cellBorderWidth < x &&\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\n        entitiy.y - self.style.cellBorderWidth < y &&\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\n      ) {\n        if (/frozen-row-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'row-resize';\n          return cell;\n        }\n        if (/frozen-column-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'col-resize';\n          return cell;\n        }\n        if (/selection-handle-/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'crosshair';\n          return cell;\n        }\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'vertical-scroll-box';\n          cell.context = 'vertical-scroll-box';\n          cell.isScrollBar = true;\n          cell.isVerticalScrollBar = true;\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\n            cell.dragContext = 'vertical-scroll-bottom';\n            cell.context = 'vertical-scroll-bottom';\n          } else if (y < self.scrollBox.box.v.y) {\n            cell.dragContext = 'vertical-scroll-top';\n            cell.context = 'vertical-scroll-top';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'horizontal-scroll-box';\n          cell.context = 'horizontal-scroll-box';\n          cell.isScrollBar = true;\n          cell.isHorizontalScrollBar = true;\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\n            cell.dragContext = 'horizontal-scroll-right';\n            cell.context = 'horizontal-scroll-right';\n          } else if (x < self.scrollBox.box.h.x) {\n            cell.dragContext = 'horizontal-scroll-left';\n            cell.context = 'horizontal-scroll-left';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        border = getBorder(entitiy);\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\n        moveBorder =\n          moveMode &&\n          cell.selectionBorder &&\n          cell.selectionBorder.indexOf(border) !== -1;\n        if (\n          ['l', 'r'].indexOf(border) !== -1 &&\n          (self.attributes.allowColumnResize || moveBorder) &&\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          ((self.attributes.allowRowHeaderResize &&\n            (cell.isRowHeader || cell.isCorner)) ||\n            !(cell.isRowHeader && cell.isCorner))\n        ) {\n          if (\n            (cell.isColumnHeader ||\n              cell.isCorner ||\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\n            border === 'r'\n          ) {\n            cell.context = 'ew-resize';\n            cell.dragContext = 'ew-resize';\n            return cell;\n          }\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\n            cell.context = xBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (\n          ['t', 'b'].indexOf(border) !== -1 &&\n          cell.rowIndex > -1 &&\n          (self.attributes.allowRowResize || moveBorder) &&\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          !cell.isColumnHeader\n        ) {\n          if (\n            (cell.isRowHeader ||\n              cell.isCorner ||\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\n            border === 'b'\n          ) {\n            cell.context = 'ns-resize';\n            cell.dragContext = 'ns-resize';\n            return cell;\n          }\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\n            cell.context = yBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (cell.style === 'columnHeaderCell') {\n          cell.context = 'cell';\n          cell.dragContext = 'column-reorder';\n          return cell;\n        }\n        if (cell.style === 'rowHeaderCell') {\n          if (\n            self.attributes.rowGrabZoneSize +\n              (cell.y - self.style.cellBorderWidth) <\n              y ||\n            !self.attributes.allowRowReordering\n          ) {\n            cell.dragContext = 'cell';\n            cell.context = 'cell';\n          } else {\n            cell.context = self.cursorGrab;\n            cell.dragContext = 'row-reorder';\n          }\n          return cell;\n        }\n        if (cell.isGrid) {\n          self.hasFocus = false;\n          cell.dragContext = 'cell-grid';\n          cell.context = 'cell-grid';\n          return cell;\n        }\n        if (cell.style === 'tree-grid') {\n          self.hasFocus = false;\n          cell.dragContext = 'tree';\n          cell.context = 'tree';\n          return cell;\n        }\n        cell.dragContext = 'cell';\n        cell.context = 'cell';\n        return cell;\n      }\n    }\n    self.hasFocus = true;\n    self.cursor = 'default';\n    return {\n      dragContext: 'background',\n      context: 'background',\n      style: 'background',\n      isBackground: true,\n    };\n  };\n  /**\n   * Gets the bounds of current selection.\n   * @returns {rect} selection.\n   * @memberof canvasDatagrid\n   * @name getSelectionBounds\n   * @method\n   */\n  self.getSelectionBounds = function () {\n    var low = { x: Infinity, y: Infinity },\n      high = { x: -Infinity, y: -Infinity };\n    self.selections.forEach(function (row, rowIndex) {\n      var maxCol, minCol;\n      low.y = rowIndex < low.y ? rowIndex : low.y;\n      high.y = rowIndex > high.y ? rowIndex : high.y;\n      maxCol = Math.max.apply(null, row);\n      minCol = Math.min.apply(null, row);\n      low.x = minCol < low.x ? minCol : low.x;\n      high.x = maxCol > high.x ? maxCol : high.x;\n    });\n    return {\n      top: low.y,\n      left: low.x,\n      bottom: high.y,\n      right: high.x,\n    };\n  };\n  /**\n   * Returns an auto generated schema based on data structure.\n   * @memberof canvasDatagrid\n   * @name getSchemaFromData\n   * @method\n   * @tutorial schema\n   * @returns {schema} schema A schema based on the first item in the data array.\n   */\n  self.getSchemaFromData = function (d) {\n    d = d || self.originalData;\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\n      key,\n      index,\n    ) {\n      var type = self.getBestGuessDataType(key, d),\n        i = {\n          name: key,\n          title: isNaN(parseInt(key, 10))\n            ? key\n            : self.integerToAlpha(key).toUpperCase(),\n          index: index,\n          columnIndex: index,\n          type: type,\n          filter: self.filter(type),\n        };\n      if (\n        self.storedSettings &&\n        self.storedSettings.visibility &&\n        self.storedSettings.visibility[i.name] !== undefined\n      ) {\n        i.hidden = !self.storedSettings.visibility[i.name];\n      }\n      return i;\n    });\n  };\n  /**\n   * Clears the change log grid.changes that keeps track of changes to the data set.\n   * This does not undo changes or alter data it is simply a convince array to keep\n   * track of changes made to the data since last this method was called.\n   * @memberof canvasDatagrid\n   * @name clearChangeLog\n   * @method\n   */\n  self.clearChangeLog = function () {\n    self.changes = [];\n  };\n  /**\n   * Selects an area of the grid.\n   * @memberof canvasDatagrid\n   * @name selectArea\n   * @method\n   * @param {rect} bounds A rect object representing the selected values.\n   */\n  self.selectArea = function (bounds, ctrl) {\n    self.selectionBounds = bounds || self.selectionBounds;\n    var ev,\n      x,\n      y,\n      s = self.getSchema();\n    if (!ctrl) {\n      self.selections = [];\n    }\n    if (\n      self.selectionBounds.top < -1 ||\n      self.selectionBounds.bottom > self.viewData.length ||\n      self.selectionBounds.left < -1 ||\n      self.selectionBounds.right > s.length\n    ) {\n      throw new Error('Impossible selection area');\n    }\n    for (\n      x = self.selectionBounds.top;\n      x <= self.selectionBounds.bottom;\n      x += 1\n    ) {\n      self.selections[x] = [];\n      for (\n        y = self.selectionBounds.left;\n        y <= self.selectionBounds.right;\n        y += 1\n      ) {\n        if (self.selections[x].indexOf(y) === -1) {\n          self.selections[x].push(y);\n        }\n      }\n    }\n    ev = {\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    };\n    Object.defineProperty(ev, 'selectedData', {\n      get: function () {\n        return self.getSelectedData();\n      },\n    });\n    self.dispatchEvent('selectionchanged', ev);\n  };\n  /**\n   * Returns the maximum text width for a given column by column name.\n   * @memberof canvasDatagrid\n   * @name findColumnMaxTextLength\n   * @method\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\n   * @param {string} name The name of the column to calculate the value's width of.\n   */\n  self.findColumnMaxTextLength = function (name) {\n    var m = -Infinity;\n    if (name === 'cornerCell') {\n      self.ctx.font = self.style.rowHeaderCellFont;\n      return (\n        self.ctx.measureText(\n          (\n            self.viewData.length + (self.attributes.showNewRow ? 1 : 0)\n          ).toString(),\n        ).width +\n        self.style.autosizePadding +\n        self.style.autosizeHeaderCellPadding +\n        self.style.rowHeaderCellPaddingRight +\n        self.style.rowHeaderCellPaddingLeft +\n        (self.attributes.tree\n          ? self.style.treeArrowWidth +\n            self.style.treeArrowMarginLeft +\n            self.style.treeArrowMarginRight\n          : 0)\n      );\n    }\n    var formatter = null;\n    self.getSchema().forEach(function (col) {\n      if (col.name !== name) {\n        return;\n      }\n      self.ctx.font = self.style.columnHeaderCellFont;\n      var t =\n        self.ctx.measureText(col.title || col.name).width +\n        self.style.headerCellPaddingRight +\n        self.style.headerCellPaddingLeft;\n      m = t > m ? t : m;\n      formatter = self.formatters[col.type];\n    });\n    self.viewData.forEach(function (row) {\n      var text = row[name];\n      if (formatter) {\n        text = formatter({ cell: { value: text } });\n      }\n      self.ctx.font = self.style.cellFont;\n      var t =\n        self.ctx.measureText(text).width +\n        self.style.cellPaddingRight +\n        self.style.cellPaddingLeft +\n        self.style.cellAutoResizePadding;\n      m = t > m ? t : m;\n    });\n    return m;\n  };\n  /**\n   * Gets the total width of all header columns.\n   * @memberof canvasDatagrid\n   * @name getHeaderWidth\n   * @method\n   */\n  self.getHeaderWidth = function () {\n    return self.getVisibleSchema().reduce(function (total, header) {\n      return total + parseInt(header.width || self.style.cellWidth, 10);\n    }, 0);\n  };\n  /**\n   * Gets the height of a row by index.\n   * @memberof canvasDatagrid\n   * @name getRowHeight\n   * @method\n   * @param {number} rowIndex The row index to lookup.\n   */\n  self.getRowHeight = function (rowIndex) {\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\n  };\n  /**\n   * Gets the width of a column by index.\n   * @memberof canvasDatagrid\n   * @name getColummnWidth\n   * @method\n   * @param {number} columnIndex The column index to lookup.\n   */\n  self.getColummnWidth = function (columnIndex) {\n    return (\n      (self.sizes.columns[columnIndex] ||\n        self.getSchema()[columnIndex].width ||\n        self.style.cellWidth) * self.scale\n    );\n  };\n  self.formatters.string = function cellFormatterString(e) {\n    return e.cell.value !== undefined ? e.cell.value : '';\n  };\n  self.formatters.rowHeaderCell = self.formatters.string;\n  self.formatters.headerCell = self.formatters.string;\n  self.formatters.number = self.formatters.string;\n  self.formatters.int = self.formatters.string;\n  self.formatters.html = self.formatters.string;\n  self.sorters.string = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (a[columnName] === undefined || a[columnName] === null) {\n        return 1;\n      }\n      if (b[columnName] === undefined || b[columnName] === null) {\n        return 0;\n      }\n      if (asc) {\n        if (!a[columnName].localeCompare) {\n          return 1;\n        }\n        return a[columnName].localeCompare(b[columnName]);\n      }\n      if (!b[columnName].localeCompare) {\n        return 1;\n      }\n      return b[columnName].localeCompare(a[columnName]);\n    };\n  };\n  self.sorters.number = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return a[columnName] - b[columnName];\n      }\n      return b[columnName] - a[columnName];\n    };\n  };\n  self.sorters.date = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return (\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\n        );\n      }\n      return (\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\n      );\n    };\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self, ctor) {\n  self.scale = 1;\n  self.orders = {\n    rows: [],\n    columns: [],\n  };\n  self.appliedInlineStyles = {};\n  self.cellGridAttributes = {};\n  self.treeGridAttributes = {};\n  self.visibleRowHeights = [];\n  self.hasFocus = false;\n  self.activeCell = {\n    columnIndex: 0,\n    rowIndex: 0,\n  };\n  self.innerHTML = '';\n  self.storageName = 'canvasDataGrid';\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\n  self.dataType = 'application/x-canvas-datagrid';\n  self.orderBy = null;\n  self.orderDirection = 'asc';\n  self.orderings = {\n    columns: [],\n    add: function (orderBy, orderDirection, sortFunction) {\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\n        return col.orderBy !== orderBy;\n      });\n      self.orderings.columns.push({\n        orderBy: orderBy,\n        orderDirection: orderDirection,\n        sortFunction: sortFunction,\n      });\n    },\n    sort: function () {\n      console.warn(\n        'grid.orderings.sort has been deprecated. Please use grid.refresh().',\n      );\n\n      self.orderings.columns.forEach(function (col) {\n        self.viewData.sort(col.sortFunction(col.orderBy, col.orderDirection));\n      });\n    },\n  };\n  self.columnFilters = {};\n  self.filters = {};\n  self.frozenRow = 0;\n  self.frozenColumn = 0;\n  self.ellipsisCache = {};\n  self.scrollCache = { x: [], y: [] };\n  self.scrollBox = {};\n  self.visibleRows = [];\n  self.visibleCells = [];\n  self.sizes = {\n    rows: {},\n    columns: {},\n    trees: {},\n  };\n  self.currentFilter = function () {\n    return true;\n  };\n  self.selections = [];\n  self.hovers = {};\n  self.attributes = {};\n  self.style = {};\n  self.formatters = {};\n  self.sorters = {};\n  self.parsers = {};\n  self.schemaHashes = {};\n  self.events = {};\n  self.changes = [];\n  self.scrollIndexTop = 0;\n  self.scrollPixelTop = 0;\n  self.scrollIndexLeft = 0;\n  self.scrollPixelLeft = 0;\n  self.childGrids = {};\n  self.openChildren = {};\n  self.scrollModes = [\n    'vertical-scroll-box',\n    'vertical-scroll-top',\n    'vertical-scroll-bottom',\n    'horizontal-scroll-box',\n    'horizontal-scroll-right',\n    'horizontal-scroll-left',\n  ];\n  self.componentL1Events = {};\n  self.eventNames = [\n    'afterdraw',\n    'afterrendercell',\n    'attributechanged',\n    'beforebeginedit',\n    'beforecreatecellgrid',\n    'beforedraw',\n    'beforeendedit',\n    'beforerendercell',\n    'beforerendercellgrid',\n    'beginedit',\n    'cellmouseout',\n    'cellmouseover',\n    'click',\n    'collapsetree',\n    'contextmenu',\n    'copy',\n    'datachanged',\n    'dblclick',\n    'endedit',\n    'expandtree',\n    'formatcellvalue',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'newrow',\n    'ordercolumn',\n    'rendercell',\n    'rendercellgrid',\n    'renderorderbyarrow',\n    'rendertext',\n    'rendertreearrow',\n    'reorder',\n    'reordering',\n    'resize',\n    'resizecolumn',\n    'resizerow',\n    'schemachanged',\n    'scroll',\n    'selectionchanged',\n    'stylechanged',\n    'touchcancel',\n    'touchend',\n    'touchmove',\n    'touchstart',\n    'wheel',\n  ];\n  self.mouse = { x: 0, y: 0 };\n  self.getSelectedData = function (expandToRow) {\n    const selectedData = [];\n    const schema = self.getSchema();\n    const viewDataLength = self.viewData.length;\n\n    if (viewDataLength === 0) {\n      return [];\n    }\n\n    // self.selections is a sparse array, so `viewRowIndex` here\n    // will equal the row index as where it's rendered,\n    // not as where it is in the original data array.\n    self.selections.forEach(function (row, viewRowIndex) {\n      if (!row) {\n        return;\n      }\n\n      if (viewRowIndex === viewDataLength) {\n        return;\n      }\n\n      if (row.length === 0) {\n        selectedData[viewRowIndex] = null;\n        return;\n      }\n\n      selectedData[viewRowIndex] = {};\n\n      row.forEach(function (col) {\n        if (col === -1 || !schema[col]) {\n          return;\n        }\n\n        const orderedIndex = self.orders.columns[col];\n\n        if (!expandToRow && schema[orderedIndex].hidden) {\n          return;\n        }\n\n        if (self.viewData[viewRowIndex]) {\n          selectedData[viewRowIndex][schema[orderedIndex].name] =\n            self.viewData[viewRowIndex][schema[orderedIndex].name];\n        }\n      });\n    });\n\n    return selectedData;\n  };\n  self.getBoundRowIndexFromViewRowIndex = function (viewRowIndex) {\n    if (self.boundRowIndexMap && self.boundRowIndexMap.has(viewRowIndex)) {\n      return self.boundRowIndexMap.get(viewRowIndex);\n    }\n\n    return undefined;\n  };\n  self.getColumnHeaderCellHeight = function () {\n    if (!self.attributes.showColumnHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\n    );\n  };\n  self.getRowHeaderCellWidth = function () {\n    if (!self.attributes.showRowHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\n    );\n  };\n  self.setStorageData = function () {\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\n      return;\n    }\n    var visibility = {};\n    self.getSchema().forEach(function (column) {\n      visibility[column.name] = !column.hidden;\n    });\n    localStorage.setItem(\n      self.storageName + '-' + self.attributes.name,\n      JSON.stringify({\n        sizes: {\n          rows: self.sizes.rows,\n          columns: self.sizes.columns,\n        },\n        orders: {\n          rows: self.orders.rows,\n          columns: self.orders.columns,\n        },\n        orderBy: self.orderBy,\n        orderDirection: self.orderDirection,\n        visibility: visibility,\n      }),\n    );\n  };\n  self.getSchema = function () {\n    return self.schema || self.tempSchema || [];\n  };\n  function fillArray(low, high) {\n    var i = [],\n      x;\n    for (x = low; x <= high; x += 1) {\n      i[x] = x;\n    }\n    return i;\n  }\n  self.createColumnOrders = function () {\n    var s = self.getSchema();\n    self.orders.columns = fillArray(0, s.length - 1);\n  };\n  self.createRowOrders = function () {\n    self.orders.rows = fillArray(0, self.originalData.length - 1);\n  };\n  self.getVisibleSchema = function () {\n    return self.getSchema().filter(function (col) {\n      return !col.hidden;\n    });\n  };\n  self.applyDefaultValue = function (row, header) {\n    var d = header.defaultValue || '';\n    if (typeof d === 'function') {\n      d = d.apply(self.intf, [header]);\n    }\n    row[header.name] = d;\n  };\n  self.createNewRowData = function () {\n    self.newRow = {};\n    self.getSchema().forEach(function forEachHeader(header) {\n      self.applyDefaultValue(self.newRow, header);\n    });\n  };\n  self.getSchemaNameHash = function (key) {\n    var n = 0;\n    while (self.schemaHashes[key]) {\n      n += 1;\n      key = key + n;\n    }\n    return key;\n  };\n  self.filter = function (type) {\n    var f = self.filters[type];\n    if (!f && type !== undefined) {\n      console.warn(\n        'Cannot find filter for type %s, falling back to substring match.',\n        type,\n      );\n      f = self.filters.string;\n    }\n    return f;\n  };\n  self.hasActiveFilters = function () {\n    return self.columnFilters && Object.keys(self.columnFilters).length > 0;\n  };\n  self.getFilteredAndSortedViewData = function (originalData) {\n    // We make a copy of originalData here in order be able to\n    // filter and sort rows without modifying the original array.\n    // Each row is turned into a (row, rowIndex) tuple\n    // so that when we apply filters, we can refer back to the\n    // row's original row number in originalData. This becomes\n    // useful when emitting cell events.\n    let newViewData = originalData.map((row, originalRowIndex) => [\n      row,\n      originalRowIndex,\n    ]);\n\n    // Apply filtering\n    for (const [headerName, filterText] of Object.entries(self.columnFilters)) {\n      const header = self.getHeaderByName(headerName);\n\n      if (!header) {\n        continue;\n      }\n\n      const currentFilterFunction =\n        header.filter || self.filter(header.type || 'string');\n\n      newViewData = newViewData.filter(function ([row]) {\n        const cellValue = row[headerName];\n        const shouldIncludeRow = currentFilterFunction(cellValue, filterText);\n\n        return shouldIncludeRow;\n      });\n    }\n\n    // Apply sorting\n    for (const column of self.orderings.columns) {\n      const sortFn = column.sortFunction(column.orderBy, column.orderDirection);\n\n      newViewData.sort(([rowA], [rowB]) => sortFn(rowA, rowB));\n    }\n\n    return {\n      viewData: newViewData.map(([row]) => row),\n      boundRowIndexMap: new Map(\n        newViewData.map(([_row, originalRowIndex], viewRowIndex) => [\n          viewRowIndex,\n          originalRowIndex,\n        ]),\n      ),\n    };\n  };\n  self.refresh = function () {\n    const { viewData, boundRowIndexMap } = self.getFilteredAndSortedViewData(\n      self.originalData,\n    );\n\n    self.viewData = viewData;\n    self.boundRowIndexMap = boundRowIndexMap;\n\n    self.resize();\n    self.draw(true);\n  };\n  self.getBestGuessDataType = function (columnName, data) {\n    var t,\n      x,\n      l = data.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        data[x] !== undefined &&\n        data[x] !== null &&\n        [null, undefined].indexOf(data[x][columnName]) !== -1\n      ) {\n        t = typeof data[x];\n        return t === 'object' ? 'string' : t;\n      }\n    }\n    return 'string';\n  };\n  self.drawChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].draw();\n    });\n  };\n  self.resizeChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].resize();\n    });\n  };\n  self.autoScrollZone = function (e, x, y, ctrl) {\n    var setTimer,\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\n    if (y !== -1) {\n      if (\n        x > self.width - self.attributes.selectionScrollZone &&\n        x < self.width\n      ) {\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (y !== -1) {\n      if (\n        y > self.height - self.attributes.selectionScrollZone &&\n        y < self.height\n      ) {\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\n        0\n      ) {\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (\n      setTimer &&\n      !ctrl &&\n      self.currentCell &&\n      self.currentCell.columnIndex !== -1\n    ) {\n      self.scrollTimer = setTimeout(\n        self.mousemove,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.validateColumn = function (c, s) {\n    if (!c.name) {\n      throw new Error('A column must contain at least a name.');\n    }\n    if (\n      s.filter(function (i) {\n        return i.name === c.name;\n      }).length > 0\n    ) {\n      throw new Error(\n        'A column with the name ' +\n          c.name +\n          ' already exists and cannot be added again.',\n      );\n    }\n    return true;\n  };\n  self.setDefaults = function (obj1, obj2, key, def) {\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\n  };\n  self.setAttributes = function () {\n    self.defaults.attributes.forEach(function eachAttribute(i) {\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\n    });\n  };\n  self.setStyle = function () {\n    self.defaults.styles.forEach(function eachStyle(i) {\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\n    });\n  };\n  self.autosize = function (colName) {\n    self.getVisibleSchema().forEach(function (col, colIndex) {\n      if (col.name === colName || colName === undefined) {\n        self.sizes.columns[colIndex] = Math.max(\n          self.findColumnMaxTextLength(col.name),\n          self.style.minColumnWidth,\n        );\n      }\n    });\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\n  };\n  self.dispose = function () {\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\n      self.canvas.parentNode.removeChild(self.canvas);\n    }\n    if (!self.isChildGrid) {\n      document.body.removeChild(self.controlInput);\n    }\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\n    self.eventParent.removeEventListener('click', self.click, false);\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\n    self.canvas.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('cut', self.cut);\n    self.controlInput.removeEventListener('paste', self.paste);\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\n    window.removeEventListener('resize', self.resize);\n    if (self.observer && self.observer.disconnect) {\n      self.observer.disconnect();\n    }\n  };\n  self.tryLoadStoredSettings = function () {\n    var s;\n    self.reloadStoredValues();\n    if (\n      self.storedSettings &&\n      typeof self.storedSettings.orders === 'object' &&\n      self.storedSettings.orders !== null\n    ) {\n      if (\n        self.storedSettings.orders.rows.length >= (self.viewData || []).length\n      ) {\n        self.orders.rows = self.storedSettings.orders.rows;\n      }\n      s = self.getSchema();\n      if (self.storedSettings.orders.columns.length === s.length) {\n        self.orders.columns = self.storedSettings.orders.columns;\n      }\n      self.orderBy =\n        self.storedSettings.orderBy === undefined\n          ? s[0].name\n          : self.storedSettings.orderBy;\n      self.orderDirection =\n        self.storedSettings.orderDirection === undefined\n          ? 'asc'\n          : self.storedSettings.orderDirection;\n      if (\n        self.storedSettings.orderBy !== undefined &&\n        self.getHeaderByName(self.orderBy) &&\n        self.orderDirection\n      ) {\n        self.order(self.orderBy, self.orderDirection);\n      }\n    }\n  };\n  self.getDomRoot = function () {\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\n  };\n  self.getFontName = function (fontStyle) {\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\n  };\n  self.getFontHeight = function (fontStyle) {\n    return parseFloat(fontStyle, 10);\n  };\n  self.parseStyleValue = function (key) {\n    if (/Font/.test(key)) {\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\n      return;\n    }\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\n    if (\n      key === 'moveOverlayBorderSegments' &&\n      typeof self.style[key] === 'string'\n    ) {\n      self.style[key] = self.style[key].split(',').map(function (i) {\n        return parseInt(i, 10);\n      });\n    }\n  };\n  self.initProp = function (propName) {\n    if (!self.args[propName]) {\n      return;\n    }\n    Object.keys(self.args[propName]).forEach(function (key) {\n      self[propName][key] = self.args[propName][key];\n    });\n  };\n  self.getStyleProperty = function (key) {\n    if (self.styleKeys.indexOf(key) === -1) {\n      return self.parentNodeStyle[key];\n    }\n    return self.style[key];\n  };\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\n    var isDim =\n      [\n        'height',\n        'width',\n        'minHeight',\n        'minWidth',\n        'maxHeight',\n        'maxWidth',\n      ].indexOf(key) !== -1;\n    if (self.styleKeys.indexOf(key) === -1) {\n      self.parentNodeStyle[key] = value;\n    } else {\n      if (/-/.test(key)) {\n        key = self.dehyphenateProperty(key);\n      }\n      self.style[key] = value;\n      self.parseStyleValue(key);\n    }\n    if (isDim) {\n      self.resize();\n    }\n    if (!supressDrawAndEvent) {\n      self.draw(true);\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\n    }\n  };\n  self.reloadStoredValues = function () {\n    if (self.attributes.name && self.attributes.saveAppearance) {\n      try {\n        self.storedSettings = localStorage.getItem(\n          self.storageName + '-' + self.attributes.name,\n        );\n      } catch (e) {\n        console.warn('Error loading stored values. ' + e.message);\n        self.storedSettings = undefined;\n      }\n      if (self.storedSettings) {\n        try {\n          self.storedSettings = JSON.parse(self.storedSettings);\n        } catch (e) {\n          console.warn('could not read settings from localStore', e);\n          self.storedSettings = undefined;\n        }\n      }\n      if (self.storedSettings) {\n        if (\n          typeof self.storedSettings.sizes === 'object' &&\n          self.storedSettings.sizes !== null\n        ) {\n          self.sizes.rows = self.storedSettings.sizes.rows;\n          self.sizes.columns = self.storedSettings.sizes.columns;\n          ['trees', 'columns', 'rows'].forEach(function (i) {\n            if (!self.sizes[i]) {\n              self.sizes[i] = {};\n            }\n          });\n        }\n        if (typeof self.storedSettings.visibility === 'object') {\n          self.getSchema().forEach(function (column) {\n            if (\n              self.storedSettings.visibility &&\n              self.storedSettings.visibility[column.name] !== undefined\n            ) {\n              column.hidden = !self.storedSettings.visibility[column.name];\n            }\n          });\n        }\n      }\n    }\n  };\n  self.init = function () {\n    if (self.initialized) {\n      return;\n    }\n    function addStyleKeyIfNoneExists(key) {\n      if (self.styleKeys.indexOf(key) === -1) {\n        self.styleKeys.push(key);\n      }\n    }\n    var publicStyleKeyIntf = {};\n    self.setAttributes();\n    self.setStyle();\n    self.initScrollBox();\n    self.setDom();\n    self.nodeType = 'canvas-datagrid';\n    self.ie = /Trident/.test(window.navigator.userAgent);\n    self.edge = /Edge/.test(window.navigator.userAgent);\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\n    self.moz = /Gecko/.test(window.navigator.userAgent);\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\n    self.blankValues = [undefined, null, ''];\n    self.cursorGrab = 'grab';\n    self.cursorGrabing = 'grabbing';\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\n    self.pointerLockPosition = { x: 0, y: 0 };\n    Object.keys(self.style).forEach(self.parseStyleValue);\n    self.intf.moveSelection = self.moveSelection;\n    self.intf.moveTo = self.moveTo;\n    self.intf.addEventListener = self.addEventListener;\n    self.intf.removeEventListener = self.removeEventListener;\n    self.intf.dispatchEvent = self.dispatchEvent;\n    /**\n     * Releases grid resources and removes grid elements.\n     * @memberof canvasDatagrid\n     * @name dispose\n     * @method\n     */\n    self.intf.dispose = self.dispose;\n    /**\n     * Appends the grid to another element later.  Not implemented.\n     * @memberof canvasDatagrid\n     * @name appendTo\n     * @method\n     * @param {number} el The element to append the grid to.\n     */\n    self.intf.appendTo = self.appendTo;\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\n    self.intf.filters = self.filters;\n    self.intf.sorters = self.sorters;\n    self.intf.autosize = self.autosize;\n    self.intf.beginEditAt = self.beginEditAt;\n    self.intf.endEdit = self.endEdit;\n    self.intf.setActiveCell = self.setActiveCell;\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\n    self.intf.scrollIntoView = self.scrollIntoView;\n    self.intf.clearChangeLog = self.clearChangeLog;\n    self.intf.gotoCell = self.gotoCell;\n    self.intf.gotoRow = self.gotoRow;\n    self.intf.getHeaderByName = self.getHeaderByName;\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\n    self.intf.findRowScrollTop = self.findRowScrollTop;\n    self.intf.fitColumnToValues = self.fitColumnToValues;\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\n    self.intf.disposeContextMenu = self.disposeContextMenu;\n    self.intf.getCellAt = self.getCellAt;\n    self.intf.isCellVisible = self.isCellVisible;\n    self.intf.isRowVisible = self.isRowVisible;\n    self.intf.isColumnVisible = self.isColumnVisible;\n    self.intf.order = self.order;\n    self.intf.draw = self.draw;\n    self.intf.refresh = self.refresh;\n    self.intf.isComponent = self.isComponent;\n    self.intf.selectArea = self.selectArea;\n    self.intf.clipElement = self.clipElement;\n    self.intf.getSchemaFromData = self.getSchemaFromData;\n    self.intf.setFilter = self.setFilter;\n    self.intf.selectRow = self.selectRow;\n    self.intf.parentGrid = self.parentGrid;\n    self.intf.toggleTree = self.toggleTree;\n    self.intf.expandTree = self.expandTree;\n    self.intf.collapseTree = self.collapseTree;\n    self.intf.canvas = self.canvas;\n    self.intf.context = self.ctx;\n    self.intf.insertRow = self.insertRow;\n    self.intf.deleteRow = self.deleteRow;\n    self.intf.addRow = self.addRow;\n    self.intf.insertColumn = self.insertColumn;\n    self.intf.deleteColumn = self.deleteColumn;\n    self.intf.addColumn = self.addColumn;\n    self.intf.getClippingRect = self.getClippingRect;\n    self.intf.setRowHeight = self.setRowHeight;\n    self.intf.setColumnWidth = self.setColumnWidth;\n    self.intf.resetColumnWidths = self.resetColumnWidths;\n    self.intf.resetRowHeights = self.resetRowHeights;\n    self.intf.resize = self.resize;\n    self.intf.selectColumn = self.selectColumn;\n    self.intf.selectRow = self.selectRow;\n    self.intf.selectAll = self.selectAll;\n    self.intf.selectNone = self.selectNone;\n    self.intf.drawChildGrids = self.drawChildGrids;\n    self.intf.assertPxColor = self.assertPxColor;\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\n    self.intf.integerToAlpha = self.integerToAlpha;\n    self.intf.copy = self.copy;\n    self.intf.paste = self.paste;\n    self.intf.setStyleProperty = self.setStyleProperty;\n    Object.defineProperty(self.intf, 'defaults', {\n      get: function () {\n        return {\n          styles: self.defaults.styles.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n          attributes: self.defaults.attributes.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n        };\n      },\n    });\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, false);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, true);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.DOMStyles = window.getComputedStyle(document.body, null);\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\n      // unless this line is here, Object.keys() will not work on <instance>.style\n      publicStyleKeyIntf[key] = undefined;\n      Object.defineProperty(publicStyleKeyIntf, key, {\n        get: function () {\n          return self.getStyleProperty(key);\n        },\n        set: function (value) {\n          if (self.initialized) {\n            self.appliedInlineStyles[key] = value;\n          }\n          self.setStyleProperty(key, value);\n        },\n      });\n    });\n    Object.defineProperty(self.intf, 'shadowRoot', {\n      get: function () {\n        return self.shadowRoot;\n      },\n    });\n    Object.defineProperty(self.intf, 'activeCell', {\n      get: function () {\n        return self.activeCell;\n      },\n    });\n    Object.defineProperty(self.intf, 'hasFocus', {\n      get: function () {\n        return self.hasFocus;\n      },\n    });\n    /**\n     * Indicates whether grid has filters active\n     * @memberof canvasDatagrid\n     * @name hasActiveFilters\n     * @returns {boolean} When true, grid data is being filtered\n     */\n    Object.defineProperty(self.intf, 'hasActiveFilters', {\n      get: function () {\n        return self.hasActiveFilters();\n      },\n    });\n    Object.defineProperty(self.intf, 'style', {\n      get: function () {\n        return publicStyleKeyIntf;\n      },\n      set: function (valueObject) {\n        Object.keys(valueObject).forEach(function (key) {\n          self.setStyleProperty(key, valueObject[key], true);\n        });\n        self.draw(true);\n        self.dispatchEvent('stylechanged', {\n          name: 'style',\n          value: valueObject,\n        });\n      },\n    });\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\n    Object.keys(self.attributes).forEach(function (key) {\n      Object.defineProperty(self.intf.attributes, key, {\n        get: function () {\n          return self.attributes[key];\n        },\n        set: function (value) {\n          self.attributes[key] = value;\n          if (key === 'name') {\n            self.tryLoadStoredSettings();\n          }\n          self.draw(true);\n          self.dispatchEvent('attributechanged', {\n            name: key,\n            value: value[key],\n          });\n        },\n      });\n    });\n    self.filters.string = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      value = String(value);\n      var filterRegExp,\n        regEnd = /\\/(i|g|m)*$/,\n        pattern = regEnd.exec(filterFor),\n        flags = pattern ? pattern[0].substring(1) : '',\n        flagLength = flags.length;\n      self.invalidFilterRegEx = undefined;\n      if (filterFor.substring(0, 1) === '/' && pattern) {\n        try {\n          filterRegExp = new RegExp(\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\n            flags,\n          );\n        } catch (e) {\n          self.invalidFilterRegEx = e;\n          return;\n        }\n        return filterRegExp.test(value);\n      }\n      return value.toString\n        ? value\n            .toString()\n            .toLocaleUpperCase()\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\n        : false;\n    };\n    self.filters.number = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      if (!filterFor) {\n        return true;\n      }\n      return value === filterFor;\n    };\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\n    self.applyComponentStyle(false, self.intf);\n    self.reloadStoredValues();\n    if (self.args.data) {\n      self.intf.data = self.args.data;\n    }\n    if (self.intf.innerText || self.intf.textContent) {\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      self.intf.data = self.intf.innerText || self.intf.textContent;\n    }\n    if (self.args.schema) {\n      self.intf.schema = self.args.schema;\n    }\n    if (self.isChildGrid || !self.isComponent) {\n      requestAnimationFrame(function () {\n        self.resize(true);\n      });\n    } else {\n      self.resize(true);\n    }\n    self.initialized = true;\n    return self;\n  };\n  /**\n   * Removes focus from the grid.\n   * @memberof canvasDatagrid\n   * @name blur\n   * @method\n   */\n  self.intf.blur = function (e) {\n    self.hasFocus = false;\n  };\n  /**\n   * Focuses on the grid.\n   * @memberof canvasDatagrid\n   * @name focus\n   * @method\n   */\n  self.intf.focus = function () {\n    self.hasFocus = true;\n    self.controlInput.focus();\n  };\n  if (self.shadowRoot || self.isChildGrid) {\n    Object.defineProperty(self.intf, 'height', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.height;\n        }\n        return self.parentNode.height;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.height = value;\n        } else {\n          self.parentNode.height = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'width', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.width;\n        }\n        return self.parentNode.width;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.width = value;\n        } else {\n          self.parentNode.width = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'parentNode', {\n      get: function () {\n        return self.parentNode;\n      },\n      set: function (value) {\n        if (!self.isChildGrid) {\n          throw new TypeError(\n            'Cannot set property parentNode which has only a getter',\n          );\n        }\n        self.parentNode = value;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\n    get: function () {\n      return self.visibleRowHeights;\n    },\n  });\n  Object.defineProperty(self.intf, 'openChildren', {\n    get: function () {\n      return self.openChildren;\n    },\n  });\n  Object.defineProperty(self.intf, 'childGrids', {\n    get: function () {\n      return Object.keys(self.childGrids).map(function (gridId) {\n        return self.childGrids[gridId];\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'isChildGrid', {\n    get: function () {\n      return self.isChildGrid;\n    },\n  });\n  Object.defineProperty(self, 'cursor', {\n    get: function () {\n      return self.parentNodeStyle.cursor;\n    },\n    set: function (value) {\n      if (value === 'cell') {\n        value = 'default';\n      }\n      if (self.currentCursor !== value) {\n        self.parentNodeStyle.cursor = value;\n        self.currentCursor = value;\n      }\n    },\n  });\n  Object.defineProperty(self.intf, 'orderDirection', {\n    get: function () {\n      return self.orderDirection;\n    },\n    set: function (value) {\n      if (value !== 'desc') {\n        value = 'asc';\n      }\n      self.orderDirection = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  Object.defineProperty(self.intf, 'orderBy', {\n    get: function () {\n      return self.orderBy;\n    },\n    set: function (value) {\n      if (\n        self.getSchema().find(function (col) {\n          return col.name === value;\n        }) === undefined\n      ) {\n        throw new Error('Cannot sort by unknown column name.');\n      }\n      self.orderBy = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  if (self.isComponent) {\n    Object.defineProperty(self.intf, 'offsetHeight', {\n      get: function () {\n        return self.canvas.offsetHeight;\n      },\n    });\n    Object.defineProperty(self.intf, 'offsetWidth', {\n      get: function () {\n        return self.canvas.offsetWidth;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'scrollHeight', {\n    get: function () {\n      return self.scrollBox.scrollHeight;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollWidth', {\n    get: function () {\n      return self.scrollBox.scrollWidth;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollTop', {\n    get: function () {\n      return self.scrollBox.scrollTop;\n    },\n    set: function (value) {\n      self.scrollBox.scrollTop = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollLeft', {\n    get: function () {\n      return self.scrollBox.scrollLeft;\n    },\n    set: function (value) {\n      self.scrollBox.scrollLeft = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'sizes', {\n    get: function () {\n      return self.sizes;\n    },\n  });\n  Object.defineProperty(self.intf, 'parentDOMNode', {\n    get: function () {\n      return self.parentDOMNode;\n    },\n  });\n  Object.defineProperty(self.intf, 'input', {\n    get: function () {\n      return self.input;\n    },\n  });\n  Object.defineProperty(self.intf, 'controlInput', {\n    get: function () {\n      return self.controlInput;\n    },\n  });\n  Object.defineProperty(self.intf, 'currentCell', {\n    get: function () {\n      return self.currentCell;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleCells', {\n    get: function () {\n      return self.visibleCells;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleRows', {\n    get: function () {\n      return self.visibleRows;\n    },\n  });\n  Object.defineProperty(self.intf, 'selections', {\n    get: function () {\n      return self.selections;\n    },\n  });\n  Object.defineProperty(self.intf, 'dragMode', {\n    get: function () {\n      return self.dragMode;\n    },\n  });\n  Object.defineProperty(self.intf, 'changes', {\n    get: function () {\n      return self.changes;\n    },\n  });\n  self.intf.formatters = self.formatters;\n  Object.defineProperty(self.intf, 'dataType', {\n    get: function () {\n      return self.dataType;\n    },\n    set: function (value) {\n      if (!self.parsers[value]) {\n        throw new Error('No parser for MIME type ' + value);\n      }\n      self.dataType = value;\n    },\n  });\n  self.eventNames.forEach(function (eventName) {\n    Object.defineProperty(self.intf, 'on' + eventName, {\n      get: function () {\n        return self.componentL1Events[eventName];\n      },\n      set: function (value) {\n        self.events[eventName] = [];\n        self.componentL1Events[eventName] = value;\n        if (!value) {\n          return;\n        }\n        self.addEventListener(eventName, value);\n      },\n    });\n  });\n  Object.defineProperty(self.intf, 'frozenRow', {\n    get: function () {\n      return self.frozenRow;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.visibleRows.length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible rows.',\n        );\n      }\n      self.frozenRow = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'frozenColumn', {\n    get: function () {\n      return self.frozenColumn;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.getVisibleSchema().length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible columns.',\n        );\n      }\n      self.frozenColumn = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\n    get: function () {\n      return {\n        top: self.scrollIndexTop,\n        right: self.scrollIndexRight,\n        bottom: self.scrollIndexBottom,\n        left: self.scrollIndexLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\n    get: function () {\n      return {\n        top: self.scrollPixelTop,\n        right: self.scrollPixelRight,\n        bottom: self.scrollPixelBottom,\n        left: self.scrollPixelLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'rowOrder', {\n    get: function () {\n      return self.orders.rows;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (!self.originalData || val.length < self.originalData.length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of rows.',\n        );\n      }\n      self.orders.rows = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'columnOrder', {\n    get: function () {\n      return self.orders.columns;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (val.length < self.getSchema().length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of columns.',\n        );\n      }\n      self.orders.columns = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'selectionBounds', {\n    get: function () {\n      return self.getSelectionBounds();\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedRows', {\n    get: function () {\n      return self.getSelectedData(true);\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedCells', {\n    get: function () {\n      return self.getSelectedData();\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleSchema', {\n    get: function () {\n      return self.getVisibleSchema().map(function eachDataRow(col) {\n        return col;\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\n    get: function () {\n      return self.treeGridAttributes;\n    },\n    set: function setTreeGridAttributes(value) {\n      self.treeGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\n    get: function () {\n      return self.cellGridAttributes;\n    },\n    set: function setCellGridAttributes(value) {\n      self.cellGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'ctx', {\n    get: function () {\n      return self.ctx;\n    },\n  });\n  Object.defineProperty(self.intf, 'schema', {\n    get: function schemaGetter() {\n      return self.getSchema();\n    },\n    set: function schemaSetter(value) {\n      if (value === undefined) {\n        // Issue #89 - allow schema to be set to initialized state\n        self.schema = undefined;\n        self.tempSchema = undefined;\n        self.dispatchEvent('schemachanged', { schema: undefined });\n        return;\n      }\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\n        throw new Error('Schema must be an array of objects.');\n      }\n      if (value[0].name === undefined) {\n        throw new Error(\n          'Expected schema to contain an object with at least a name property.',\n        );\n      }\n      self.schema = value.map(function eachSchemaColumn(column, index) {\n        column.width = column.width || self.style.cellWidth;\n        column.filter = column.filter || self.filter(column.type);\n        column.type = column.type || 'string';\n        column.index = index;\n        column.columnIndex = index;\n        column.rowIndex = -1;\n        return column;\n      });\n      self.tempSchema = undefined;\n      self.createNewRowData();\n      self.createColumnOrders();\n      self.tryLoadStoredSettings();\n      if (\n        self.storedSettings &&\n        typeof self.storedSettings.visibility === 'object'\n      ) {\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\n          if (\n            self.storedSettings &&\n            self.storedSettings.visibility[column.name] !== undefined\n          ) {\n            column.hidden = !self.storedSettings.visibility[column.name];\n          }\n        });\n      }\n      self.resize(true);\n      self.dispatchEvent('schemachanged', { schema: self.schema });\n    },\n  });\n  /**\n   * Gets an array of currently registered MIME types.\n   * @memberof canvasDatagrid\n   * @name getDataTypes\n   * @method\n   */\n  self.intf.getTypes = function () {\n    return Object.keys(self.parsers);\n  };\n  self.parseInnerHtml = function (data) {\n    if (!data || /^ +$/.test(data)) {\n      return [];\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      console.warn(\n        Error(\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\n            e.message +\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\n            'Use the canvas-datagrid.data property to set object data.',\n        ),\n      );\n    }\n    return data;\n  };\n  self.parsers['application/json+x-canvas-datagrid'] = function (\n    data,\n    callback,\n  ) {\n    self.parsers['application/x-canvas-datagrid'](\n      self.parseInnerHtml(data),\n      function (data, schema) {\n        return callback(data, schema);\n      },\n    );\n  };\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\n    return callback(data);\n  };\n  self.intf.parsers = self.parsers;\n  // send to dataType ETL function to extract from input data\n  // and transform into native [{}, {}] format\n  self.etl = function (data, callback) {\n    if (!self.intf.parsers[self.dataType]) {\n      throw new Error('Unsupported data type.');\n    }\n    self.intf.parsers[self.dataType](data, function (data, schema) {\n      // set the unfiltered/sorted data array\n      self.originalData = data;\n      self.viewData = Array.from(self.originalData);\n\n      if (Array.isArray(schema)) {\n        self.schema = schema;\n      }\n      // Issue #89 - allow schema to be auto-created every time data is set\n      if (self.attributes.autoGenerateSchema) {\n        self.schema = self.getSchemaFromData(data);\n      }\n      if (!self.schema) {\n        self.tempSchema = self.getSchemaFromData(data);\n      }\n      if (self.getSchema()) {\n        self.createColumnOrders();\n      }\n      // apply filter, sort, etc to incoming dataset, set viewData:\n      self.refresh();\n      // empty data was set\n      if (!self.schema && (self.originalData || []).length === 0) {\n        self.tempSchema = [{ name: '' }];\n      }\n      self.fitColumnToValues('cornerCell', true);\n      if (\n        (self.tempSchema && !self.schema) ||\n        self.attributes.autoGenerateSchema\n      ) {\n        self.createColumnOrders();\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\n      }\n      callback();\n    });\n  };\n  Object.defineProperty(self.intf, 'viewData', {\n    get: function () {\n      return self.viewData;\n    },\n  });\n  Object.defineProperty(self.intf, 'boundData', {\n    get: function () {\n      return self.originalData;\n    },\n  });\n  Object.defineProperty(self.intf, 'data', {\n    get: function dataGetter() {\n      return self.originalData;\n    },\n    set: function dataSetter(value) {\n      self.etl(value, function () {\n        self.changes = [];\n        self.createNewRowData();\n        if (\n          self.attributes.autoResizeColumns &&\n          self.originalData.length > 0 &&\n          self.storedSettings === undefined\n        ) {\n          self.autosize();\n        }\n        // set the header column to fit the numbers in it\n        self.fitColumnToValues('cornerCell', true);\n        self.createRowOrders();\n        self.tryLoadStoredSettings();\n        self.dispatchEvent('datachanged', { data: self.originalData });\n        self.resize(true);\n      });\n    },\n  });\n  self.initScrollBox = function () {\n    var sHeight = 0,\n      sWidth = 0,\n      scrollTop = 0,\n      scrollLeft = 0,\n      scrollHeight = 0,\n      scrollWidth = 0,\n      scrollBoxHeight = 20,\n      scrollBoxWidth = 20;\n    function setScrollTop(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollTop value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollHeight) {\n        value = scrollHeight;\n      }\n      if (scrollHeight < 0) {\n        value = 0;\n      }\n      scrollTop = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    function setScrollLeft(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollLeft value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollWidth) {\n        value = scrollWidth;\n      }\n      if (scrollWidth < 0) {\n        value = 0;\n      }\n      scrollLeft = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    self.scrollBox.toString = function () {\n      return (\n        '{\"width\": ' +\n        scrollWidth.toFixed(2) +\n        ', \"height\": ' +\n        scrollHeight.toFixed(2) +\n        ', \"left\": ' +\n        scrollLeft.toFixed(2) +\n        ', \"top\": ' +\n        scrollTop.toFixed(2) +\n        ', \"widthRatio\": ' +\n        self.scrollBox.widthBoxRatio.toFixed(5) +\n        ', \"heightRatio\": ' +\n        self.scrollBox.heightBoxRatio.toFixed(5) +\n        '}'\n      );\n    };\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\n      setScrollLeft(x, true);\n      setScrollTop(y, supressDrawEvent);\n    };\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\n      get: function () {\n        return scrollBoxHeight;\n      },\n      set: function (value) {\n        scrollBoxHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\n      get: function () {\n        return scrollBoxWidth;\n      },\n      set: function (value) {\n        scrollBoxWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'height', {\n      get: function () {\n        return sHeight;\n      },\n      set: function (value) {\n        sHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'width', {\n      get: function () {\n        return sWidth;\n      },\n      set: function (value) {\n        sWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\n      get: function () {\n        return scrollTop;\n      },\n      set: setScrollTop,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\n      get: function () {\n        return scrollLeft;\n      },\n      set: setScrollLeft,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\n      get: function () {\n        return scrollHeight;\n      },\n      set: function (value) {\n        if (scrollTop > value) {\n          scrollTop = Math.max(value, 0);\n        }\n        scrollHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\n      get: function () {\n        return scrollWidth;\n      },\n      set: function (value) {\n        if (scrollLeft > value) {\n          scrollLeft = Math.max(value, 0);\n        }\n        scrollWidth = value;\n      },\n    });\n  };\n  return;\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}